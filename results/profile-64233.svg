<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (34 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 2.94%)</title><rect x="10.0" y="707.0" width="34.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="718.0">CP..</text>
</g>
<g>
<title>retint_signal (1 samples, 2.94%)</title><rect x="10.0" y="691.0" width="34.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.0" y="702.0">re..</text>
</g>
<g>
<title>do_notify_resume (1 samples, 2.94%)</title><rect x="10.0" y="675.0" width="34.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.0" y="686.0">do..</text>
</g>
<g>
<title>task_work_run (1 samples, 2.94%)</title><rect x="10.0" y="659.0" width="34.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.0" y="670.0">ta..</text>
</g>
<g>
<title>task_numa_work (1 samples, 2.94%)</title><rect x="10.0" y="643.0" width="34.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.0" y="654.0">ta..</text>
</g>
<g>
<title>change_prot_numa (1 samples, 2.94%)</title><rect x="10.0" y="627.0" width="34.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.0" y="638.0">ch..</text>
</g>
<g>
<title>change_protection (1 samples, 2.94%)</title><rect x="10.0" y="611.0" width="34.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.0" y="622.0">ch..</text>
</g>
<g>
<title>change_pte_range (1 samples, 2.94%)</title><rect x="10.0" y="595.0" width="34.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.0" y="606.0">ch..</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 2.94%)</title><rect x="44.7" y="707.0" width="34.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="47.7" y="718.0">[n..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator$HeartbeatThread.run (3 samples, 8.82%)</title><rect x="79.4" y="707.0" width="104.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.4" y="718.0">org/apache/k..</text>
</g>
<g>
<title>java/lang/Object.wait (1 samples, 2.94%)</title><rect x="79.4" y="691.0" width="34.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.4" y="702.0">ja..</text>
</g>
<g>
<title>JVM_MonitorWait (1 samples, 2.94%)</title><rect x="79.4" y="675.0" width="34.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="82.4" y="686.0">JV..</text>
</g>
<g>
<title>ObjectMonitor::wait(long, bool, Thread*) (1 samples, 2.94%)</title><rect x="79.4" y="659.0" width="34.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="82.4" y="670.0">Ob..</text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 2.94%)</title><rect x="79.4" y="643.0" width="34.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="82.4" y="654.0">os..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.pollNoWakeup (2 samples, 5.88%)</title><rect x="114.1" y="691.0" width="69.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.1" y="702.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (2 samples, 5.88%)</title><rect x="114.1" y="675.0" width="69.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.1" y="686.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (2 samples, 5.88%)</title><rect x="114.1" y="659.0" width="69.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.1" y="670.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (2 samples, 5.88%)</title><rect x="114.1" y="643.0" width="69.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="654.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (2 samples, 5.88%)</title><rect x="114.1" y="627.0" width="69.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.1" y="638.0">org/apa..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (2 samples, 5.88%)</title><rect x="114.1" y="611.0" width="69.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.1" y="622.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 5.88%)</title><rect x="114.1" y="595.0" width="69.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.1" y="606.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2 samples, 5.88%)</title><rect x="114.1" y="579.0" width="69.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="590.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (2 samples, 5.88%)</title><rect x="114.1" y="563.0" width="69.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.1" y="574.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (1 samples, 2.94%)</title><rect x="114.1" y="547.0" width="34.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="558.0">su..</text>
</g>
<g>
<title>__GI_epoll_wait (1 samples, 2.94%)</title><rect x="114.1" y="531.0" width="34.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="117.1" y="542.0">__..</text>
</g>
<g>
<title>system_call_fastpath (1 samples, 2.94%)</title><rect x="114.1" y="515.0" width="34.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="117.1" y="526.0">sy..</text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 2.94%)</title><rect x="114.1" y="499.0" width="34.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="117.1" y="510.0">sy..</text>
</g>
<g>
<title>ep_poll (1 samples, 2.94%)</title><rect x="114.1" y="483.0" width="34.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="117.1" y="494.0">ep..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 2.94%)</title><rect x="114.1" y="467.0" width="34.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="117.1" y="478.0">_r..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.updateRegistrations (1 samples, 2.94%)</title><rect x="148.8" y="547.0" width="34.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.8" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollCtl (1 samples, 2.94%)</title><rect x="148.8" y="531.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.8" y="542.0">su..</text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 2.94%)</title><rect x="148.8" y="515.0" width="34.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="151.8" y="526.0">__..</text>
</g>
<g>
<title>system_call_fastpath (1 samples, 2.94%)</title><rect x="148.8" y="499.0" width="34.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="151.8" y="510.0">sy..</text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 2.94%)</title><rect x="148.8" y="483.0" width="34.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.8" y="494.0">sy..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.run (10 samples, 29.41%)</title><rect x="183.5" y="707.0" width="347.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="718.0">org/apache/kafka/streams/processor/internals/St..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.runLoop (10 samples, 29.41%)</title><rect x="183.5" y="691.0" width="347.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.5" y="702.0">org/apache/kafka/streams/processor/internals/St..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.runOnce (10 samples, 29.41%)</title><rect x="183.5" y="675.0" width="347.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="686.0">org/apache/kafka/streams/processor/internals/St..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 2.94%)</title><rect x="218.2" y="659.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.2" y="670.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 2.94%)</title><rect x="218.2" y="643.0" width="34.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.2" y="654.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/Rate.record (1 samples, 2.94%)</title><rect x="218.2" y="627.0" width="34.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.2" y="638.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 2.94%)</title><rect x="218.2" y="611.0" width="34.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.2" y="622.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/WindowedCount.update (1 samples, 2.94%)</title><rect x="218.2" y="595.0" width="34.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.2" y="606.0">or..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.pollRequests (4 samples, 11.76%)</title><rect x="252.9" y="659.0" width="138.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.9" y="670.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (4 samples, 11.76%)</title><rect x="252.9" y="643.0" width="138.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.9" y="654.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (4 samples, 11.76%)</title><rect x="252.9" y="627.0" width="138.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.9" y="638.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (4 samples, 11.76%)</title><rect x="252.9" y="611.0" width="138.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.9" y="622.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.rejoinNeededOrPending (1 samples, 2.94%)</title><rect x="252.9" y="595.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.9" y="606.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.partitionsAutoAssigned (1 samples, 2.94%)</title><rect x="252.9" y="579.0" width="34.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.9" y="590.0">or..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 2.94%)</title><rect x="252.9" y="563.0" width="34.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="255.9" y="574.0">Sh..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 2.94%)</title><rect x="252.9" y="547.0" width="34.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="255.9" y="558.0">Ob..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 2.94%)</title><rect x="287.6" y="595.0" width="34.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.6" y="606.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 2.94%)</title><rect x="287.6" y="579.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.6" y="590.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 2.94%)</title><rect x="287.6" y="563.0" width="34.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.6" y="574.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 2.94%)</title><rect x="287.6" y="547.0" width="34.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.6" y="558.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (1 samples, 2.94%)</title><rect x="287.6" y="531.0" width="34.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.6" y="542.0">or..</text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 2.94%)</title><rect x="287.6" y="515.0" width="34.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.6" y="526.0">su..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (2 samples, 5.88%)</title><rect x="322.4" y="595.0" width="69.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.4" y="606.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (2 samples, 5.88%)</title><rect x="322.4" y="579.0" width="69.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.4" y="590.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (1 samples, 2.94%)</title><rect x="322.4" y="563.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.4" y="574.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (1 samples, 2.94%)</title><rect x="322.4" y="547.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="558.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (1 samples, 2.94%)</title><rect x="322.4" y="531.0" width="34.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.4" y="542.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (1 samples, 2.94%)</title><rect x="322.4" y="515.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.4" y="526.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (1 samples, 2.94%)</title><rect x="322.4" y="499.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.4" y="510.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (1 samples, 2.94%)</title><rect x="322.4" y="483.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="494.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (1 samples, 2.94%)</title><rect x="322.4" y="467.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.4" y="478.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (1 samples, 2.94%)</title><rect x="322.4" y="451.0" width="34.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.4" y="462.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (1 samples, 2.94%)</title><rect x="322.4" y="435.0" width="34.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.4" y="446.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (1 samples, 2.94%)</title><rect x="322.4" y="419.0" width="34.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.4" y="430.0">or..</text>
</g>
<g>
<title>retint_signal (1 samples, 2.94%)</title><rect x="322.4" y="403.0" width="34.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.4" y="414.0">re..</text>
</g>
<g>
<title>do_notify_resume (1 samples, 2.94%)</title><rect x="322.4" y="387.0" width="34.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="325.4" y="398.0">do..</text>
</g>
<g>
<title>task_work_run (1 samples, 2.94%)</title><rect x="322.4" y="371.0" width="34.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="325.4" y="382.0">ta..</text>
</g>
<g>
<title>task_numa_work (1 samples, 2.94%)</title><rect x="322.4" y="355.0" width="34.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.4" y="366.0">ta..</text>
</g>
<g>
<title>change_prot_numa (1 samples, 2.94%)</title><rect x="322.4" y="339.0" width="34.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.4" y="350.0">ch..</text>
</g>
<g>
<title>change_protection (1 samples, 2.94%)</title><rect x="322.4" y="323.0" width="34.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.4" y="334.0">ch..</text>
</g>
<g>
<title>change_pte_range (1 samples, 2.94%)</title><rect x="322.4" y="307.0" width="34.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="325.4" y="318.0">ch..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.access$2000 (1 samples, 2.94%)</title><rect x="357.1" y="563.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.1" y="574.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.recordPartitionLead (1 samples, 2.94%)</title><rect x="357.1" y="547.0" width="34.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.1" y="558.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 2.94%)</title><rect x="357.1" y="531.0" width="34.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.1" y="542.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 2.94%)</title><rect x="357.1" y="515.0" width="34.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.1" y="526.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 2.94%)</title><rect x="357.1" y="499.0" width="34.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.1" y="510.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 2.94%)</title><rect x="357.1" y="483.0" width="34.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.1" y="494.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/Min.update (1 samples, 2.94%)</title><rect x="357.1" y="467.0" width="34.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.1" y="478.0">or..</text>
</g>
<g>
<title>page_fault (1 samples, 2.94%)</title><rect x="357.1" y="451.0" width="34.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.1" y="462.0">pa..</text>
</g>
<g>
<title>do_page_fault (1 samples, 2.94%)</title><rect x="357.1" y="435.0" width="34.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="360.1" y="446.0">do..</text>
</g>
<g>
<title>__do_page_fault (1 samples, 2.94%)</title><rect x="357.1" y="419.0" width="34.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="360.1" y="430.0">__..</text>
</g>
<g>
<title>handle_mm_fault (1 samples, 2.94%)</title><rect x="357.1" y="403.0" width="34.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.1" y="414.0">ha..</text>
</g>
<g>
<title>handle_pte_fault (1 samples, 2.94%)</title><rect x="357.1" y="387.0" width="34.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.1" y="398.0">ha..</text>
</g>
<g>
<title>do_numa_page (1 samples, 2.94%)</title><rect x="357.1" y="371.0" width="34.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.1" y="382.0">do..</text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 2.94%)</title><rect x="357.1" y="355.0" width="34.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.1" y="366.0">mi..</text>
</g>
<g>
<title>numamigrate_isolate_page (1 samples, 2.94%)</title><rect x="357.1" y="339.0" width="34.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.1" y="350.0">nu..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/TaskManager.process (4 samples, 11.76%)</title><rect x="391.8" y="659.0" width="138.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.8" y="670.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/AssignedStreamsTasks.process (4 samples, 11.76%)</title><rect x="391.8" y="643.0" width="138.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.8" y="654.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask.process (4 samples, 11.76%)</title><rect x="391.8" y="627.0" width="138.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.8" y="638.0">org/apache/kafka/..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/PartitionGroup.nextRecord (2 samples, 5.88%)</title><rect x="391.8" y="611.0" width="69.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.8" y="622.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordQueue.poll (2 samples, 5.88%)</title><rect x="391.8" y="595.0" width="69.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.8" y="606.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordQueue.updateHead (2 samples, 5.88%)</title><rect x="391.8" y="579.0" width="69.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.8" y="590.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordDeserializer.deserialize (2 samples, 5.88%)</title><rect x="391.8" y="563.0" width="69.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.8" y="574.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/SourceNode.deserializeValue (2 samples, 5.88%)</title><rect x="391.8" y="547.0" width="69.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.8" y="558.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/common/serialization/Deserializer.deserialize (2 samples, 5.88%)</title><rect x="391.8" y="531.0" width="69.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.8" y="542.0">org/apa..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (2 samples, 5.88%)</title><rect x="391.8" y="515.0" width="69.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.8" y="526.0">com/lin..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (2 samples, 5.88%)</title><rect x="391.8" y="499.0" width="69.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.8" y="510.0">com/lin..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (2 samples, 5.88%)</title><rect x="391.8" y="483.0" width="69.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.8" y="494.0">com/fas..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (1 samples, 2.94%)</title><rect x="391.8" y="467.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.8" y="478.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (1 samples, 2.94%)</title><rect x="391.8" y="451.0" width="34.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.8" y="462.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.&lt;init&gt; (1 samples, 2.94%)</title><rect x="391.8" y="435.0" width="34.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.8" y="446.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (1 samples, 2.94%)</title><rect x="426.5" y="467.0" width="34.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.5" y="478.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (1 samples, 2.94%)</title><rect x="426.5" y="451.0" width="34.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.5" y="462.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (1 samples, 2.94%)</title><rect x="426.5" y="435.0" width="34.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.5" y="446.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (1 samples, 2.94%)</title><rect x="426.5" y="419.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.5" y="430.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (1 samples, 2.94%)</title><rect x="426.5" y="403.0" width="34.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.5" y="414.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 2.94%)</title><rect x="426.5" y="387.0" width="34.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.5" y="398.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeObjectScope (1 samples, 2.94%)</title><rect x="426.5" y="371.0" width="34.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.5" y="382.0">co..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/SourceNode.process (1 samples, 2.94%)</title><rect x="461.2" y="611.0" width="34.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.2" y="622.0">or..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (1 samples, 2.94%)</title><rect x="461.2" y="595.0" width="34.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.2" y="606.0">or..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (1 samples, 2.94%)</title><rect x="461.2" y="579.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.2" y="590.0">or..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (1 samples, 2.94%)</title><rect x="461.2" y="563.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.2" y="574.0">or..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode.process (1 samples, 2.94%)</title><rect x="461.2" y="547.0" width="34.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.2" y="558.0">or..</text>
</g>
<g>
<title>org/apache/kafka/streams/kstream/internals/KStreamPeek$KStreamPeekProcessor.process (1 samples, 2.94%)</title><rect x="461.2" y="531.0" width="34.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.2" y="542.0">or..</text>
</g>
<g>
<title>com/mayreh/KafkaStreamsRunner$$Lambda$31/1008925772.apply (1 samples, 2.94%)</title><rect x="461.2" y="515.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.2" y="526.0">co..</text>
</g>
<g>
<title>com/mayreh/KafkaStreamsRunner.lambda$init$1 (1 samples, 2.94%)</title><rect x="461.2" y="499.0" width="34.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.2" y="510.0">co..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (1 samples, 2.94%)</title><rect x="461.2" y="483.0" width="34.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.2" y="494.0">co..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (1 samples, 2.94%)</title><rect x="461.2" y="467.0" width="34.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.2" y="478.0">co..</text>
</g>
<g>
<title>java/lang/Thread.sleep (1 samples, 2.94%)</title><rect x="461.2" y="451.0" width="34.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.2" y="462.0">ja..</text>
</g>
<g>
<title>JVM_Sleep (1 samples, 2.94%)</title><rect x="461.2" y="435.0" width="34.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="464.2" y="446.0">JV..</text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (1 samples, 2.94%)</title><rect x="461.2" y="419.0" width="34.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="464.2" y="430.0">os..</text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 2.94%)</title><rect x="461.2" y="403.0" width="34.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="464.2" y="414.0">__..</text>
</g>
<g>
<title>system_call_fastpath (1 samples, 2.94%)</title><rect x="461.2" y="387.0" width="34.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.2" y="398.0">sy..</text>
</g>
<g>
<title>sys_futex (1 samples, 2.94%)</title><rect x="461.2" y="371.0" width="34.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.2" y="382.0">sy..</text>
</g>
<g>
<title>do_futex (1 samples, 2.94%)</title><rect x="461.2" y="355.0" width="34.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.2" y="366.0">do..</text>
</g>
<g>
<title>futex_wait (1 samples, 2.94%)</title><rect x="461.2" y="339.0" width="34.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="464.2" y="350.0">fu..</text>
</g>
<g>
<title>hrtimer_init (1 samples, 2.94%)</title><rect x="461.2" y="323.0" width="34.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.2" y="334.0">hr..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask.updateProcessorContext (1 samples, 2.94%)</title><rect x="495.9" y="611.0" width="34.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.9" y="622.0">or..</text>
</g>
<g>
<title>start_thread (19 samples, 55.88%)</title><rect x="530.6" y="707.0" width="659.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="533.6" y="718.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (19 samples, 55.88%)</title><rect x="530.6" y="691.0" width="659.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="533.6" y="702.0">java_start(Thread*)</text>
</g>
<g>
<title>JavaThread::run() (19 samples, 55.88%)</title><rect x="530.6" y="675.0" width="659.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="533.6" y="686.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (19 samples, 55.88%)</title><rect x="530.6" y="659.0" width="659.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="533.6" y="670.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (19 samples, 55.88%)</title><rect x="530.6" y="643.0" width="659.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="533.6" y="654.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (19 samples, 55.88%)</title><rect x="530.6" y="627.0" width="659.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="533.6" y="638.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (19 samples, 55.88%)</title><rect x="530.6" y="611.0" width="659.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.6" y="622.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (19 samples, 55.88%)</title><rect x="530.6" y="595.0" width="659.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="533.6" y="606.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)</text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 26.47%)</title><rect x="530.6" y="579.0" width="312.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="533.6" y="590.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 2.94%)</title><rect x="530.6" y="563.0" width="34.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="533.6" y="574.0">Co..</text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 2.94%)</title><rect x="530.6" y="547.0" width="34.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="533.6" y="558.0">De..</text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 2.94%)</title><rect x="530.6" y="531.0" width="34.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="533.6" y="542.0">De..</text>
</g>
<g>
<title>Matcher::match() (1 samples, 2.94%)</title><rect x="565.3" y="563.0" width="34.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="568.3" y="574.0">Ma..</text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 2.94%)</title><rect x="565.3" y="547.0" width="34.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="568.3" y="558.0">Ma..</text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 2.94%)</title><rect x="565.3" y="531.0" width="34.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="568.3" y="542.0">Ar..</text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 20.59%)</title><rect x="600.0" y="563.0" width="242.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="603.0" y="574.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 2.94%)</title><rect x="600.0" y="547.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="603.0" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 2.94%)</title><rect x="600.0" y="531.0" width="34.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="603.0" y="542.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 2.94%)</title><rect x="634.7" y="547.0" width="34.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="637.7" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 2.94%)</title><rect x="634.7" y="531.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="637.7" y="542.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int) (1 samples, 2.94%)</title><rect x="634.7" y="515.0" width="34.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="637.7" y="526.0">Ph..</text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 2.94%)</title><rect x="634.7" y="499.0" width="34.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="637.7" y="510.0">Re..</text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 2.94%)</title><rect x="669.4" y="547.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="672.4" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 2.94%)</title><rect x="669.4" y="531.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="672.4" y="542.0">Ph..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 2.94%)</title><rect x="669.4" y="515.0" width="34.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="672.4" y="526.0">In..</text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 2.94%)</title><rect x="704.1" y="547.0" width="34.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.1" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 2.94%)</title><rect x="738.8" y="547.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="741.8" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 2.94%)</title><rect x="738.8" y="531.0" width="34.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="741.8" y="542.0">Ph..</text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 5.88%)</title><rect x="773.5" y="547.0" width="69.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="776.5" y="558.0">PhaseCo..</text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 5.88%)</title><rect x="773.5" y="531.0" width="69.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="776.5" y="542.0">PhaseCo..</text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (2 samples, 5.88%)</title><rect x="773.5" y="515.0" width="69.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="776.5" y="526.0">PhaseCo..</text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 2.94%)</title><rect x="773.5" y="499.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="776.5" y="510.0">In..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 2.94%)</title><rect x="773.5" y="483.0" width="34.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="776.5" y="494.0">In..</text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 2.94%)</title><rect x="808.2" y="499.0" width="34.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="811.2" y="510.0">Ph..</text>
</g>
<g>
<title>Compile::Optimize() (8 samples, 23.53%)</title><rect x="842.9" y="579.0" width="277.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="845.9" y="590.0">Compile::Optimize()</text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 2.94%)</title><rect x="842.9" y="563.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="845.9" y="574.0">Ph..</text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 2.94%)</title><rect x="842.9" y="547.0" width="34.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="845.9" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 2.94%)</title><rect x="842.9" y="531.0" width="34.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="845.9" y="542.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (6 samples, 17.65%)</title><rect x="877.6" y="563.0" width="208.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="880.6" y="574.0">PhaseIdealLoop::build_and_o..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 2.94%)</title><rect x="877.6" y="547.0" width="34.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="880.6" y="558.0">Id..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 2.94%)</title><rect x="877.6" y="531.0" width="34.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="880.6" y="542.0">Id..</text>
</g>
<g>
<title>PhaseIdealLoop::do_range_check(IdealLoopTree*, Node_List&amp;) (1 samples, 2.94%)</title><rect x="877.6" y="515.0" width="34.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="880.6" y="526.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 5.88%)</title><rect x="912.4" y="547.0" width="69.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="915.4" y="558.0">PhaseId..</text>
</g>
<g>
<title>page_fault (1 samples, 2.94%)</title><rect x="947.1" y="531.0" width="34.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="950.1" y="542.0">pa..</text>
</g>
<g>
<title>do_page_fault (1 samples, 2.94%)</title><rect x="947.1" y="515.0" width="34.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="950.1" y="526.0">do..</text>
</g>
<g>
<title>__do_page_fault (1 samples, 2.94%)</title><rect x="947.1" y="499.0" width="34.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="950.1" y="510.0">__..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 2.94%)</title><rect x="981.8" y="547.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.8" y="558.0">Ph..</text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 5.88%)</title><rect x="1016.5" y="547.0" width="69.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1019.5" y="558.0">PhaseIt..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 5.88%)</title><rect x="1016.5" y="531.0" width="69.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1019.5" y="542.0">PhaseIt..</text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 2.94%)</title><rect x="1016.5" y="515.0" width="34.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1019.5" y="526.0">St..</text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 2.94%)</title><rect x="1016.5" y="499.0" width="34.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1019.5" y="510.0">Me..</text>
</g>
<g>
<title>SubNode::Value(PhaseTransform*) const (1 samples, 2.94%)</title><rect x="1051.2" y="515.0" width="34.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.2" y="526.0">Su..</text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 2.94%)</title><rect x="1085.9" y="563.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1088.9" y="574.0">Ph..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 2.94%)</title><rect x="1085.9" y="547.0" width="34.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1088.9" y="558.0">Ph..</text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 2.94%)</title><rect x="1085.9" y="531.0" width="34.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1088.9" y="542.0">Ph..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 2.94%)</title><rect x="1120.6" y="579.0" width="34.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.6" y="590.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 2.94%)</title><rect x="1120.6" y="563.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.6" y="574.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 2.94%)</title><rect x="1120.6" y="547.0" width="34.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.6" y="558.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 2.94%)</title><rect x="1120.6" y="531.0" width="34.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.6" y="542.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 2.94%)</title><rect x="1120.6" y="515.0" width="34.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1123.6" y="526.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (1 samples, 2.94%)</title><rect x="1120.6" y="499.0" width="34.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.6" y="510.0">Pa..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 2.94%)</title><rect x="1120.6" y="483.0" width="34.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.6" y="494.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 2.94%)</title><rect x="1120.6" y="467.0" width="34.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1123.6" y="478.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 2.94%)</title><rect x="1120.6" y="451.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.6" y="462.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 2.94%)</title><rect x="1120.6" y="435.0" width="34.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.6" y="446.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 2.94%)</title><rect x="1120.6" y="419.0" width="34.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.6" y="430.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (1 samples, 2.94%)</title><rect x="1120.6" y="403.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.6" y="414.0">Pa..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 2.94%)</title><rect x="1120.6" y="387.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.6" y="398.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 2.94%)</title><rect x="1120.6" y="371.0" width="34.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1123.6" y="382.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 2.94%)</title><rect x="1120.6" y="355.0" width="34.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.6" y="366.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 2.94%)</title><rect x="1120.6" y="339.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.6" y="350.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 2.94%)</title><rect x="1120.6" y="323.0" width="34.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1123.6" y="334.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (1 samples, 2.94%)</title><rect x="1120.6" y="307.0" width="34.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.6" y="318.0">Pa..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 2.94%)</title><rect x="1120.6" y="291.0" width="34.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.6" y="302.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 2.94%)</title><rect x="1120.6" y="275.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.6" y="286.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 2.94%)</title><rect x="1120.6" y="259.0" width="34.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.6" y="270.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 2.94%)</title><rect x="1120.6" y="243.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.6" y="254.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 2.94%)</title><rect x="1120.6" y="227.0" width="34.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.6" y="238.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (1 samples, 2.94%)</title><rect x="1120.6" y="211.0" width="34.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.6" y="222.0">Pa..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 2.94%)</title><rect x="1120.6" y="195.0" width="34.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.6" y="206.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 2.94%)</title><rect x="1120.6" y="179.0" width="34.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.6" y="190.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 2.94%)</title><rect x="1120.6" y="163.0" width="34.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.6" y="174.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 2.94%)</title><rect x="1120.6" y="147.0" width="34.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.6" y="158.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 2.94%)</title><rect x="1120.6" y="131.0" width="34.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.6" y="142.0">Pa..</text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 2.94%)</title><rect x="1120.6" y="115.0" width="34.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.6" y="126.0">Pa..</text>
</g>
<g>
<title>Type_Array::grow(unsigned int) (1 samples, 2.94%)</title><rect x="1120.6" y="99.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.6" y="110.0">Ty..</text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 2.94%)</title><rect x="1120.6" y="83.0" width="34.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1123.6" y="94.0">__..</text>
</g>
<g>
<title>page_fault (1 samples, 2.94%)</title><rect x="1120.6" y="67.0" width="34.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1123.6" y="78.0">pa..</text>
</g>
<g>
<title>do_page_fault (1 samples, 2.94%)</title><rect x="1120.6" y="51.0" width="34.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1123.6" y="62.0">do..</text>
</g>
<g>
<title>__do_page_fault (1 samples, 2.94%)</title><rect x="1120.6" y="35.0" width="34.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.6" y="46.0">__..</text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*) (1 samples, 2.94%)</title><rect x="1155.3" y="579.0" width="34.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.3" y="590.0">Ph..</text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 2.94%)</title><rect x="1155.3" y="563.0" width="34.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.3" y="574.0">Co..</text>
</g>
</g>
</svg>
