<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (240 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.42%)</title><rect x="10.0" y="947.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.run (210 samples, 87.50%)</title><rect x="14.9" y="947.0" width="1032.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="958.0">org/apache/kafka/streams/processor/internals/StreamThread.run</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.runLoop (210 samples, 87.50%)</title><rect x="14.9" y="931.0" width="1032.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="942.0">org/apache/kafka/streams/processor/internals/StreamThread.runLoop</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.runOnce (210 samples, 87.50%)</title><rect x="14.9" y="915.0" width="1032.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.9" y="926.0">org/apache/kafka/streams/processor/internals/StreamThread.runOnce</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (19 samples, 7.92%)</title><rect x="19.8" y="899.0" width="93.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.8" y="910.0">org/apache/..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (17 samples, 7.08%)</title><rect x="29.7" y="883.0" width="83.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.7" y="894.0">org/apach..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.83%)</title><rect x="64.1" y="867.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.1" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (2 samples, 0.83%)</title><rect x="64.1" y="851.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.1" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.checkQuotas (6 samples, 2.50%)</title><rect x="73.9" y="867.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.9" y="878.0">or..</text>
</g>
<g>
<title>itable stub (1 samples, 0.42%)</title><rect x="83.8" y="851.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="86.8" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/MetricConfig.quota (2 samples, 0.83%)</title><rect x="88.7" y="851.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.7" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/CumulativeCount.record (1 samples, 0.42%)</title><rect x="98.5" y="851.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.5" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/Rate.record (1 samples, 0.42%)</title><rect x="103.4" y="867.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.4" y="878.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 0.42%)</title><rect x="103.4" y="851.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.4" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 0.42%)</title><rect x="108.3" y="867.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.3" y="878.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.addRecordsToTasks (4 samples, 1.67%)</title><rect x="113.2" y="899.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.2" y="910.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask.addRecords (4 samples, 1.67%)</title><rect x="113.2" y="883.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.2" y="894.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/PartitionGroup.addRawRecords (4 samples, 1.67%)</title><rect x="113.2" y="867.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.2" y="878.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordQueue.addRawRecords (4 samples, 1.67%)</title><rect x="113.2" y="851.0" width="19.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.2" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (4 samples, 1.67%)</title><rect x="113.2" y="835.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.2" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.advanceNowAndComputeLatency (12 samples, 5.00%)</title><rect x="132.9" y="899.0" width="59.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.9" y="910.0">org/ap..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/SystemTime.milliseconds (2 samples, 0.83%)</title><rect x="167.3" y="883.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.3" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.83%)</title><rect x="167.3" y="867.0" width="9.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="170.3" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.42%)</title><rect x="172.2" y="851.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="175.2" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 1.25%)</title><rect x="177.2" y="883.0" width="14.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="180.2" y="894.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 1.25%)</title><rect x="177.2" y="867.0" width="14.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="180.2" y="878.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamThread.pollRequests (52 samples, 21.67%)</title><rect x="191.9" y="899.0" width="255.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.9" y="910.0">org/apache/kafka/streams/processor..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (52 samples, 21.67%)</title><rect x="191.9" y="883.0" width="255.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.9" y="894.0">org/apache/kafka/clients/consumer/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (52 samples, 21.67%)</title><rect x="191.9" y="867.0" width="255.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.9" y="878.0">org/apache/kafka/clients/consumer/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (41 samples, 17.08%)</title><rect x="191.9" y="851.0" width="201.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.9" y="862.0">org/apache/kafka/clients/c..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (14 samples, 5.83%)</title><rect x="191.9" y="835.0" width="68.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.9" y="846.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (14 samples, 5.83%)</title><rect x="191.9" y="819.0" width="68.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.9" y="830.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (13 samples, 5.42%)</title><rect x="191.9" y="803.0" width="63.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.9" y="814.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.handleCompletedReceives (2 samples, 0.83%)</title><rect x="191.9" y="787.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.9" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractResponse.parseResponse (2 samples, 0.83%)</title><rect x="191.9" y="771.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.9" y="782.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/FetchResponse.parse (2 samples, 0.83%)</title><rect x="191.9" y="755.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.9" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Struct.get (1 samples, 0.42%)</title><rect x="191.9" y="739.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.9" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Struct.getInt (1 samples, 0.42%)</title><rect x="191.9" y="723.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.9" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Struct.get (1 samples, 0.42%)</title><rect x="191.9" y="707.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.9" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Schema.get (1 samples, 0.42%)</title><rect x="191.9" y="691.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.42%)</title><rect x="191.9" y="675.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.42%)</title><rect x="191.9" y="659.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.9" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Struct.getArray (1 samples, 0.42%)</title><rect x="196.8" y="739.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.8" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Struct.get (1 samples, 0.42%)</title><rect x="196.8" y="723.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.8" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Schema.get (1 samples, 0.42%)</title><rect x="196.8" y="707.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.42%)</title><rect x="196.8" y="691.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.42%)</title><rect x="196.8" y="675.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.8" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (11 samples, 4.58%)</title><rect x="201.8" y="787.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.8" y="798.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (8 samples, 3.33%)</title><rect x="201.8" y="771.0" width="39.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.8" y="782.0">org..</text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.attemptRead (8 samples, 3.33%)</title><rect x="201.8" y="755.0" width="39.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.8" y="766.0">org..</text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.read (7 samples, 2.92%)</title><rect x="201.8" y="739.0" width="34.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.8" y="750.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.receive (7 samples, 2.92%)</title><rect x="201.8" y="723.0" width="34.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.8" y="734.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/network/NetworkReceive.readFrom (7 samples, 2.92%)</title><rect x="201.8" y="707.0" width="34.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.8" y="718.0">or..</text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.read (7 samples, 2.92%)</title><rect x="201.8" y="691.0" width="34.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.8" y="702.0">or..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 2.92%)</title><rect x="201.8" y="675.0" width="34.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.8" y="686.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 2.92%)</title><rect x="201.8" y="659.0" width="34.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.8" y="670.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (7 samples, 2.92%)</title><rect x="201.8" y="643.0" width="34.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.8" y="654.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 2.92%)</title><rect x="201.8" y="627.0" width="34.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.8" y="638.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (7 samples, 2.92%)</title><rect x="201.8" y="611.0" width="34.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.8" y="622.0">su..</text>
</g>
<g>
<title>__read (7 samples, 2.92%)</title><rect x="201.8" y="595.0" width="34.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="204.8" y="606.0">__..</text>
</g>
<g>
<title>system_call_fastpath (6 samples, 2.50%)</title><rect x="206.7" y="579.0" width="29.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="209.7" y="590.0">sy..</text>
</g>
<g>
<title>sys_read (6 samples, 2.50%)</title><rect x="206.7" y="563.0" width="29.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="209.7" y="574.0">sy..</text>
</g>
<g>
<title>vfs_read (6 samples, 2.50%)</title><rect x="206.7" y="547.0" width="29.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="209.7" y="558.0">vf..</text>
</g>
<g>
<title>do_sync_read (6 samples, 2.50%)</title><rect x="206.7" y="531.0" width="29.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.7" y="542.0">do..</text>
</g>
<g>
<title>sock_aio_read (6 samples, 2.50%)</title><rect x="206.7" y="515.0" width="29.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="209.7" y="526.0">so..</text>
</g>
<g>
<title>sock_aio_read.part.9 (6 samples, 2.50%)</title><rect x="206.7" y="499.0" width="29.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="209.7" y="510.0">so..</text>
</g>
<g>
<title>inet_recvmsg (5 samples, 2.08%)</title><rect x="206.7" y="483.0" width="24.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.7" y="494.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 2.08%)</title><rect x="206.7" y="467.0" width="24.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="209.7" y="478.0">t..</text>
</g>
<g>
<title>skb_copy_datagram_iovec (2 samples, 0.83%)</title><rect x="206.7" y="451.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="209.7" y="462.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.83%)</title><rect x="206.7" y="435.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="209.7" y="446.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 1.25%)</title><rect x="216.5" y="451.0" width="14.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.5" y="462.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 1.25%)</title><rect x="216.5" y="435.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="219.5" y="446.0"></text>
</g>
<g>
<title>tcp_transmit_skb (3 samples, 1.25%)</title><rect x="216.5" y="419.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.5" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 1.25%)</title><rect x="216.5" y="403.0" width="14.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.5" y="414.0"></text>
</g>
<g>
<title>ip_local_out_sk (3 samples, 1.25%)</title><rect x="216.5" y="387.0" width="14.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="219.5" y="398.0"></text>
</g>
<g>
<title>__ip_local_out_sk (1 samples, 0.42%)</title><rect x="216.5" y="371.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.5" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.42%)</title><rect x="216.5" y="355.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="219.5" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (1 samples, 0.42%)</title><rect x="216.5" y="339.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.5" y="350.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.83%)</title><rect x="221.4" y="371.0" width="9.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="224.4" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.83%)</title><rect x="221.4" y="355.0" width="9.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="224.4" y="366.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.83%)</title><rect x="221.4" y="339.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="224.4" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.83%)</title><rect x="221.4" y="323.0" width="9.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="224.4" y="334.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.83%)</title><rect x="221.4" y="307.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="224.4" y="318.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.83%)</title><rect x="221.4" y="291.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.4" y="302.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.83%)</title><rect x="221.4" y="275.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="224.4" y="286.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.83%)</title><rect x="221.4" y="259.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="224.4" y="270.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.83%)</title><rect x="221.4" y="243.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="224.4" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.83%)</title><rect x="221.4" y="227.0" width="9.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="224.4" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.83%)</title><rect x="221.4" y="211.0" width="9.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="224.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.83%)</title><rect x="221.4" y="195.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.83%)</title><rect x="221.4" y="179.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.83%)</title><rect x="221.4" y="163.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.4" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.83%)</title><rect x="221.4" y="147.0" width="9.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="224.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.83%)</title><rect x="221.4" y="131.0" width="9.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="224.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.83%)</title><rect x="221.4" y="115.0" width="9.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.83%)</title><rect x="221.4" y="99.0" width="9.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="224.4" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.42%)</title><rect x="221.4" y="83.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.42%)</title><rect x="221.4" y="67.0" width="4.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="224.4" y="78.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.42%)</title><rect x="221.4" y="51.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.4" y="62.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.42%)</title><rect x="221.4" y="35.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.42%)</title><rect x="226.3" y="83.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="229.3" y="94.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.42%)</title><rect x="231.2" y="483.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.2" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.addToCompletedReceives (1 samples, 0.42%)</title><rect x="236.2" y="739.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.2" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector$SelectorMetrics.recordCompletedReceive (1 samples, 0.42%)</title><rect x="236.2" y="723.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.2" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.42%)</title><rect x="236.2" y="707.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.2" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.42%)</title><rect x="236.2" y="691.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.2" y="702.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (3 samples, 1.25%)</title><rect x="241.1" y="771.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3 samples, 1.25%)</title><rect x="241.1" y="755.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 1.25%)</title><rect x="241.1" y="739.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (3 samples, 1.25%)</title><rect x="241.1" y="723.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (2 samples, 0.83%)</title><rect x="246.0" y="707.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (2 samples, 0.83%)</title><rect x="246.0" y="691.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.0" y="702.0"></text>
</g>
<g>
<title>__GI_epoll_wait (2 samples, 0.83%)</title><rect x="246.0" y="675.0" width="9.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="249.0" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.83%)</title><rect x="246.0" y="659.0" width="9.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.0" y="670.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.83%)</title><rect x="246.0" y="643.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="249.0" y="654.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.83%)</title><rect x="246.0" y="627.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="249.0" y="638.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (1 samples, 0.42%)</title><rect x="246.0" y="611.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="249.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.42%)</title><rect x="246.0" y="595.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.0" y="606.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.42%)</title><rect x="250.9" y="611.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.9" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.42%)</title><rect x="250.9" y="595.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.9" y="606.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.42%)</title><rect x="250.9" y="579.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.9" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.firePendingCompletedRequests (1 samples, 0.42%)</title><rect x="255.8" y="803.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.8" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$RequestFutureCompletionHandler.fireCompletion (1 samples, 0.42%)</title><rect x="255.8" y="787.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.8" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/RequestFuture.complete (1 samples, 0.42%)</title><rect x="255.8" y="771.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.8" y="782.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/RequestFuture.fireSuccess (1 samples, 0.42%)</title><rect x="255.8" y="755.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.8" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$1.onSuccess (1 samples, 0.42%)</title><rect x="255.8" y="739.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.8" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$1.onSuccess (1 samples, 0.42%)</title><rect x="255.8" y="723.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.8" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (25 samples, 10.42%)</title><rect x="260.8" y="835.0" width="122.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.8" y="846.0">org/apache/kafk..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (24 samples, 10.00%)</title><rect x="260.8" y="819.0" width="118.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.8" y="830.0">org/apache/kaf..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (24 samples, 10.00%)</title><rect x="260.8" y="803.0" width="118.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.8" y="814.0">org/apache/kaf..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (24 samples, 10.00%)</title><rect x="260.8" y="787.0" width="118.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.8" y="798.0">org/apache/kaf..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.42%)</title><rect x="265.7" y="771.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.7" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.42%)</title><rect x="265.7" y="755.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.42%)</title><rect x="265.7" y="739.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="268.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.42%)</title><rect x="265.7" y="723.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.7" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.42%)</title><rect x="265.7" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.7" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (7 samples, 2.92%)</title><rect x="270.6" y="771.0" width="34.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.6" y="782.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (2 samples, 0.83%)</title><rect x="270.6" y="755.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (2 samples, 0.83%)</title><rect x="270.6" y="739.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.6" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (2 samples, 0.83%)</title><rect x="270.6" y="723.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.6" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (2 samples, 0.83%)</title><rect x="270.6" y="707.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.6" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (2 samples, 0.83%)</title><rect x="270.6" y="691.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.6" y="702.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (2 samples, 0.83%)</title><rect x="270.6" y="675.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.6" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (2 samples, 0.83%)</title><rect x="270.6" y="659.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.6" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (5 samples, 2.08%)</title><rect x="280.4" y="755.0" width="24.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.4" y="766.0">o..</text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (5 samples, 2.08%)</title><rect x="280.4" y="739.0" width="24.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.4" y="750.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.access$3500 (15 samples, 6.25%)</title><rect x="305.0" y="771.0" width="73.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.0" y="782.0">org/apac..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.parseRecord (15 samples, 6.25%)</title><rect x="305.0" y="755.0" width="73.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="766.0">org/apac..</text>
</g>
<g>
<title>org/apache/kafka/common/header/internals/RecordHeaders.&lt;init&gt; (15 samples, 6.25%)</title><rect x="305.0" y="739.0" width="73.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.0" y="750.0">org/apac..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (15 samples, 6.25%)</title><rect x="305.0" y="723.0" width="73.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 2.50%)</title><rect x="349.3" y="707.0" width="29.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.3" y="718.0">ja..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 1.25%)</title><rect x="364.0" y="691.0" width="14.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="367.0" y="702.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.initializeCompletedFetch (1 samples, 0.42%)</title><rect x="378.8" y="819.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.8" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.updateHighWatermark (1 samples, 0.42%)</title><rect x="378.8" y="803.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.8" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (2 samples, 0.83%)</title><rect x="383.7" y="835.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.7" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (2 samples, 0.83%)</title><rect x="383.7" y="819.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.42%)</title><rect x="383.7" y="803.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.7" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$$Lambda$71/2101461124.accept (1 samples, 0.42%)</title><rect x="383.7" y="787.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.7" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.lambda$prepareFetchRequests$8 (1 samples, 0.42%)</title><rect x="383.7" y="771.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.7" y="782.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.maybeValidatePositionForCurrentLeader (1 samples, 0.42%)</title><rect x="383.7" y="755.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.7" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchablePartitions (1 samples, 0.42%)</title><rect x="388.6" y="803.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.6" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.fetchablePartitions (1 samples, 0.42%)</title><rect x="388.6" y="787.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.42%)</title><rect x="388.6" y="771.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.42%)</title><rect x="388.6" y="755.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.42%)</title><rect x="388.6" y="739.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.42%)</title><rect x="388.6" y="723.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.42%)</title><rect x="388.6" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.42%)</title><rect x="388.6" y="691.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.42%)</title><rect x="388.6" y="675.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.42%)</title><rect x="388.6" y="659.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.42%)</title><rect x="388.6" y="643.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$88/1033139643.get (1 samples, 0.42%)</title><rect x="388.6" y="627.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.6" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateAssignmentMetadataIfNeeded (4 samples, 1.67%)</title><rect x="393.5" y="851.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.5" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateFetchPositions (3 samples, 1.25%)</title><rect x="393.5" y="835.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.5" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsIfNeeded (3 samples, 1.25%)</title><rect x="393.5" y="819.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.42%)</title><rect x="393.5" y="803.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.42%)</title><rect x="393.5" y="787.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.42%)</title><rect x="393.5" y="771.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.5" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.42%)</title><rect x="393.5" y="755.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.5" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsAsync (1 samples, 0.42%)</title><rect x="398.4" y="803.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.4" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.regroupFetchPositionsByLeader (1 samples, 0.42%)</title><rect x="398.4" y="787.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.4" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.partitionsNeedingValidation (1 samples, 0.42%)</title><rect x="403.3" y="803.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.3" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.collectPartitions (1 samples, 0.42%)</title><rect x="403.3" y="787.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.42%)</title><rect x="403.3" y="771.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.42%)</title><rect x="403.3" y="755.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.42%)</title><rect x="403.3" y="739.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.42%)</title><rect x="403.3" y="723.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.42%)</title><rect x="403.3" y="707.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.42%)</title><rect x="403.3" y="691.0" width="5.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="406.3" y="702.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.poll (1 samples, 0.42%)</title><rect x="408.2" y="835.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.2" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator.coordinatorUnknown (1 samples, 0.42%)</title><rect x="408.2" y="819.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.2" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator.checkAndGetCoordinator (1 samples, 0.42%)</title><rect x="408.2" y="803.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.2" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.transmitSends (6 samples, 2.50%)</title><rect x="413.2" y="851.0" width="29.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.2" y="862.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (5 samples, 2.08%)</title><rect x="413.2" y="835.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.2" y="846.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.completeResponses (1 samples, 0.42%)</title><rect x="413.2" y="819.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.2" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (4 samples, 1.67%)</title><rect x="418.1" y="819.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.1" y="830.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.42%)</title><rect x="418.1" y="803.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="421.1" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.42%)</title><rect x="418.1" y="787.0" width="4.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="421.1" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (3 samples, 1.25%)</title><rect x="423.0" y="803.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.0" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.attemptWrite (3 samples, 1.25%)</title><rect x="423.0" y="787.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.0" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.write (3 samples, 1.25%)</title><rect x="423.0" y="771.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.0" y="782.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.write (2 samples, 0.83%)</title><rect x="423.0" y="755.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.0" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/ByteBufferSend.writeTo (2 samples, 0.83%)</title><rect x="423.0" y="739.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.0" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.write (2 samples, 0.83%)</title><rect x="423.0" y="723.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.0" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.83%)</title><rect x="423.0" y="707.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.83%)</title><rect x="423.0" y="691.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.83%)</title><rect x="423.0" y="675.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.83%)</title><rect x="423.0" y="659.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.83%)</title><rect x="423.0" y="643.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.0" y="654.0"></text>
</g>
<g>
<title>__writev (2 samples, 0.83%)</title><rect x="423.0" y="627.0" width="9.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="426.0" y="638.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.83%)</title><rect x="423.0" y="611.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="426.0" y="622.0"></text>
</g>
<g>
<title>sys_writev (2 samples, 0.83%)</title><rect x="423.0" y="595.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="426.0" y="606.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.83%)</title><rect x="423.0" y="579.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.0" y="590.0"></text>
</g>
<g>
<title>do_readv_writev (2 samples, 0.83%)</title><rect x="423.0" y="563.0" width="9.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.0" y="574.0"></text>
</g>
<g>
<title>do_sync_readv_writev (2 samples, 0.83%)</title><rect x="423.0" y="547.0" width="9.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="426.0" y="558.0"></text>
</g>
<g>
<title>sock_aio_write (2 samples, 0.83%)</title><rect x="423.0" y="531.0" width="9.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="426.0" y="542.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.83%)</title><rect x="423.0" y="515.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.0" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.83%)</title><rect x="423.0" y="499.0" width="9.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="426.0" y="510.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.83%)</title><rect x="423.0" y="483.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="426.0" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.83%)</title><rect x="423.0" y="467.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.0" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.83%)</title><rect x="423.0" y="451.0" width="9.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.0" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (2 samples, 0.83%)</title><rect x="423.0" y="435.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.0" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.83%)</title><rect x="423.0" y="419.0" width="9.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="426.0" y="430.0"></text>
</g>
<g>
<title>ip_local_out_sk (2 samples, 0.83%)</title><rect x="423.0" y="403.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.0" y="414.0"></text>
</g>
<g>
<title>__ip_local_out_sk (1 samples, 0.42%)</title><rect x="423.0" y="387.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="426.0" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.42%)</title><rect x="423.0" y="371.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.0" y="382.0"></text>
</g>
<g>
<title>nf_iterate (1 samples, 0.42%)</title><rect x="423.0" y="355.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="426.0" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.42%)</title><rect x="423.0" y="339.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="426.0" y="350.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.42%)</title><rect x="423.0" y="323.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="426.0" y="334.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.42%)</title><rect x="427.9" y="387.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="430.9" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.42%)</title><rect x="427.9" y="371.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.9" y="382.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.42%)</title><rect x="427.9" y="355.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="430.9" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.42%)</title><rect x="427.9" y="339.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="430.9" y="350.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.42%)</title><rect x="427.9" y="323.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.9" y="334.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.42%)</title><rect x="427.9" y="307.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.9" y="318.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.42%)</title><rect x="427.9" y="291.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="430.9" y="302.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector$SelectorMetrics.recordBytesSent (1 samples, 0.42%)</title><rect x="432.8" y="755.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.8" y="766.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.42%)</title><rect x="432.8" y="739.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.8" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.42%)</title><rect x="432.8" y="723.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.8" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/Meter.record (1 samples, 0.42%)</title><rect x="432.8" y="707.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.8" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/Rate.record (1 samples, 0.42%)</title><rect x="432.8" y="691.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.8" y="702.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 0.42%)</title><rect x="432.8" y="675.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.8" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.trySend (1 samples, 0.42%)</title><rect x="437.8" y="835.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.8" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.send (1 samples, 0.42%)</title><rect x="437.8" y="819.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.8" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.42%)</title><rect x="437.8" y="803.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.8" y="814.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.42%)</title><rect x="437.8" y="787.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.8" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/InFlightRequests.add (1 samples, 0.42%)</title><rect x="437.8" y="771.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.42%)</title><rect x="437.8" y="755.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.42%)</title><rect x="437.8" y="739.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.8" y="750.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.42%)</title><rect x="442.7" y="851.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.7" y="862.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (1 samples, 0.42%)</title><rect x="442.7" y="835.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.7" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/FetchSessionHandler$Builder.build (1 samples, 0.42%)</title><rect x="442.7" y="819.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.7" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/FetchSessionHandler.access$000 (1 samples, 0.42%)</title><rect x="442.7" y="803.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.7" y="814.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.42%)</title><rect x="442.7" y="787.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="445.7" y="798.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.42%)</title><rect x="442.7" y="771.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="445.7" y="782.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.42%)</title><rect x="442.7" y="755.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="445.7" y="766.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::call_event(Method*, CompLevel) (1 samples, 0.42%)</title><rect x="442.7" y="739.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="445.7" y="750.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::common(bool (AdvancedThresholdPolicy::*)(int, int, CompLevel), Method*, CompLevel, bool) (1 samples, 0.42%)</title><rect x="442.7" y="723.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="445.7" y="734.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::loop_predicate(int, int, CompLevel) (1 samples, 0.42%)</title><rect x="442.7" y="707.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="445.7" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/TaskManager.maybeCommitActiveTasksPerUserRequested (2 samples, 0.83%)</title><rect x="447.6" y="899.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.6" y="910.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/AssignedStreamsTasks.maybeCommitPerUserRequested (1 samples, 0.42%)</title><rect x="452.5" y="883.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.5" y="894.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/TaskManager.process (120 samples, 50.00%)</title><rect x="457.4" y="899.0" width="590.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.4" y="910.0">org/apache/kafka/streams/processor/internals/TaskManager.process</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/AssignedStreamsTasks.process (118 samples, 49.17%)</title><rect x="467.2" y="883.0" width="580.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.2" y="894.0">org/apache/kafka/streams/processor/internals/AssignedStreamsTasks.process</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValuesView.iterator (2 samples, 0.83%)</title><rect x="472.2" y="867.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.&lt;init&gt; (2 samples, 0.83%)</title><rect x="472.2" y="851.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$BaseIterator.&lt;init&gt; (2 samples, 0.83%)</title><rect x="472.2" y="835.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$Traverser.advance (2 samples, 0.83%)</title><rect x="472.2" y="819.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.2" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask.process (115 samples, 47.92%)</title><rect x="482.0" y="867.0" width="565.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.0" y="878.0">org/apache/kafka/streams/processor/internals/StreamTask.process</text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 2.50%)</title><rect x="496.8" y="851.0" width="29.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.8" y="862.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 1.67%)</title><rect x="506.6" y="835.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeAccess (1 samples, 0.42%)</title><rect x="516.4" y="819.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.4" y="830.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.42%)</title><rect x="521.3" y="819.0" width="4.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="524.3" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/PartitionGroup.nextRecord (93 samples, 38.75%)</title><rect x="526.2" y="851.0" width="457.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.2" y="862.0">org/apache/kafka/streams/processor/internals/PartitionGroup.nex..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (2 samples, 0.83%)</title><rect x="526.2" y="835.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.2" y="846.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (2 samples, 0.83%)</title><rect x="526.2" y="819.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.2" y="830.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordQueue.poll (91 samples, 37.92%)</title><rect x="536.1" y="835.0" width="447.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.1" y="846.0">org/apache/kafka/streams/processor/internals/RecordQueue.poll</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordQueue.updateHead (91 samples, 37.92%)</title><rect x="536.1" y="819.0" width="447.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.1" y="830.0">org/apache/kafka/streams/processor/internals/RecordQueue.upda..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/LogContext$LocationAwareKafkaLogger.trace (5 samples, 2.08%)</title><rect x="555.8" y="803.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.8" y="814.0">o..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (5 samples, 2.08%)</title><rect x="555.8" y="787.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.8" y="798.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (5 samples, 2.08%)</title><rect x="555.8" y="771.0" width="24.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.8" y="782.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (5 samples, 2.08%)</title><rect x="555.8" y="755.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.8" y="766.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (5 samples, 2.08%)</title><rect x="555.8" y="739.0" width="24.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.8" y="750.0">c..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/RecordDeserializer.deserialize (82 samples, 34.17%)</title><rect x="580.3" y="803.0" width="403.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.3" y="814.0">org/apache/kafka/streams/processor/internals/RecordDese..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecord.checksum (16 samples, 6.67%)</title><rect x="580.3" y="787.0" width="78.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.3" y="798.0">org/apach..</text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 2.50%)</title><rect x="580.3" y="771.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.3" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/Long.&lt;init&gt; (6 samples, 2.50%)</title><rect x="580.3" y="755.0" width="29.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.3" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (6 samples, 2.50%)</title><rect x="580.3" y="739.0" width="29.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.3" y="750.0">ja..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.42%)</title><rect x="604.9" y="723.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.9" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecord.computePartialChecksum (10 samples, 4.17%)</title><rect x="609.8" y="771.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.8" y="782.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.create (10 samples, 4.17%)</title><rect x="609.8" y="755.0" width="49.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.8" y="766.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C$PureJavaChecksumFactory.create (10 samples, 4.17%)</title><rect x="609.8" y="739.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.8" y="750.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.&lt;init&gt; (4 samples, 1.67%)</title><rect x="639.3" y="723.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.3" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/SourceNode.deserializeValue (66 samples, 27.50%)</title><rect x="659.0" y="787.0" width="324.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.0" y="798.0">org/apache/kafka/streams/processor/internals..</text>
</g>
<g>
<title>org/apache/kafka/common/serialization/Deserializer.deserialize (66 samples, 27.50%)</title><rect x="659.0" y="771.0" width="324.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.0" y="782.0">org/apache/kafka/common/serialization/Deseri..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (66 samples, 27.50%)</title><rect x="659.0" y="755.0" width="324.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.0" y="766.0">com/linecorp/decaton/benchmark/Task$KafkaDes..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (66 samples, 27.50%)</title><rect x="659.0" y="739.0" width="324.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.0" y="750.0">com/linecorp/decaton/benchmark/Task$KafkaDes..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (64 samples, 26.67%)</title><rect x="663.9" y="723.0" width="314.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.9" y="734.0">com/fasterxml/jackson/databind/ObjectMappe..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (10 samples, 4.17%)</title><rect x="673.8" y="707.0" width="49.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.8" y="718.0">com/f..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (10 samples, 4.17%)</title><rect x="673.8" y="691.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.8" y="702.0">com/f..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (10 samples, 4.17%)</title><rect x="673.8" y="675.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.8" y="686.0">com/f..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.detectEncoding (5 samples, 2.08%)</title><rect x="683.6" y="659.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.6" y="670.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.handleBOM (5 samples, 2.08%)</title><rect x="683.6" y="643.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.6" y="654.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (3 samples, 1.25%)</title><rect x="708.2" y="659.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.2" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (3 samples, 1.25%)</title><rect x="708.2" y="643.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.2" y="654.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (3 samples, 1.25%)</title><rect x="708.2" y="627.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.2" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (48 samples, 20.00%)</title><rect x="722.9" y="707.0" width="236.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.9" y="718.0">com/fasterxml/jackson/databind/..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (5 samples, 2.08%)</title><rect x="722.9" y="691.0" width="24.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.9" y="702.0">c..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 2.08%)</title><rect x="722.9" y="675.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.9" y="686.0">j..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (43 samples, 17.92%)</title><rect x="747.5" y="691.0" width="211.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.5" y="702.0">com/fasterxml/jackson/databi..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (14 samples, 5.83%)</title><rect x="747.5" y="675.0" width="68.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.5" y="686.0">com/fas..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeObjectScope (1 samples, 0.42%)</title><rect x="772.1" y="659.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.1" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (1 samples, 0.42%)</title><rect x="777.0" y="659.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.0" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (3 samples, 1.25%)</title><rect x="781.9" y="659.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.9" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (3 samples, 1.25%)</title><rect x="781.9" y="643.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.9" y="654.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (3 samples, 1.25%)</title><rect x="781.9" y="627.0" width="14.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.9" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName (3 samples, 1.25%)</title><rect x="781.9" y="611.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.9" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName (1 samples, 0.42%)</title><rect x="791.8" y="595.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.8" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd (4 samples, 1.67%)</title><rect x="796.7" y="659.0" width="19.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.7" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (29 samples, 12.08%)</title><rect x="816.3" y="675.0" width="142.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.3" y="686.0">com/fasterxml/jack..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (29 samples, 12.08%)</title><rect x="816.3" y="659.0" width="142.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.3" y="670.0">com/fasterxml/jack..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (28 samples, 11.67%)</title><rect x="821.2" y="643.0" width="137.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.2" y="654.0">com/fasterxml/jac..</text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.42%)</title><rect x="836.0" y="627.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="839.0" y="638.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.42%)</title><rect x="836.0" y="611.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="839.0" y="622.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.42%)</title><rect x="836.0" y="595.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="839.0" y="606.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.42%)</title><rect x="836.0" y="579.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="839.0" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.42%)</title><rect x="836.0" y="563.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="839.0" y="574.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.42%)</title><rect x="836.0" y="547.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="839.0" y="558.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.42%)</title><rect x="836.0" y="531.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.0" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.42%)</title><rect x="836.0" y="515.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="839.0" y="526.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.42%)</title><rect x="836.0" y="499.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="839.0" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (14 samples, 5.83%)</title><rect x="840.9" y="627.0" width="68.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.9" y="638.0">com/fas..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeObjectScope (3 samples, 1.25%)</title><rect x="850.8" y="611.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.8" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (8 samples, 3.33%)</title><rect x="865.5" y="611.0" width="39.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.5" y="622.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (8 samples, 3.33%)</title><rect x="865.5" y="595.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.5" y="606.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (8 samples, 3.33%)</title><rect x="865.5" y="579.0" width="39.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="868.5" y="590.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName (3 samples, 1.25%)</title><rect x="865.5" y="563.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.5" y="574.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (5 samples, 2.08%)</title><rect x="880.2" y="563.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.2" y="574.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon (1 samples, 0.42%)</title><rect x="904.8" y="611.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.8" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon2 (1 samples, 0.42%)</title><rect x="904.8" y="595.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.8" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (3 samples, 1.25%)</title><rect x="909.8" y="627.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.8" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (2 samples, 0.83%)</title><rect x="914.7" y="611.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.7" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (2 samples, 0.83%)</title><rect x="914.7" y="595.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.7" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (2 samples, 0.83%)</title><rect x="914.7" y="579.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.83%)</title><rect x="914.7" y="563.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.7" y="574.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (1 samples, 0.42%)</title><rect x="924.5" y="627.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.5" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (3 samples, 1.25%)</title><rect x="929.4" y="627.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.4" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (3 samples, 1.25%)</title><rect x="929.4" y="611.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="932.4" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (3 samples, 1.25%)</title><rect x="929.4" y="595.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.4" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (3 samples, 1.25%)</title><rect x="929.4" y="579.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.4" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 1.25%)</title><rect x="929.4" y="563.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.4" y="574.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.findCreatorProperty (3 samples, 1.25%)</title><rect x="944.2" y="627.0" width="14.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 1.25%)</title><rect x="944.2" y="611.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 1.25%)</title><rect x="944.2" y="595.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.2" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 0.42%)</title><rect x="954.0" y="579.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.0" y="590.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (4 samples, 1.67%)</title><rect x="958.9" y="707.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.9" y="718.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (4 samples, 1.67%)</title><rect x="958.9" y="691.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.9" y="702.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (4 samples, 1.67%)</title><rect x="958.9" y="675.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.9" y="686.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (4 samples, 1.67%)</title><rect x="958.9" y="659.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 1.67%)</title><rect x="958.9" y="643.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.9" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.maybeMeasureLatency (1 samples, 0.42%)</title><rect x="978.6" y="723.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.6" y="734.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask$$Lambda$441/1486825629.run (1 samples, 0.42%)</title><rect x="978.6" y="707.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.6" y="718.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask.lambda$process$3 (1 samples, 0.42%)</title><rect x="978.6" y="691.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.6" y="702.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/SourceNode.process (1 samples, 0.42%)</title><rect x="978.6" y="675.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.6" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (1 samples, 0.42%)</title><rect x="978.6" y="659.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.6" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (1 samples, 0.42%)</title><rect x="978.6" y="643.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.6" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (1 samples, 0.42%)</title><rect x="978.6" y="627.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.6" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode.process (1 samples, 0.42%)</title><rect x="978.6" y="611.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.6" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.maybeMeasureLatency (1 samples, 0.42%)</title><rect x="978.6" y="595.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.6" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode$$Lambda$444/858063638.run (1 samples, 0.42%)</title><rect x="978.6" y="579.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.6" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode.lambda$process$2 (1 samples, 0.42%)</title><rect x="978.6" y="563.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.6" y="574.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (1 samples, 0.42%)</title><rect x="978.6" y="547.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.6" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (1 samples, 0.42%)</title><rect x="978.6" y="531.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.6" y="542.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (1 samples, 0.42%)</title><rect x="978.6" y="515.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.6" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.maybeMeasureLatency (13 samples, 5.42%)</title><rect x="983.5" y="851.0" width="63.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.5" y="862.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask$$Lambda$441/1486825629.run (13 samples, 5.42%)</title><rect x="983.5" y="835.0" width="63.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.5" y="846.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/StreamTask.lambda$process$3 (13 samples, 5.42%)</title><rect x="983.5" y="819.0" width="63.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.5" y="830.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/SourceNode.process (13 samples, 5.42%)</title><rect x="983.5" y="803.0" width="63.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.5" y="814.0">org/apa..</text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (3 samples, 1.25%)</title><rect x="983.5" y="787.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.5" y="798.0"></text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (10 samples, 4.17%)</title><rect x="998.2" y="787.0" width="49.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.2" y="798.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (10 samples, 4.17%)</title><rect x="998.2" y="771.0" width="49.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.2" y="782.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorContextImpl.forward (10 samples, 4.17%)</title><rect x="998.2" y="755.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.2" y="766.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode.process (10 samples, 4.17%)</title><rect x="998.2" y="739.0" width="49.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.2" y="750.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.maybeMeasureLatency (10 samples, 4.17%)</title><rect x="998.2" y="723.0" width="49.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.2" y="734.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode$$Lambda$444/858063638.run (10 samples, 4.17%)</title><rect x="998.2" y="707.0" width="49.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.2" y="718.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/processor/internals/ProcessorNode.lambda$process$2 (10 samples, 4.17%)</title><rect x="998.2" y="691.0" width="49.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.2" y="702.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/streams/kstream/internals/KStreamPeek$KStreamPeekProcessor.process (10 samples, 4.17%)</title><rect x="998.2" y="675.0" width="49.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.2" y="686.0">org/a..</text>
</g>
<g>
<title>com/mayreh/KafkaStreamsRunner$$Lambda$31/1559122513.apply (10 samples, 4.17%)</title><rect x="998.2" y="659.0" width="49.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.2" y="670.0">com/m..</text>
</g>
<g>
<title>com/mayreh/KafkaStreamsRunner.lambda$init$1 (10 samples, 4.17%)</title><rect x="998.2" y="643.0" width="49.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.2" y="654.0">com/m..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (10 samples, 4.17%)</title><rect x="998.2" y="627.0" width="49.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.2" y="638.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (4 samples, 1.67%)</title><rect x="1003.2" y="611.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="1013.0" y="595.0" width="4.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1016.0" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.42%)</title><rect x="1013.0" y="579.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1016.0" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.42%)</title><rect x="1017.9" y="595.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1020.9" y="606.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.42%)</title><rect x="1017.9" y="579.0" width="4.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1020.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 2.08%)</title><rect x="1022.8" y="611.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.8" y="622.0">j..</text>
</g>
<g>
<title>start_thread (29 samples, 12.08%)</title><rect x="1047.4" y="947.0" width="142.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1050.4" y="958.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (29 samples, 12.08%)</title><rect x="1047.4" y="931.0" width="142.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1050.4" y="942.0">java_start(Thread*)</text>
</g>
<g>
<title>JavaThread::run() (29 samples, 12.08%)</title><rect x="1047.4" y="915.0" width="142.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.4" y="926.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (29 samples, 12.08%)</title><rect x="1047.4" y="899.0" width="142.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.4" y="910.0">JavaThread::thread..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (29 samples, 12.08%)</title><rect x="1047.4" y="883.0" width="142.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.4" y="894.0">CompileBroker::com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (29 samples, 12.08%)</title><rect x="1047.4" y="867.0" width="142.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.4" y="878.0">CompileBroker::inv..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (29 samples, 12.08%)</title><rect x="1047.4" y="851.0" width="142.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.4" y="862.0">C2Compiler::compil..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (29 samples, 12.08%)</title><rect x="1047.4" y="835.0" width="142.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.4" y="846.0">Compile::Compile(c..</text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 3.75%)</title><rect x="1047.4" y="819.0" width="44.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.4" y="830.0">Comp..</text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.42%)</title><rect x="1047.4" y="803.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.4" y="814.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.42%)</title><rect x="1047.4" y="787.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.4" y="798.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.42%)</title><rect x="1047.4" y="771.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.4" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 3.33%)</title><rect x="1052.3" y="803.0" width="39.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1055.3" y="814.0">Pha..</text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.42%)</title><rect x="1052.3" y="787.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.3" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.42%)</title><rect x="1052.3" y="771.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.3" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.42%)</title><rect x="1057.3" y="787.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.3" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.42%)</title><rect x="1062.2" y="787.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.2" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.42%)</title><rect x="1062.2" y="771.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1065.2" y="782.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.42%)</title><rect x="1062.2" y="755.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1065.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.83%)</title><rect x="1067.1" y="787.0" width="9.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.1" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.42%)</title><rect x="1072.0" y="771.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.0" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.42%)</title><rect x="1072.0" y="755.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.0" y="766.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.42%)</title><rect x="1072.0" y="739.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.0" y="750.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.42%)</title><rect x="1076.9" y="787.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1079.9" y="798.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.42%)</title><rect x="1076.9" y="771.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1079.9" y="782.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.42%)</title><rect x="1081.8" y="787.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1084.8" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.42%)</title><rect x="1081.8" y="771.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1084.8" y="782.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.42%)</title><rect x="1086.8" y="787.0" width="4.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1089.8" y="798.0"></text>
</g>
<g>
<title>Compile::Optimize() (19 samples, 7.92%)</title><rect x="1091.7" y="819.0" width="93.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.7" y="830.0">Compile::Op..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (17 samples, 7.08%)</title><rect x="1091.7" y="803.0" width="83.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1094.7" y="814.0">PhaseIdea..</text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.42%)</title><rect x="1091.7" y="787.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.7" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.42%)</title><rect x="1091.7" y="771.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.7" y="782.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.42%)</title><rect x="1091.7" y="755.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.7" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.42%)</title><rect x="1091.7" y="739.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1094.7" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (16 samples, 6.67%)</title><rect x="1096.6" y="787.0" width="78.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.6" y="798.0">PhaseIdea..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (16 samples, 6.67%)</title><rect x="1096.6" y="771.0" width="78.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1099.6" y="782.0">PhaseIdea..</text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (1 samples, 0.42%)</title><rect x="1096.6" y="755.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1099.6" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (15 samples, 6.25%)</title><rect x="1101.5" y="755.0" width="73.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1104.5" y="766.0">PhaseIde..</text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (2 samples, 0.83%)</title><rect x="1165.4" y="739.0" width="9.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.4" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.83%)</title><rect x="1175.2" y="803.0" width="9.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.83%)</title><rect x="1175.2" y="787.0" width="9.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.2" y="798.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.42%)</title><rect x="1175.2" y="771.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.2" y="782.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.42%)</title><rect x="1180.2" y="771.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="819.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="1185.1" y="803.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="1185.1" y="787.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="1185.1" y="771.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="1185.1" y="755.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="1185.1" y="739.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.1" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="723.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="1185.1" y="707.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="1185.1" y="691.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="1185.1" y="675.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="1185.1" y="659.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="1185.1" y="643.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="627.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="611.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.1" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="1185.1" y="595.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="1185.1" y="579.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="1185.1" y="563.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="1185.1" y="547.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="1185.1" y="531.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="515.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="1185.1" y="499.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="1185.1" y="483.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="1185.1" y="467.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="1185.1" y="451.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="1185.1" y="435.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.1" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="419.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="1185.1" y="403.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="1185.1" y="387.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="1185.1" y="371.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="1185.1" y="355.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="1185.1" y="339.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="323.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="1185.1" y="307.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="1185.1" y="291.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="1185.1" y="275.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="1185.1" y="259.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="1185.1" y="243.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="254.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="227.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="238.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="1185.1" y="211.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="222.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.42%)</title><rect x="1185.1" y="195.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.1" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::uncommon_trap_Type() (1 samples, 0.42%)</title><rect x="1185.1" y="179.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="190.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.42%)</title><rect x="1185.1" y="163.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="174.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.42%)</title><rect x="1185.1" y="147.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.1" y="158.0"></text>
</g>
</g>
</svg>
