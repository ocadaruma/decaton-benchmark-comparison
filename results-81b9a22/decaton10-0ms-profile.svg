<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (1,156 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.run (379 samples, 32.79%)</title><rect x="10.0" y="723.0" width="386.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="734.0">com/linecorp/decaton/processor/runtime/ProcessorSubsc..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.pollOnce (379 samples, 32.79%)</title><rect x="10.0" y="707.0" width="386.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="718.0">com/linecorp/decaton/processor/runtime/ProcessorSubsc..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts.updateHighWatermarks (5 samples, 0.43%)</title><rect x="10.0" y="691.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.forEach (5 samples, 0.43%)</title><rect x="10.0" y="675.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts$$Lambda$276/2030724251.accept (4 samples, 0.35%)</title><rect x="11.0" y="659.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.0" y="670.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContext.updateHighWatermark (4 samples, 0.35%)</title><rect x="11.0" y="643.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.0" y="654.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.updateHighWatermark (4 samples, 0.35%)</title><rect x="11.0" y="627.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.0" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (4 samples, 0.35%)</title><rect x="11.0" y="611.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.0" y="622.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.pausePartitions (3 samples, 0.26%)</title><rect x="15.1" y="691.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.1" y="702.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts.partitionsNeedsPause (3 samples, 0.26%)</title><rect x="15.1" y="675.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (3 samples, 0.26%)</title><rect x="15.1" y="659.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.26%)</title><rect x="15.1" y="643.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.26%)</title><rect x="15.1" y="627.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.26%)</title><rect x="15.1" y="611.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.26%)</title><rect x="15.1" y="595.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (2 samples, 0.17%)</title><rect x="15.1" y="579.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.17%)</title><rect x="15.1" y="563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.17%)</title><rect x="15.1" y="547.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.1" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts$$Lambda$278/1498202553.test (2 samples, 0.17%)</title><rect x="15.1" y="531.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.1" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts.lambda$partitionsNeedsPause$60 (2 samples, 0.17%)</title><rect x="15.1" y="515.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.1" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContext.pendingTasksCount (2 samples, 0.17%)</title><rect x="15.1" y="499.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.1" y="510.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.pendingOffsetsCount (2 samples, 0.17%)</title><rect x="15.1" y="483.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.09%)</title><rect x="17.1" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (335 samples, 28.98%)</title><rect x="18.2" y="691.0" width="341.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.2" y="702.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$$Lambda$275/1422392405.accept (331 samples, 28.63%)</title><rect x="18.2" y="675.0" width="337.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.2" y="686.0">com/linecorp/decaton/processor/runtime/Process..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.lambda$pollOnce$71 (331 samples, 28.63%)</title><rect x="18.2" y="659.0" width="337.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.2" y="670.0">com/linecorp/decaton/processor/runtime/Process..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContext.addRequest (299 samples, 25.87%)</title><rect x="22.2" y="643.0" width="305.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.2" y="654.0">com/linecorp/decaton/processor/runtime/Pa..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionProcessor.addTask (299 samples, 25.87%)</title><rect x="22.2" y="627.0" width="305.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.2" y="638.0">com/linecorp/decaton/processor/runtime/Pa..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.putTask (299 samples, 25.87%)</title><rect x="22.2" y="611.0" width="305.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.2" y="622.0">com/linecorp/decaton/processor/runtime/Pr..</text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (299 samples, 25.87%)</title><rect x="22.2" y="595.0" width="305.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="606.0">java/util/concurrent/Executors$DelegatedE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (299 samples, 25.87%)</title><rect x="22.2" y="579.0" width="305.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.2" y="590.0">java/util/concurrent/ThreadPoolExecutor.e..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (299 samples, 25.87%)</title><rect x="22.2" y="563.0" width="305.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.2" y="574.0">java/util/concurrent/LinkedBlockingQueue...</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (229 samples, 19.81%)</title><rect x="22.2" y="547.0" width="233.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="558.0">java/util/concurrent/LinkedBloc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 1.30%)</title><rect x="22.2" y="531.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 1.30%)</title><rect x="22.2" y="515.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15 samples, 1.30%)</title><rect x="22.2" y="499.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (15 samples, 1.30%)</title><rect x="22.2" y="483.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.78%)</title><rect x="37.6" y="531.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (9 samples, 0.78%)</title><rect x="37.6" y="515.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.35%)</title><rect x="39.6" y="499.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.6" y="510.0"></text>
</g>
<g>
<title>g1_post_barrier_slow Runtime1 stub (4 samples, 0.35%)</title><rect x="39.6" y="483.0" width="4.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="42.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.26%)</title><rect x="43.7" y="499.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (205 samples, 17.73%)</title><rect x="46.7" y="531.0" width="209.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="542.0">java/util/concurrent/locks/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (205 samples, 17.73%)</title><rect x="46.7" y="515.0" width="209.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.7" y="526.0">java/util/concurrent/locks/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (205 samples, 17.73%)</title><rect x="46.7" y="499.0" width="209.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.7" y="510.0">java/util/concurrent/locks/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (205 samples, 17.73%)</title><rect x="46.7" y="483.0" width="209.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="494.0">java/util/concurrent/locks/..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (204 samples, 17.65%)</title><rect x="47.8" y="467.0" width="208.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.8" y="478.0">sun/misc/Unsafe.unpark</text>
</g>
<g>
<title>Unsafe_Unpark (197 samples, 17.04%)</title><rect x="48.8" y="451.0" width="201.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="51.8" y="462.0">Unsafe_Unpark</text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.09%)</title><rect x="52.9" y="435.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="55.9" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (165 samples, 14.27%)</title><rect x="53.9" y="435.0" width="168.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="56.9" y="446.0">__pthread_cond_signal</text>
</g>
<g>
<title>system_call_fastpath (145 samples, 12.54%)</title><rect x="74.3" y="419.0" width="148.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="77.3" y="430.0">system_call_fastpath</text>
</g>
<g>
<title>sys_futex (145 samples, 12.54%)</title><rect x="74.3" y="403.0" width="148.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.3" y="414.0">sys_futex</text>
</g>
<g>
<title>do_futex (144 samples, 12.46%)</title><rect x="75.3" y="387.0" width="147.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.3" y="398.0">do_futex</text>
</g>
<g>
<title>_raw_qspin_lock (7 samples, 0.61%)</title><rect x="76.3" y="371.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.3" y="382.0"></text>
</g>
<g>
<title>futex_wake_op (135 samples, 11.68%)</title><rect x="83.5" y="371.0" width="137.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="86.5" y="382.0">futex_wake_op</text>
</g>
<g>
<title>get_futex_key (4 samples, 0.35%)</title><rect x="94.7" y="355.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="97.7" y="366.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (4 samples, 0.35%)</title><rect x="94.7" y="339.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.7" y="350.0"></text>
</g>
<g>
<title>mark_wake_futex (22 samples, 1.90%)</title><rect x="98.8" y="355.0" width="22.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.8" y="366.0">m..</text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.35%)</title><rect x="115.1" y="339.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.1" y="350.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.17%)</title><rect x="119.2" y="339.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.2" y="350.0"></text>
</g>
<g>
<title>wake_up_q (98 samples, 8.48%)</title><rect x="121.3" y="355.0" width="100.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.3" y="366.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (93 samples, 8.04%)</title><rect x="126.4" y="339.0" width="94.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="129.4" y="350.0">try_to_wake..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (92 samples, 7.96%)</title><rect x="127.4" y="323.0" width="93.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="130.4" y="334.0">_raw_spin_u..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.09%)</title><rect x="221.3" y="371.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="224.3" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (5 samples, 0.43%)</title><rect x="222.3" y="435.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="225.3" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (22 samples, 1.90%)</title><rect x="227.4" y="435.0" width="22.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="230.4" y="446.0">p..</text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="249.9" y="451.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="252.9" y="462.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.09%)</title><rect x="249.9" y="435.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="252.9" y="446.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="249.9" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.9" y="430.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="249.9" y="403.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="252.9" y="414.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="249.9" y="387.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="252.9" y="398.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.35%)</title><rect x="250.9" y="451.0" width="4.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="253.9" y="462.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.35%)</title><rect x="250.9" y="435.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.9" y="446.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="255.0" y="451.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="258.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.17%)</title><rect x="256.0" y="547.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$FairSync.lock (2 samples, 0.17%)</title><rect x="256.0" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.17%)</title><rect x="256.0" y="515.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (68 samples, 5.88%)</title><rect x="258.0" y="547.0" width="69.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.0" y="558.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (68 samples, 5.88%)</title><rect x="258.0" y="531.0" width="69.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.0" y="542.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (68 samples, 5.88%)</title><rect x="258.0" y="515.0" width="69.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.0" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.17%)</title><rect x="317.2" y="499.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.09%)</title><rect x="319.3" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.3" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.35%)</title><rect x="320.3" y="499.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="323.3" y="510.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.26%)</title><rect x="321.3" y="483.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.3" y="494.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.26%)</title><rect x="321.3" y="467.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.3" y="478.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.26%)</title><rect x="321.3" y="451.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.3" y="462.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.17%)</title><rect x="322.4" y="435.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="325.4" y="446.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.17%)</title><rect x="322.4" y="419.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="325.4" y="430.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.09%)</title><rect x="322.4" y="403.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.4" y="414.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="323.4" y="403.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="326.4" y="414.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.09%)</title><rect x="323.4" y="387.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="326.4" y="398.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.09%)</title><rect x="323.4" y="371.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="326.4" y="382.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.09%)</title><rect x="323.4" y="355.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="326.4" y="366.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.09%)</title><rect x="323.4" y="339.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.4" y="350.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.09%)</title><rect x="323.4" y="323.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.4" y="334.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.09%)</title><rect x="323.4" y="307.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="326.4" y="318.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.09%)</title><rect x="323.4" y="291.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="326.4" y="302.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.09%)</title><rect x="323.4" y="275.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.4" y="286.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.09%)</title><rect x="323.4" y="259.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.4" y="270.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.26%)</title><rect x="324.4" y="499.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.4" y="510.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.26%)</title><rect x="324.4" y="483.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="327.4" y="494.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.26%)</title><rect x="324.4" y="467.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.4" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.26%)</title><rect x="324.4" y="451.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.4" y="462.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.17%)</title><rect x="325.4" y="435.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.4" y="446.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.17%)</title><rect x="325.4" y="419.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="328.4" y="430.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.17%)</title><rect x="325.4" y="403.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.4" y="414.0"></text>
</g>
<g>
<title>migrate_pages (2 samples, 0.17%)</title><rect x="325.4" y="387.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="328.4" y="398.0"></text>
</g>
<g>
<title>putback_lru_page (1 samples, 0.09%)</title><rect x="325.4" y="371.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.4" y="382.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.09%)</title><rect x="325.4" y="355.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.4" y="366.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.09%)</title><rect x="325.4" y="339.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.4" y="350.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.09%)</title><rect x="325.4" y="323.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.4" y="334.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.09%)</title><rect x="325.4" y="307.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="328.4" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="325.4" y="291.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.4" y="302.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.09%)</title><rect x="326.4" y="371.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.4" y="382.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.09%)</title><rect x="326.4" y="355.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="329.4" y="366.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/PartitionContexts.get (3 samples, 0.26%)</title><rect x="327.5" y="643.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.26%)</title><rect x="327.5" y="627.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.26%)</title><rect x="327.5" y="611.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.5" y="622.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="329.5" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.5" y="606.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="329.5" y="579.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.5" y="590.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="329.5" y="563.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.5" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/TaskRequest.&lt;init&gt; (21 samples, 1.82%)</title><rect x="330.5" y="643.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.5" y="654.0">c..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 1.82%)</title><rect x="330.5" y="627.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.5" y="638.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.35%)</title><rect x="345.8" y="611.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (2 samples, 0.17%)</title><rect x="345.8" y="595.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.17%)</title><rect x="347.9" y="595.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.9" y="606.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.09%)</title><rect x="349.9" y="611.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="352.9" y="622.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="350.9" y="611.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.9" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="350.9" y="595.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.9" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="350.9" y="579.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.9" y="590.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="350.9" y="563.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.9" y="574.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="350.9" y="547.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="353.9" y="558.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="350.9" y="531.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="353.9" y="542.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.09%)</title><rect x="350.9" y="515.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.9" y="526.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.09%)</title><rect x="350.9" y="499.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="353.9" y="510.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.09%)</title><rect x="350.9" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="353.9" y="494.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.09%)</title><rect x="350.9" y="467.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="353.9" y="478.0"></text>
</g>
<g>
<title>page_waitqueue (1 samples, 0.09%)</title><rect x="350.9" y="451.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.9" y="462.0"></text>
</g>
<g>
<title>page_fault (4 samples, 0.35%)</title><rect x="352.0" y="643.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.0" y="654.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.35%)</title><rect x="352.0" y="627.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.0" y="638.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.35%)</title><rect x="352.0" y="611.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.0" y="622.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="355.0" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="358.0" y="606.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="355.0" y="579.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.0" y="590.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.09%)</title><rect x="355.0" y="563.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.09%)</title><rect x="356.0" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.09%)</title><rect x="356.0" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.0" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.hasNext (1 samples, 0.09%)</title><rect x="356.0" y="643.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.0" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.hasNext (3 samples, 0.26%)</title><rect x="357.1" y="675.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.1" y="686.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.maybeComputeNext (3 samples, 0.26%)</title><rect x="357.1" y="659.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.1" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.makeNext (3 samples, 0.26%)</title><rect x="357.1" y="643.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.1" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.makeNext (3 samples, 0.26%)</title><rect x="357.1" y="627.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.17%)</title><rect x="358.1" y="611.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.1" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (36 samples, 3.11%)</title><rect x="360.1" y="691.0" width="36.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.1" y="702.0">org..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (36 samples, 3.11%)</title><rect x="360.1" y="675.0" width="36.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.1" y="686.0">org..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (23 samples, 1.99%)</title><rect x="360.1" y="659.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.1" y="670.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (23 samples, 1.99%)</title><rect x="360.1" y="643.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.1" y="654.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (23 samples, 1.99%)</title><rect x="360.1" y="627.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.1" y="638.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (22 samples, 1.90%)</title><rect x="360.1" y="611.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.1" y="622.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (22 samples, 1.90%)</title><rect x="360.1" y="595.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.1" y="606.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (8 samples, 0.69%)</title><rect x="361.1" y="579.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.1" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (5 samples, 0.43%)</title><rect x="361.1" y="563.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.1" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (5 samples, 0.43%)</title><rect x="361.1" y="547.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.1" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (5 samples, 0.43%)</title><rect x="361.1" y="531.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.1" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (5 samples, 0.43%)</title><rect x="361.1" y="515.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.1" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (5 samples, 0.43%)</title><rect x="361.1" y="499.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.1" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (5 samples, 0.43%)</title><rect x="361.1" y="483.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.1" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (5 samples, 0.43%)</title><rect x="361.1" y="467.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.1" y="478.0"></text>
</g>
<g>
<title>retint_signal (1 samples, 0.09%)</title><rect x="365.2" y="451.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.2" y="462.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.09%)</title><rect x="365.2" y="435.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="368.2" y="446.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.09%)</title><rect x="365.2" y="419.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="368.2" y="430.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.09%)</title><rect x="365.2" y="403.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.2" y="414.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.09%)</title><rect x="365.2" y="387.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.2" y="398.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.09%)</title><rect x="365.2" y="371.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.2" y="382.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.09%)</title><rect x="365.2" y="355.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.2" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (3 samples, 0.26%)</title><rect x="366.2" y="563.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.2" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (3 samples, 0.26%)</title><rect x="366.2" y="547.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.2" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.access$3500 (13 samples, 1.12%)</title><rect x="369.3" y="579.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.3" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.parseRecord (12 samples, 1.04%)</title><rect x="370.3" y="563.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.3" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/header/internals/RecordHeaders.&lt;init&gt; (12 samples, 1.04%)</title><rect x="370.3" y="547.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 1.04%)</title><rect x="370.3" y="531.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.3" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.52%)</title><rect x="375.4" y="515.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.4" y="526.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="380.5" y="499.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.5" y="510.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="380.5" y="483.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="383.5" y="494.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="380.5" y="467.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.5" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="380.5" y="451.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="383.5" y="462.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="380.5" y="435.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.5" y="446.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="380.5" y="419.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.5" y="430.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.09%)</title><rect x="380.5" y="403.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.5" y="414.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.09%)</title><rect x="380.5" y="387.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="383.5" y="398.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.09%)</title><rect x="380.5" y="371.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.5" y="382.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.09%)</title><rect x="380.5" y="355.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="383.5" y="366.0"></text>
</g>
<g>
<title>migrate_page_copy (1 samples, 0.09%)</title><rect x="380.5" y="339.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.5" y="350.0"></text>
</g>
<g>
<title>migrate_page_states (1 samples, 0.09%)</title><rect x="380.5" y="323.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="383.5" y="334.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="381.6" y="515.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="384.6" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.access$2000 (1 samples, 0.09%)</title><rect x="382.6" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.6" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.recordPartitionLead (1 samples, 0.09%)</title><rect x="382.6" y="595.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.6" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Metrics.getSensor (1 samples, 0.09%)</title><rect x="382.6" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.09%)</title><rect x="382.6" y="563.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.6" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateAssignmentMetadataIfNeeded (2 samples, 0.17%)</title><rect x="383.6" y="659.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.6" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateFetchPositions (2 samples, 0.17%)</title><rect x="383.6" y="643.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.6" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsIfNeeded (2 samples, 0.17%)</title><rect x="383.6" y="627.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.09%)</title><rect x="383.6" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.6" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$$Lambda$236/1259567699.accept (1 samples, 0.09%)</title><rect x="383.6" y="595.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.6" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.lambda$validateOffsetsIfNeeded$1 (1 samples, 0.09%)</title><rect x="383.6" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.6" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/Metadata.currentLeader (1 samples, 0.09%)</title><rect x="383.6" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.6" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.flatMap (1 samples, 0.09%)</title><rect x="383.6" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/Metadata$$Lambda$238/346815840.apply (1 samples, 0.09%)</title><rect x="383.6" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.6" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/MetadataCache.nodeById (1 samples, 0.09%)</title><rect x="383.6" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.6" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.09%)</title><rect x="383.6" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.09%)</title><rect x="383.6" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="383.6" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.6" y="478.0"></text>
</g>
<g>
<title>retint_signal (1 samples, 0.09%)</title><rect x="383.6" y="451.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.6" y="462.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.09%)</title><rect x="383.6" y="435.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.6" y="446.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.09%)</title><rect x="383.6" y="419.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.6" y="430.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.09%)</title><rect x="383.6" y="403.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.6" y="414.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.09%)</title><rect x="383.6" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.6" y="398.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.09%)</title><rect x="383.6" y="371.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.6" y="382.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.09%)</title><rect x="383.6" y="355.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.6" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.partitionsNeedingValidation (1 samples, 0.09%)</title><rect x="384.6" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.6" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.collectPartitions (1 samples, 0.09%)</title><rect x="384.6" y="595.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.09%)</title><rect x="384.6" y="579.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.09%)</title><rect x="384.6" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.09%)</title><rect x="384.6" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.09%)</title><rect x="384.6" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.09%)</title><rect x="384.6" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.6" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.forEachRemaining (1 samples, 0.09%)</title><rect x="384.6" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.6" y="510.0"></text>
</g>
<g>
<title>java/util/Iterator.forEachRemaining (1 samples, 0.09%)</title><rect x="384.6" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.09%)</title><rect x="384.6" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.6" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/internals/PartitionStates$$Lambda$240/710418527.apply (1 samples, 0.09%)</title><rect x="384.6" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.6" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/internals/PartitionStates.lambda$stream$0 (1 samples, 0.09%)</title><rect x="384.6" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.6" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.hasPendingRequests (1 samples, 0.09%)</title><rect x="385.6" y="659.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.6" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$UnsentRequests.hasRequests (1 samples, 0.09%)</title><rect x="385.6" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.6" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.transmitSends (5 samples, 0.43%)</title><rect x="386.7" y="659.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.7" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (4 samples, 0.35%)</title><rect x="386.7" y="643.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.7" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (4 samples, 0.35%)</title><rect x="386.7" y="627.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.7" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (4 samples, 0.35%)</title><rect x="386.7" y="611.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.09%)</title><rect x="386.7" y="595.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.09%)</title><rect x="386.7" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.7" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.09%)</title><rect x="386.7" y="563.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="389.7" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.09%)</title><rect x="386.7" y="547.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="389.7" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.attemptRead (3 samples, 0.26%)</title><rect x="387.7" y="595.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.7" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.read (3 samples, 0.26%)</title><rect x="387.7" y="579.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.7" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.receive (3 samples, 0.26%)</title><rect x="387.7" y="563.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.7" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/NetworkReceive.readFrom (3 samples, 0.26%)</title><rect x="387.7" y="547.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.7" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.read (3 samples, 0.26%)</title><rect x="387.7" y="531.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (3 samples, 0.26%)</title><rect x="387.7" y="515.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.26%)</title><rect x="387.7" y="499.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.26%)</title><rect x="387.7" y="483.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (3 samples, 0.26%)</title><rect x="387.7" y="467.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (3 samples, 0.26%)</title><rect x="387.7" y="451.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.7" y="462.0"></text>
</g>
<g>
<title>__read (3 samples, 0.26%)</title><rect x="387.7" y="435.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="390.7" y="446.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.26%)</title><rect x="387.7" y="419.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="390.7" y="430.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.26%)</title><rect x="387.7" y="403.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.7" y="414.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.26%)</title><rect x="387.7" y="387.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="390.7" y="398.0"></text>
</g>
<g>
<title>do_sync_read (3 samples, 0.26%)</title><rect x="387.7" y="371.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="390.7" y="382.0"></text>
</g>
<g>
<title>sock_aio_read (3 samples, 0.26%)</title><rect x="387.7" y="355.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="390.7" y="366.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (3 samples, 0.26%)</title><rect x="387.7" y="339.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="390.7" y="350.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.26%)</title><rect x="387.7" y="323.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.7" y="334.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.26%)</title><rect x="387.7" y="307.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="390.7" y="318.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (3 samples, 0.26%)</title><rect x="387.7" y="291.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.7" y="302.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.17%)</title><rect x="387.7" y="275.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="390.7" y="286.0"></text>
</g>
<g>
<title>memcpy_toiovec (1 samples, 0.09%)</title><rect x="389.7" y="275.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="392.7" y="286.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.09%)</title><rect x="389.7" y="259.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.7" y="270.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.09%)</title><rect x="389.7" y="243.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="392.7" y="254.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.trySend (1 samples, 0.09%)</title><rect x="390.7" y="643.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.7" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.send (1 samples, 0.09%)</title><rect x="390.7" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.7" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.09%)</title><rect x="390.7" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.7" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.09%)</title><rect x="390.7" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.7" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractRequest.toSend (1 samples, 0.09%)</title><rect x="390.7" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.7" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractRequest.serialize (1 samples, 0.09%)</title><rect x="390.7" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.7" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/RequestUtils.serialize (1 samples, 0.09%)</title><rect x="390.7" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.7" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Struct.writeTo (1 samples, 0.09%)</title><rect x="390.7" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.7" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Schema.write (1 samples, 0.09%)</title><rect x="390.7" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.7" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Type$11.write (1 samples, 0.09%)</title><rect x="390.7" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.7" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Utils.utf8 (1 samples, 0.09%)</title><rect x="390.7" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="390.7" y="467.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="390.7" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.newEncoder (1 samples, 0.09%)</title><rect x="390.7" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="390.7" y="419.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="390.7" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.7" y="414.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="390.7" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.7" y="398.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="390.7" y="371.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.7" y="382.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.atBugLevel (1 samples, 0.09%)</title><rect x="390.7" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="390.7" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.7" y="350.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (3 samples, 0.26%)</title><rect x="391.8" y="659.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.8" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.send (1 samples, 0.09%)</title><rect x="391.8" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.8" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.send (1 samples, 0.09%)</title><rect x="391.8" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.8" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.wakeup (1 samples, 0.09%)</title><rect x="391.8" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.8" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.wakeup (1 samples, 0.09%)</title><rect x="391.8" y="595.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.09%)</title><rect x="391.8" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.09%)</title><rect x="391.8" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.09%)</title><rect x="391.8" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.8" y="558.0"></text>
</g>
<g>
<title>__write (1 samples, 0.09%)</title><rect x="391.8" y="531.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="394.8" y="542.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.09%)</title><rect x="391.8" y="515.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.8" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.09%)</title><rect x="391.8" y="499.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.8" y="510.0"></text>
</g>
<g>
<title>fget_light (1 samples, 0.09%)</title><rect x="391.8" y="483.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.8" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (2 samples, 0.17%)</title><rect x="392.8" y="643.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.8" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchablePartitions (1 samples, 0.09%)</title><rect x="392.8" y="627.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.09%)</title><rect x="392.8" y="611.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.09%)</title><rect x="392.8" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.09%)</title><rect x="392.8" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.09%)</title><rect x="392.8" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.8" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.assignedPartitions (1 samples, 0.09%)</title><rect x="393.8" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.09%)</title><rect x="393.8" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.8" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.09%)</title><rect x="393.8" y="595.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.09%)</title><rect x="393.8" y="579.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.09%)</title><rect x="393.8" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.8" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/KafkaConsumerMetrics.recordPollEnd (1 samples, 0.09%)</title><rect x="394.8" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.8" y="670.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.09%)</title><rect x="394.8" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.8" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/SystemTime.milliseconds (1 samples, 0.09%)</title><rect x="394.8" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.8" y="638.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="394.8" y="611.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="397.8" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Time.timer (1 samples, 0.09%)</title><rect x="395.8" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.8" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="395.8" y="643.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="398.8" y="654.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="395.8" y="627.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="398.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (652 samples, 56.40%)</title><rect x="396.9" y="723.0" width="665.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.9" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (652 samples, 56.40%)</title><rect x="396.9" y="707.0" width="665.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.9" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (652 samples, 56.40%)</title><rect x="396.9" y="691.0" width="665.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.9" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit$$Lambda$291/287393146.run (332 samples, 28.72%)</title><rect x="401.0" y="675.0" width="338.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.0" y="686.0">com/linecorp/decaton/processor/runtime/Process..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.lambda$putTask$56 (332 samples, 28.72%)</title><rect x="401.0" y="659.0" width="338.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.0" y="670.0">com/linecorp/decaton/processor/runtime/Process..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorUnit.processTask (332 samples, 28.72%)</title><rect x="401.0" y="643.0" width="338.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.0" y="654.0">com/linecorp/decaton/processor/runtime/Process..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.scheduleThenProcess (330 samples, 28.55%)</title><rect x="401.0" y="627.0" width="336.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.0" y="638.0">com/linecorp/decaton/processor/runtime/Process..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.extract (112 samples, 9.69%)</title><rect x="413.2" y="611.0" width="114.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.2" y="622.0">com/linecorp/d..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$41/867148091.extract (112 samples, 9.69%)</title><rect x="413.2" y="595.0" width="114.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.2" y="606.0">com/linecorp/d..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$init$4 (112 samples, 9.69%)</title><rect x="413.2" y="579.0" width="114.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.2" y="590.0">com/linecorp/d..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (112 samples, 9.69%)</title><rect x="413.2" y="563.0" width="114.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.2" y="574.0">com/linecorp/d..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (112 samples, 9.69%)</title><rect x="413.2" y="547.0" width="114.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.2" y="558.0">com/linecorp/d..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (112 samples, 9.69%)</title><rect x="413.2" y="531.0" width="114.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.2" y="542.0">com/fasterxml/..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (47 samples, 4.07%)</title><rect x="413.2" y="515.0" width="48.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.2" y="526.0">com/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="434.6" y="499.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="437.6" y="510.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.09%)</title><rect x="434.6" y="483.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="437.6" y="494.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.17%)</title><rect x="435.7" y="499.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="438.7" y="510.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="437.7" y="499.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="440.7" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="437.7" y="483.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="440.7" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (2 samples, 0.17%)</title><rect x="438.7" y="499.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.7" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (2 samples, 0.17%)</title><rect x="438.7" y="483.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.7" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecyclers.getBufferRecycler (2 samples, 0.17%)</title><rect x="438.7" y="467.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.7" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.17%)</title><rect x="438.7" y="451.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.7" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.17%)</title><rect x="438.7" y="435.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.7" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.17%)</title><rect x="438.7" y="419.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.7" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.17%)</title><rect x="438.7" y="403.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.7" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (20 samples, 1.73%)</title><rect x="440.8" y="499.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.8" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (20 samples, 1.73%)</title><rect x="440.8" y="483.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.8" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.detectEncoding (2 samples, 0.17%)</title><rect x="452.0" y="467.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.0" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.handleBOM (2 samples, 0.17%)</title><rect x="452.0" y="451.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.0" y="462.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (5 samples, 0.43%)</title><rect x="454.0" y="467.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.0" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (5 samples, 0.43%)</title><rect x="454.0" y="451.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.0" y="462.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (5 samples, 0.43%)</title><rect x="454.0" y="435.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.0" y="446.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="458.1" y="419.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.1" y="430.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="458.1" y="403.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="461.1" y="414.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="458.1" y="387.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="461.1" y="398.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="458.1" y="371.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="461.1" y="382.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="458.1" y="355.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.1" y="366.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.09%)</title><rect x="458.1" y="339.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="461.1" y="350.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.17%)</title><rect x="459.1" y="467.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.1" y="478.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.17%)</title><rect x="459.1" y="451.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.1" y="462.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.17%)</title><rect x="459.1" y="435.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.1" y="446.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.09%)</title><rect x="459.1" y="419.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="462.1" y="430.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="460.2" y="419.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.2" y="430.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="460.2" y="403.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.2" y="414.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="460.2" y="387.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.2" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (62 samples, 5.36%)</title><rect x="461.2" y="515.0" width="63.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.2" y="526.0">com/fas..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/DeserializationConfig.isEnabled (2 samples, 0.17%)</title><rect x="462.2" y="499.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.2" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (5 samples, 0.43%)</title><rect x="464.2" y="499.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.43%)</title><rect x="464.2" y="483.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.2" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/SimpleType.equals (2 samples, 0.17%)</title><rect x="467.3" y="467.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.3" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (9 samples, 0.78%)</title><rect x="469.3" y="499.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.3" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (8 samples, 0.69%)</title><rect x="470.4" y="483.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.4" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (7 samples, 0.61%)</title><rect x="471.4" y="467.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.4" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (6 samples, 0.52%)</title><rect x="472.4" y="451.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.4" y="462.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.&lt;init&gt; (1 samples, 0.09%)</title><rect x="477.5" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.5" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.createDeserializationContext (5 samples, 0.43%)</title><rect x="478.5" y="499.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.5" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext$Impl.createInstance (3 samples, 0.26%)</title><rect x="480.6" y="483.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.6" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (40 samples, 3.46%)</title><rect x="483.6" y="499.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.6" y="510.0">com..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (9 samples, 0.78%)</title><rect x="483.6" y="483.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.6" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (6 samples, 0.52%)</title><rect x="485.7" y="467.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.7" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (6 samples, 0.52%)</title><rect x="485.7" y="451.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.7" y="462.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (6 samples, 0.52%)</title><rect x="485.7" y="435.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.7" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd (1 samples, 0.09%)</title><rect x="491.8" y="467.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.8" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (31 samples, 2.68%)</title><rect x="492.8" y="483.0" width="31.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.8" y="494.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (31 samples, 2.68%)</title><rect x="492.8" y="467.0" width="31.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.8" y="478.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (31 samples, 2.68%)</title><rect x="492.8" y="451.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.8" y="462.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (10 samples, 0.87%)</title><rect x="496.9" y="435.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.9" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (7 samples, 0.61%)</title><rect x="496.9" y="419.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.9" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (7 samples, 0.61%)</title><rect x="496.9" y="403.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.9" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (7 samples, 0.61%)</title><rect x="496.9" y="387.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.9" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (6 samples, 0.52%)</title><rect x="497.9" y="371.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.9" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon (3 samples, 0.26%)</title><rect x="504.0" y="419.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.0" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon2 (3 samples, 0.26%)</title><rect x="504.0" y="403.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.0" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (4 samples, 0.35%)</title><rect x="507.1" y="435.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.1" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (4 samples, 0.35%)</title><rect x="507.1" y="419.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.1" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (4 samples, 0.35%)</title><rect x="507.1" y="403.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.1" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (4 samples, 0.35%)</title><rect x="507.1" y="387.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 0.35%)</title><rect x="507.1" y="371.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.1" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (3 samples, 0.26%)</title><rect x="511.2" y="435.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.2" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (3 samples, 0.26%)</title><rect x="511.2" y="419.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.2" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (3 samples, 0.26%)</title><rect x="511.2" y="403.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.2" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (3 samples, 0.26%)</title><rect x="511.2" y="387.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.26%)</title><rect x="511.2" y="371.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.2" y="382.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.17%)</title><rect x="512.2" y="355.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.2" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.findCreatorProperty (5 samples, 0.43%)</title><rect x="514.3" y="435.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.43%)</title><rect x="514.3" y="419.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.43%)</title><rect x="514.3" y="403.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.3" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.startBuilding (5 samples, 0.43%)</title><rect x="519.4" y="435.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.4" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (3 samples, 0.26%)</title><rect x="524.5" y="515.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.5" y="526.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (3 samples, 0.26%)</title><rect x="524.5" y="499.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.5" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (3 samples, 0.26%)</title><rect x="524.5" y="483.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.5" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (3 samples, 0.26%)</title><rect x="524.5" y="467.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.26%)</title><rect x="524.5" y="451.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.5" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.process (179 samples, 15.48%)</title><rect x="527.5" y="611.0" width="182.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.5" y="622.0">com/linecorp/decaton/pro..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.close (31 samples, 2.68%)</title><rect x="528.5" y="595.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.5" y="606.0">co..</text>
</g>
<g>
<title>org/slf4j/MDC.remove (31 samples, 2.68%)</title><rect x="528.5" y="579.0" width="31.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.5" y="590.0">or..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (30 samples, 2.60%)</title><rect x="529.6" y="563.0" width="30.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.6" y="574.0">ch..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (18 samples, 1.56%)</title><rect x="531.6" y="547.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (18 samples, 1.56%)</title><rect x="531.6" y="531.0" width="18.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (18 samples, 1.56%)</title><rect x="531.6" y="515.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (18 samples, 1.56%)</title><rect x="531.6" y="499.0" width="18.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.remove (10 samples, 0.87%)</title><rect x="550.0" y="547.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (6 samples, 0.52%)</title><rect x="554.1" y="531.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (6 samples, 0.52%)</title><rect x="554.1" y="515.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.1" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.&lt;init&gt; (2 samples, 0.17%)</title><rect x="560.2" y="595.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.2" y="606.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.&lt;init&gt; (2 samples, 0.17%)</title><rect x="560.2" y="579.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.2" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (2 samples, 0.17%)</title><rect x="560.2" y="563.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.2" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.loggingContext (109 samples, 9.43%)</title><rect x="562.2" y="595.0" width="111.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.2" y="606.0">com/linecorp/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/LoggingContext.&lt;init&gt; (109 samples, 9.43%)</title><rect x="562.2" y="579.0" width="111.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.2" y="590.0">com/linecorp/..</text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.17%)</title><rect x="571.4" y="563.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.4" y="574.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.17%)</title><rect x="571.4" y="547.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="574.4" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/TaskMetadata.toString (38 samples, 3.29%)</title><rect x="573.5" y="563.0" width="38.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.5" y="574.0">com..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (25 samples, 2.16%)</title><rect x="582.6" y="547.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.6" y="558.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 1.12%)</title><rect x="586.7" y="531.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (7 samples, 0.61%)</title><rect x="590.8" y="515.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.8" y="526.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.17%)</title><rect x="598.0" y="515.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="601.0" y="526.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.17%)</title><rect x="598.0" y="499.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.0" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.17%)</title><rect x="598.0" y="483.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="601.0" y="494.0"></text>
</g>
<g>
<title>jshort_arraycopy (2 samples, 0.17%)</title><rect x="600.0" y="531.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="603.0" y="542.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (5 samples, 0.43%)</title><rect x="602.0" y="531.0" width="5.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="605.0" y="542.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="607.1" y="531.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.1" y="542.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="607.1" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.1" y="526.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="607.1" y="499.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.1" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="607.1" y="483.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.1" y="494.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="607.1" y="467.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.1" y="478.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="607.1" y="451.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="610.1" y="462.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.09%)</title><rect x="607.1" y="435.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.1" y="446.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.09%)</title><rect x="607.1" y="419.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="610.1" y="430.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.09%)</title><rect x="607.1" y="403.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.1" y="414.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.09%)</title><rect x="607.1" y="387.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="610.1" y="398.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.09%)</title><rect x="607.1" y="371.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.1" y="382.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.09%)</title><rect x="607.1" y="355.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.1" y="366.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.09%)</title><rect x="607.1" y="339.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.1" y="350.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.09%)</title><rect x="607.1" y="323.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.1" y="334.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.09%)</title><rect x="607.1" y="307.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="610.1" y="318.0"></text>
</g>
<g>
<title>native_send_call_func_ipi (1 samples, 0.09%)</title><rect x="607.1" y="291.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="610.1" y="302.0"></text>
</g>
<g>
<title>physflat_send_IPI_mask (1 samples, 0.09%)</title><rect x="607.1" y="275.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.1" y="286.0"></text>
</g>
<g>
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.09%)</title><rect x="607.1" y="259.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.1" y="270.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="608.2" y="547.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="611.2" y="558.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.26%)</title><rect x="609.2" y="547.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.2" y="558.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.26%)</title><rect x="609.2" y="531.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.2" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.26%)</title><rect x="609.2" y="515.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.17%)</title><rect x="610.2" y="499.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.2" y="510.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.17%)</title><rect x="610.2" y="483.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.2" y="494.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.17%)</title><rect x="610.2" y="467.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.2" y="478.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.09%)</title><rect x="610.2" y="451.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="613.2" y="462.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.09%)</title><rect x="610.2" y="435.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.2" y="446.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.09%)</title><rect x="610.2" y="419.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="613.2" y="430.0"></text>
</g>
<g>
<title>remove_migration_ptes (1 samples, 0.09%)</title><rect x="610.2" y="403.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="613.2" y="414.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.09%)</title><rect x="610.2" y="387.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.2" y="398.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.09%)</title><rect x="610.2" y="371.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="613.2" y="382.0"></text>
</g>
<g>
<title>task_numa_fault (1 samples, 0.09%)</title><rect x="611.2" y="451.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="614.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="612.2" y="563.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.toString (4 samples, 0.35%)</title><rect x="612.2" y="547.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (4 samples, 0.35%)</title><rect x="612.2" y="531.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.2" y="542.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="615.3" y="515.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="618.3" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="615.3" y="499.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.3" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="615.3" y="483.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="618.3" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="615.3" y="467.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.3" y="478.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="615.3" y="451.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="618.3" y="462.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="615.3" y="435.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="618.3" y="446.0"></text>
</g>
<g>
<title>task_numa_fault (1 samples, 0.09%)</title><rect x="615.3" y="419.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.3" y="430.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (56 samples, 4.84%)</title><rect x="616.3" y="563.0" width="57.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.3" y="574.0">org/sl..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (56 samples, 4.84%)</title><rect x="616.3" y="547.0" width="57.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.3" y="558.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (4 samples, 0.35%)</title><rect x="616.3" y="531.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.35%)</title><rect x="616.3" y="515.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (4 samples, 0.35%)</title><rect x="616.3" y="499.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.3" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.35%)</title><rect x="616.3" y="483.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.3" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.26%)</title><rect x="620.4" y="531.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (3 samples, 0.26%)</title><rect x="620.4" y="515.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.26%)</title><rect x="620.4" y="499.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.4" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.26%)</title><rect x="620.4" y="483.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.17%)</title><rect x="621.4" y="467.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (49 samples, 4.24%)</title><rect x="623.5" y="531.0" width="50.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.5" y="542.0">java/..</text>
</g>
<g>
<title>java/util/HashMap.put (46 samples, 3.98%)</title><rect x="626.5" y="515.0" width="47.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.5" y="526.0">java..</text>
</g>
<g>
<title>java/util/HashMap.putVal (24 samples, 2.08%)</title><rect x="649.0" y="499.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.09%)</title><rect x="666.3" y="483.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.35%)</title><rect x="667.4" y="483.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.4" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.09%)</title><rect x="670.4" y="467.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="673.4" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="670.4" y="451.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="673.4" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.09%)</title><rect x="670.4" y="435.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="673.4" y="446.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="670.4" y="419.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.4" y="430.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="670.4" y="403.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="673.4" y="414.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="670.4" y="387.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="673.4" y="398.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.17%)</title><rect x="671.5" y="483.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="674.5" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.push (26 samples, 2.25%)</title><rect x="673.5" y="595.0" width="26.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.5" y="606.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessingContextImpl.pushDownStream (25 samples, 2.16%)</title><rect x="673.5" y="579.0" width="25.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.5" y="590.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$214/1707965473.process (9 samples, 0.78%)</title><rect x="673.5" y="563.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.5" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$null$5 (9 samples, 0.78%)</title><rect x="673.5" y="547.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.5" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (9 samples, 0.78%)</title><rect x="673.5" y="531.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.09%)</title><rect x="673.5" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (1 samples, 0.09%)</title><rect x="673.5" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.5" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.09%)</title><rect x="673.5" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.5" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.09%)</title><rect x="673.5" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.09%)</title><rect x="673.5" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.5" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (3 samples, 0.26%)</title><rect x="674.5" y="515.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.5" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="676.6" y="499.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="679.6" y="510.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="676.6" y="483.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="679.6" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.43%)</title><rect x="677.6" y="515.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.6" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/DecatonTask.&lt;init&gt; (5 samples, 0.43%)</title><rect x="682.7" y="563.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (8 samples, 0.69%)</title><rect x="687.8" y="563.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.8" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (8 samples, 0.69%)</title><rect x="687.8" y="547.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.35%)</title><rect x="687.8" y="531.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="690.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (4 samples, 0.35%)</title><rect x="691.9" y="531.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.9" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (1 samples, 0.09%)</title><rect x="696.0" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.0" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (1 samples, 0.09%)</title><rect x="696.0" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableRandomAccessList.subList (2 samples, 0.17%)</title><rect x="697.0" y="563.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.0" y="574.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (1 samples, 0.09%)</title><rect x="699.0" y="579.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.0" y="590.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/Utils.timer (1 samples, 0.09%)</title><rect x="700.0" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.0" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.09%)</title><rect x="700.0" y="579.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="703.0" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="700.0" y="563.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="703.0" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.09%)</title><rect x="700.0" y="547.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="703.0" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.09%)</title><rect x="700.0" y="531.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.0" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.09%)</title><rect x="700.0" y="515.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.0" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.09%)</title><rect x="700.0" y="499.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="703.0" y="510.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="700.0" y="483.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="703.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.78%)</title><rect x="701.1" y="595.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.1" y="606.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.43%)</title><rect x="701.1" y="579.0" width="5.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="704.1" y="590.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.35%)</title><rect x="702.1" y="563.0" width="4.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="705.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.35%)</title><rect x="706.2" y="579.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.35%)</title><rect x="706.2" y="563.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.2" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline$$Lambda$328/75997172.accept (4 samples, 0.35%)</title><rect x="706.2" y="547.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.2" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.lambda$scheduleThenProcess$43 (4 samples, 0.35%)</title><rect x="706.2" y="531.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.2" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/DeferredCompletion$$Lambda$289/33736739.complete (4 samples, 0.35%)</title><rect x="706.2" y="515.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.2" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/DeferredCompletion.lambda$combine$46 (4 samples, 0.35%)</title><rect x="706.2" y="499.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.2" y="510.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl$$Lambda$287/642645476.complete (4 samples, 0.35%)</title><rect x="706.2" y="483.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.2" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.lambda$reportFetchedOffset$53 (4 samples, 0.35%)</title><rect x="706.2" y="467.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.2" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.complete (4 samples, 0.35%)</title><rect x="706.2" y="451.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (4 samples, 0.35%)</title><rect x="706.2" y="435.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (4 samples, 0.35%)</title><rect x="706.2" y="419.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.2" y="430.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.26%)</title><rect x="707.2" y="403.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="710.2" y="414.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.26%)</title><rect x="707.2" y="387.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="710.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (25 samples, 2.16%)</title><rect x="710.2" y="611.0" width="25.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.2" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (22 samples, 1.90%)</title><rect x="713.3" y="595.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.3" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (22 samples, 1.90%)</title><rect x="713.3" y="579.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.3" y="590.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline$$Lambda$328/75997172.accept (22 samples, 1.90%)</title><rect x="713.3" y="563.0" width="22.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.3" y="574.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessPipeline.lambda$scheduleThenProcess$43 (22 samples, 1.90%)</title><rect x="713.3" y="547.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.3" y="558.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/DeferredCompletion$$Lambda$289/33736739.complete (22 samples, 1.90%)</title><rect x="713.3" y="531.0" width="22.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.3" y="542.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/DeferredCompletion.lambda$combine$46 (22 samples, 1.90%)</title><rect x="713.3" y="515.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.3" y="526.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl$$Lambda$287/642645476.complete (19 samples, 1.64%)</title><rect x="713.3" y="499.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.3" y="510.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.lambda$reportFetchedOffset$53 (19 samples, 1.64%)</title><rect x="713.3" y="483.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.3" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/OutOfOrderCommitControl.complete (19 samples, 1.64%)</title><rect x="713.3" y="467.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.3" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (19 samples, 1.64%)</title><rect x="713.3" y="451.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (19 samples, 1.64%)</title><rect x="713.3" y="435.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (1 samples, 0.09%)</title><rect x="731.7" y="419.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.09%)</title><rect x="731.7" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.7" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$$Lambda$288/271974223.complete (3 samples, 0.26%)</title><rect x="732.7" y="499.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.7" y="510.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.lambda$null$70 (3 samples, 0.26%)</title><rect x="732.7" y="483.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.7" y="494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="735.8" y="611.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="738.8" y="622.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="735.8" y="595.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="738.8" y="606.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="736.8" y="611.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.8" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="736.8" y="595.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.8" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="736.8" y="579.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.8" y="590.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="736.8" y="563.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="739.8" y="574.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.09%)</title><rect x="736.8" y="547.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.8" y="558.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="736.8" y="531.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.8" y="542.0"></text>
</g>
<g>
<title>put_page (1 samples, 0.09%)</title><rect x="736.8" y="515.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.8" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/Utils.timer (2 samples, 0.17%)</title><rect x="737.8" y="627.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.26%)</title><rect x="739.8" y="675.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.26%)</title><rect x="739.8" y="659.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.09%)</title><rect x="741.9" y="643.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (313 samples, 27.08%)</title><rect x="742.9" y="675.0" width="319.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.9" y="686.0">java/util/concurrent/ThreadPoolExecutor.get..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (313 samples, 27.08%)</title><rect x="742.9" y="659.0" width="319.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.9" y="670.0">java/util/concurrent/LinkedBlockingQueue.take</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (271 samples, 23.44%)</title><rect x="769.4" y="643.0" width="276.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.4" y="654.0">java/util/concurrent/locks/AbstractQu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (10 samples, 0.87%)</title><rect x="780.7" y="627.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.87%)</title><rect x="780.7" y="611.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (250 samples, 21.63%)</title><rect x="790.9" y="627.0" width="255.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.9" y="638.0">java/util/concurrent/locks/LockSup..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (248 samples, 21.45%)</title><rect x="792.9" y="611.0" width="253.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.9" y="622.0">sun/misc/Unsafe.park</text>
</g>
<g>
<title>JfrBackend::is_event_enabled(TraceEventId) (1 samples, 0.09%)</title><rect x="797.0" y="595.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="800.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="798.0" y="595.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="801.0" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (227 samples, 19.64%)</title><rect x="799.0" y="595.0" width="231.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="802.0" y="606.0">Unsafe_Park</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (4 samples, 0.35%)</title><rect x="800.1" y="579.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="803.1" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 2.68%)</title><rect x="804.2" y="579.0" width="31.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="807.2" y="590.0">Pa..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (11 samples, 0.95%)</title><rect x="816.4" y="563.0" width="11.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="819.4" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.69%)</title><rect x="816.4" y="547.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="819.4" y="558.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (8 samples, 0.69%)</title><rect x="816.4" y="531.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="819.4" y="542.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.17%)</title><rect x="824.6" y="547.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="827.6" y="558.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.09%)</title><rect x="826.6" y="547.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="829.6" y="558.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.17%)</title><rect x="827.6" y="563.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="830.6" y="574.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.17%)</title><rect x="829.7" y="563.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="832.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (4 samples, 0.35%)</title><rect x="831.7" y="563.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.09%)</title><rect x="835.8" y="579.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="838.8" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.09%)</title><rect x="836.8" y="579.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="839.8" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (95 samples, 8.22%)</title><rect x="837.8" y="579.0" width="97.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="840.8" y="590.0">__lll_unloc..</text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.17%)</title><rect x="905.2" y="563.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.2" y="574.0"></text>
</g>
<g>
<title>system_call_fastpath (27 samples, 2.34%)</title><rect x="907.2" y="563.0" width="27.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="910.2" y="574.0">s..</text>
</g>
<g>
<title>sys_futex (26 samples, 2.25%)</title><rect x="908.3" y="547.0" width="26.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="911.3" y="558.0">s..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="908.3" y="531.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.3" y="542.0"></text>
</g>
<g>
<title>do_futex (25 samples, 2.16%)</title><rect x="909.3" y="531.0" width="25.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.3" y="542.0">d..</text>
</g>
<g>
<title>futex_wake (24 samples, 2.08%)</title><rect x="909.3" y="515.0" width="24.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.3" y="526.0">f..</text>
</g>
<g>
<title>drop_futex_key_refs.isra.13 (1 samples, 0.09%)</title><rect x="911.3" y="499.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="914.3" y="510.0"></text>
</g>
<g>
<title>get_futex_key (21 samples, 1.82%)</title><rect x="912.4" y="499.0" width="21.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="915.4" y="510.0">g..</text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (20 samples, 1.73%)</title><rect x="913.4" y="483.0" width="20.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="916.4" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.09%)</title><rect x="933.8" y="515.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.8" y="526.0"></text>
</g>
<g>
<title>__pthread_cond_wait (70 samples, 6.06%)</title><rect x="934.8" y="579.0" width="71.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="937.8" y="590.0">__pthrea..</text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="966.5" y="563.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="969.5" y="574.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.09%)</title><rect x="967.5" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="970.5" y="574.0"></text>
</g>
<g>
<title>system_call_fastpath (37 samples, 3.20%)</title><rect x="968.5" y="563.0" width="37.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.5" y="574.0">sys..</text>
</g>
<g>
<title>sys_futex (37 samples, 3.20%)</title><rect x="968.5" y="547.0" width="37.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="971.5" y="558.0">sys..</text>
</g>
<g>
<title>do_futex (36 samples, 3.11%)</title><rect x="969.5" y="531.0" width="36.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.5" y="542.0">do_..</text>
</g>
<g>
<title>futex_wait (35 samples, 3.03%)</title><rect x="970.5" y="515.0" width="35.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.5" y="526.0">fut..</text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.09%)</title><rect x="970.5" y="499.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.5" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.95%)</title><rect x="971.6" y="499.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="974.6" y="510.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.61%)</title><rect x="975.6" y="483.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="978.6" y="494.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.17%)</title><rect x="980.7" y="467.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="983.7" y="478.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.09%)</title><rect x="981.8" y="451.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.8" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (23 samples, 1.99%)</title><rect x="982.8" y="499.0" width="23.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="985.8" y="510.0">f..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.26%)</title><rect x="998.1" y="483.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1001.1" y="494.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.35%)</title><rect x="1001.2" y="483.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.2" y="494.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (1 samples, 0.09%)</title><rect x="1004.2" y="467.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1007.2" y="478.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.09%)</title><rect x="1005.2" y="483.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1008.2" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.35%)</title><rect x="1006.3" y="579.0" width="4.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1009.3" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (6 samples, 0.52%)</title><rect x="1010.3" y="579.0" width="6.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1013.3" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.17%)</title><rect x="1016.5" y="579.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1019.5" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (9 samples, 0.78%)</title><rect x="1018.5" y="579.0" width="9.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1021.5" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.17%)</title><rect x="1027.7" y="579.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1030.7" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.09%)</title><rect x="1029.7" y="579.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1032.7" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.52%)</title><rect x="1030.8" y="595.0" width="6.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1033.8" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.52%)</title><rect x="1030.8" y="579.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1033.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.43%)</title><rect x="1036.9" y="595.0" width="5.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1039.9" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.43%)</title><rect x="1036.9" y="579.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1039.9" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.26%)</title><rect x="1042.0" y="595.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1045.0" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.09%)</title><rect x="1045.1" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 1.30%)</title><rect x="1046.1" y="643.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="1061.4" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="1061.4" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.4" y="638.0"></text>
</g>
<g>
<title>start_thread (125 samples, 10.81%)</title><rect x="1062.4" y="723.0" width="127.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1065.4" y="734.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (125 samples, 10.81%)</title><rect x="1062.4" y="707.0" width="127.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1065.4" y="718.0">java_start(Threa..</text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 1.38%)</title><rect x="1062.4" y="691.0" width="16.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1065.4" y="702.0"></text>
</g>
<g>
<title>G1ParCleanupCTTask::work(unsigned int) (1 samples, 0.09%)</title><rect x="1062.4" y="675.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1065.4" y="686.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.09%)</title><rect x="1062.4" y="659.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1065.4" y="670.0"></text>
</g>
<g>
<title>G1ParPreserveCMReferentsTask::work(unsigned int) (5 samples, 0.43%)</title><rect x="1063.4" y="675.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1066.4" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.43%)</title><rect x="1063.4" y="659.0" width="5.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1066.4" y="670.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.43%)</title><rect x="1063.4" y="643.0" width="5.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1066.4" y="654.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.87%)</title><rect x="1068.5" y="675.0" width="10.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1071.5" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.43%)</title><rect x="1068.5" y="659.0" width="5.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.5" y="670.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.43%)</title><rect x="1068.5" y="643.0" width="5.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1071.5" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, bool, unsigned int) (5 samples, 0.43%)</title><rect x="1073.6" y="659.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.6" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(OopClosure*, CLDClosure*, CLDClosure*, CLDClosure*, CodeBlobClosure*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.17%)</title><rect x="1073.6" y="643.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.6" y="654.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.09%)</title><rect x="1073.6" y="627.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1076.6" y="638.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.09%)</title><rect x="1073.6" y="611.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.6" y="622.0"></text>
</g>
<g>
<title>G1KlassScanClosure::do_klass(Klass*) (1 samples, 0.09%)</title><rect x="1073.6" y="595.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1076.6" y="606.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.09%)</title><rect x="1074.7" y="627.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1077.7" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="1074.7" y="611.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1077.7" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="1074.7" y="595.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1077.7" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="1074.7" y="579.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.7" y="590.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="1074.7" y="563.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1077.7" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(OopClosure*, OopClosure*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.26%)</title><rect x="1075.7" y="643.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1078.7" y="654.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopClosure*) (3 samples, 0.26%)</title><rect x="1075.7" y="627.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.7" y="638.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.17%)</title><rect x="1076.7" y="611.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.7" y="622.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.17%)</title><rect x="1076.7" y="595.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1079.7" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.17%)</title><rect x="1076.7" y="579.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.7" y="590.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.17%)</title><rect x="1076.7" y="563.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1079.7" y="574.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.17%)</title><rect x="1076.7" y="547.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.7" y="558.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.09%)</title><rect x="1076.7" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1079.7" y="542.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (1 samples, 0.09%)</title><rect x="1076.7" y="515.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1079.7" y="526.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.09%)</title><rect x="1076.7" y="499.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1079.7" y="510.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.09%)</title><rect x="1077.7" y="531.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1080.7" y="542.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.09%)</title><rect x="1077.7" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1080.7" y="526.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (1 samples, 0.09%)</title><rect x="1077.7" y="499.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1080.7" y="510.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.09%)</title><rect x="1077.7" y="483.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.7" y="494.0"></text>
</g>
<g>
<title>JavaThread::run() (109 samples, 9.43%)</title><rect x="1078.7" y="691.0" width="111.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1081.7" y="702.0">JavaThread::r..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (109 samples, 9.43%)</title><rect x="1078.7" y="675.0" width="111.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.7" y="686.0">JavaThread::t..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (109 samples, 9.43%)</title><rect x="1078.7" y="659.0" width="111.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.7" y="670.0">CompileBroker..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (108 samples, 9.34%)</title><rect x="1078.7" y="643.0" width="110.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1081.7" y="654.0">CompileBroker..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (108 samples, 9.34%)</title><rect x="1078.7" y="627.0" width="110.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.7" y="638.0">C2Compiler::c..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (108 samples, 9.34%)</title><rect x="1078.7" y="611.0" width="110.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.7" y="622.0">Compile::Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (41 samples, 3.55%)</title><rect x="1078.7" y="595.0" width="41.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1081.7" y="606.0">Com..</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.17%)</title><rect x="1078.7" y="579.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.7" y="590.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.17%)</title><rect x="1078.7" y="563.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1081.7" y="574.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.09%)</title><rect x="1079.8" y="547.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1082.8" y="558.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.17%)</title><rect x="1080.8" y="579.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.8" y="590.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.09%)</title><rect x="1080.8" y="563.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.8" y="574.0"></text>
</g>
<g>
<title>DebugInformationRecorder::dump_object_pool(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.09%)</title><rect x="1080.8" y="547.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.8" y="558.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.09%)</title><rect x="1080.8" y="531.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1083.8" y="542.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.09%)</title><rect x="1081.8" y="563.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.8" y="574.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.35%)</title><rect x="1082.8" y="579.0" width="4.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1085.8" y="590.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.35%)</title><rect x="1082.8" y="563.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1085.8" y="574.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (2 samples, 0.17%)</title><rect x="1084.9" y="547.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1087.9" y="558.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.09%)</title><rect x="1086.9" y="579.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.9" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.09%)</title><rect x="1086.9" y="563.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1089.9" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.09%)</title><rect x="1087.9" y="579.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.9" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.09%)</title><rect x="1087.9" y="563.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.9" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="1087.9" y="547.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.9" y="558.0"></text>
</g>
<g>
<title>decodeHeapOop_not_nullNode::ideal_Opcode() const (1 samples, 0.09%)</title><rect x="1087.9" y="531.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.9" y="542.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (31 samples, 2.68%)</title><rect x="1088.9" y="579.0" width="31.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.9" y="590.0">Ph..</text>
</g>
<g>
<title>MachSpillCopyNode::oper_input_base() const (1 samples, 0.09%)</title><rect x="1090.0" y="563.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.0" y="574.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.09%)</title><rect x="1091.0" y="563.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.0" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.17%)</title><rect x="1092.0" y="563.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1095.0" y="574.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="1092.0" y="547.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1095.0" y="558.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.09%)</title><rect x="1093.0" y="547.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1096.0" y="558.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.09%)</title><rect x="1093.0" y="531.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.0" y="542.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.26%)</title><rect x="1094.0" y="563.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.0" y="574.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.17%)</title><rect x="1095.1" y="547.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1098.1" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.26%)</title><rect x="1097.1" y="563.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1100.1" y="574.0"></text>
</g>
<g>
<title>loadConPNode::rule() const (1 samples, 0.09%)</title><rect x="1099.2" y="547.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.2" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.43%)</title><rect x="1100.2" y="563.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.2" y="574.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="1101.2" y="547.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.2" y="558.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.09%)</title><rect x="1102.2" y="547.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.2" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.17%)</title><rect x="1103.2" y="547.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.2" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.09%)</title><rect x="1105.3" y="563.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1108.3" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.09%)</title><rect x="1105.3" y="547.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1108.3" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.52%)</title><rect x="1106.3" y="563.0" width="6.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1109.3" y="574.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.09%)</title><rect x="1109.4" y="547.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1112.4" y="558.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.09%)</title><rect x="1110.4" y="547.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1113.4" y="558.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.09%)</title><rect x="1111.4" y="547.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1114.4" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.17%)</title><rect x="1112.4" y="563.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1115.4" y="574.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.09%)</title><rect x="1114.5" y="563.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.5" y="574.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.09%)</title><rect x="1114.5" y="547.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.5" y="558.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (1 samples, 0.09%)</title><rect x="1114.5" y="531.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1117.5" y="542.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.09%)</title><rect x="1114.5" y="515.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1117.5" y="526.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.09%)</title><rect x="1115.5" y="563.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.5" y="574.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="1115.5" y="547.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1118.5" y="558.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.09%)</title><rect x="1116.5" y="563.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.5" y="574.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.09%)</title><rect x="1117.5" y="563.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.5" y="574.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="1117.5" y="547.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1120.5" y="558.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.09%)</title><rect x="1118.5" y="563.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.5" y="574.0"></text>
</g>
<g>
<title>storePNode::oper_input_base() const (1 samples, 0.09%)</title><rect x="1119.6" y="563.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1122.6" y="574.0"></text>
</g>
<g>
<title>Compile::Optimize() (63 samples, 5.45%)</title><rect x="1120.6" y="595.0" width="64.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.6" y="606.0">Compile..</text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.26%)</title><rect x="1120.6" y="579.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1123.6" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.26%)</title><rect x="1120.6" y="563.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.6" y="574.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;) (3 samples, 0.26%)</title><rect x="1120.6" y="547.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.6" y="558.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.17%)</title><rect x="1121.6" y="531.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.6" y="542.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1121.6" y="515.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.6" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1121.6" y="499.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.6" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.09%)</title><rect x="1121.6" y="483.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.6" y="494.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.09%)</title><rect x="1121.6" y="467.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.6" y="478.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 0.09%)</title><rect x="1121.6" y="451.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1124.6" y="462.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1122.6" y="515.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.6" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1122.6" y="499.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1125.6" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1122.6" y="483.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.6" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1122.6" y="467.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1125.6" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (53 samples, 4.58%)</title><rect x="1123.7" y="579.0" width="54.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.7" y="590.0">Phase..</text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.17%)</title><rect x="1123.7" y="563.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1126.7" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (47 samples, 4.07%)</title><rect x="1125.7" y="563.0" width="48.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.7" y="574.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (46 samples, 3.98%)</title><rect x="1126.7" y="547.0" width="47.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.7" y="558.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (2 samples, 0.17%)</title><rect x="1126.7" y="531.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.7" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (44 samples, 3.81%)</title><rect x="1128.8" y="531.0" width="44.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.8" y="542.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.09%)</title><rect x="1167.5" y="515.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.5" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1167.5" y="499.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.5" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (5 samples, 0.43%)</title><rect x="1168.6" y="515.0" width="5.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.6" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.17%)</title><rect x="1173.7" y="563.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.7" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.17%)</title><rect x="1173.7" y="547.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.7" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.09%)</title><rect x="1174.7" y="531.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.7" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.09%)</title><rect x="1174.7" y="515.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.7" y="526.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.09%)</title><rect x="1175.7" y="563.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.7" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="1175.7" y="547.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.7" y="558.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1175.7" y="531.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.7" y="542.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.09%)</title><rect x="1176.7" y="563.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1179.7" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.61%)</title><rect x="1177.8" y="579.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.8" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.61%)</title><rect x="1177.8" y="563.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.8" y="574.0"></text>
</g>
<g>
<title>LoadSNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1177.8" y="547.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.8" y="558.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.09%)</title><rect x="1177.8" y="531.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.8" y="542.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.09%)</title><rect x="1177.8" y="515.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.8" y="526.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.09%)</title><rect x="1177.8" y="499.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.8" y="510.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1177.8" y="483.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.8" y="494.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1177.8" y="467.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.8" y="478.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1178.8" y="547.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.8" y="558.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.09%)</title><rect x="1179.8" y="547.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.8" y="558.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.09%)</title><rect x="1179.8" y="531.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.8" y="542.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.09%)</title><rect x="1179.8" y="515.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.8" y="526.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.09%)</title><rect x="1180.8" y="547.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.8" y="558.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1181.8" y="547.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="558.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.09%)</title><rect x="1181.8" y="531.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.8" y="542.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.09%)</title><rect x="1181.8" y="515.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.8" y="526.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.17%)</title><rect x="1182.9" y="547.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.9" y="558.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (2 samples, 0.17%)</title><rect x="1182.9" y="531.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.9" y="542.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="515.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.9" y="526.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="499.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.9" y="510.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="483.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.9" y="494.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="467.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.9" y="478.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="451.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.9" y="462.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="435.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.9" y="446.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="419.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.9" y="430.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="403.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.9" y="414.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="387.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.9" y="398.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="371.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.9" y="382.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="355.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.9" y="366.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="339.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.9" y="350.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="323.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.9" y="334.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="307.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.9" y="318.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="291.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.9" y="302.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="275.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.9" y="286.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="259.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.9" y="270.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="243.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.9" y="254.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.17%)</title><rect x="1182.9" y="227.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.9" y="238.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1182.9" y="211.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.9" y="222.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.09%)</title><rect x="1182.9" y="195.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.9" y="206.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.09%)</title><rect x="1182.9" y="179.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.9" y="190.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.09%)</title><rect x="1183.9" y="211.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.9" y="222.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.09%)</title><rect x="1183.9" y="195.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.9" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.35%)</title><rect x="1184.9" y="595.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.35%)</title><rect x="1184.9" y="579.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.35%)</title><rect x="1184.9" y="563.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.35%)</title><rect x="1184.9" y="547.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.35%)</title><rect x="1184.9" y="531.0" width="4.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.35%)</title><rect x="1184.9" y="515.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.26%)</title><rect x="1184.9" y="499.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.26%)</title><rect x="1184.9" y="483.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.26%)</title><rect x="1184.9" y="467.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.26%)</title><rect x="1184.9" y="451.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.26%)</title><rect x="1184.9" y="435.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.26%)</title><rect x="1184.9" y="419.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="430.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.26%)</title><rect x="1184.9" y="403.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.26%)</title><rect x="1184.9" y="387.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.26%)</title><rect x="1184.9" y="371.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="382.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.09%)</title><rect x="1184.9" y="355.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.17%)</title><rect x="1185.9" y="355.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.17%)</title><rect x="1185.9" y="339.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.17%)</title><rect x="1185.9" y="323.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.17%)</title><rect x="1185.9" y="307.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.17%)</title><rect x="1185.9" y="291.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.17%)</title><rect x="1185.9" y="275.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.17%)</title><rect x="1185.9" y="259.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.17%)</title><rect x="1185.9" y="243.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.17%)</title><rect x="1185.9" y="227.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.9" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.17%)</title><rect x="1185.9" y="211.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1185.9" y="195.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1185.9" y="179.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1185.9" y="163.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1185.9" y="147.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1185.9" y="131.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1185.9" y="115.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.9" y="126.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1185.9" y="99.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="110.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.09%)</title><rect x="1185.9" y="83.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="94.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.09%)</title><rect x="1185.9" y="67.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.9" y="78.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1186.9" y="195.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1186.9" y="179.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.9" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1186.9" y="163.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.9" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1186.9" y="147.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1186.9" y="131.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.9" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1186.9" y="115.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.9" y="126.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1186.9" y="99.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.9" y="110.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1186.9" y="83.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="94.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1186.9" y="67.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.9" y="78.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.09%)</title><rect x="1186.9" y="51.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="62.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (1 samples, 0.09%)</title><rect x="1186.9" y="35.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1188.0" y="499.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1188.0" y="483.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1188.0" y="467.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1188.0" y="451.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1188.0" y="435.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1188.0" y="419.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1188.0" y="403.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1188.0" y="387.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1188.0" y="371.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1188.0" y="355.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1188.0" y="339.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1188.0" y="323.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1188.0" y="307.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1188.0" y="291.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1188.0" y="275.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1188.0" y="259.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.0" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1188.0" y="243.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1188.0" y="227.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1188.0" y="211.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="222.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1188.0" y="195.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1188.0" y="179.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1188.0" y="163.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="174.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.09%)</title><rect x="1188.0" y="147.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="158.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1188.0" y="131.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.0" y="142.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="1188.0" y="115.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="126.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.09%)</title><rect x="1189.0" y="643.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.0" y="654.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.09%)</title><rect x="1189.0" y="627.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.0" y="638.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="1189.0" y="611.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.0" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="1189.0" y="595.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1192.0" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.09%)</title><rect x="1189.0" y="579.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1192.0" y="590.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="1189.0" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.0" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="1189.0" y="547.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.0" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.09%)</title><rect x="1189.0" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.0" y="542.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="1189.0" y="515.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.0" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1189.0" y="499.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1192.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="1189.0" y="483.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.0" y="494.0"></text>
</g>
</g>
</svg>
