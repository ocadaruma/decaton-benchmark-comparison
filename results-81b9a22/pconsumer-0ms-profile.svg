<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1413"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1413"> </text>
<g id="frames">
<g>
<title>all (4,513 samples, 100.00%)</title><rect x="10.0" y="1379.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1390.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,989 samples, 66.23%)</title><rect x="10.0" y="1363.0" width="781.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="1374.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,989 samples, 66.23%)</title><rect x="10.0" y="1347.0" width="781.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="1358.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,989 samples, 66.23%)</title><rect x="10.0" y="1331.0" width="781.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="1342.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2,751 samples, 60.96%)</title><rect x="10.0" y="1315.0" width="719.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="1326.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>io/confluent/parallelconsumer/BrokerPollSystem$$Lambda$47/1170727939.call (193 samples, 4.28%)</title><rect x="11.6" y="1299.0" width="50.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.6" y="1310.0">io/co..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/BrokerPollSystem.controlLoop (193 samples, 4.28%)</title><rect x="11.6" y="1283.0" width="50.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.6" y="1294.0">io/co..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.02%)</title><rect x="11.8" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="1278.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/BrokerPollSystem.maybeDoCommit (51 samples, 1.13%)</title><rect x="12.1" y="1267.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.1" y="1278.0"></text>
</g>
<g>
<title>java/util/Optional.ifPresent (51 samples, 1.13%)</title><rect x="12.1" y="1251.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="1262.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/BrokerPollSystem$$Lambda$229/1853989077.accept (51 samples, 1.13%)</title><rect x="12.1" y="1235.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.1" y="1246.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ConsumerOffsetCommitter.maybeDoCommit (51 samples, 1.13%)</title><rect x="12.1" y="1219.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.1" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.02%)</title><rect x="12.1" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.1" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="12.1" y="1187.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.1" y="1198.0"></text>
</g>
<g>
<title>frame::is_compiled_frame() const (1 samples, 0.02%)</title><rect x="12.1" y="1171.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.1" y="1182.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/AbstractOffsetCommitter.retrieveOffsetsAndCommit (50 samples, 1.11%)</title><rect x="12.4" y="1203.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.findCompletedEligibleOffsetsAndRemove (50 samples, 1.11%)</title><rect x="12.4" y="1187.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.4" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.findCompletedEligibleOffsetsAndRemove (50 samples, 1.11%)</title><rect x="12.4" y="1171.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.remove (30 samples, 0.66%)</title><rect x="15.2" y="1155.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.2" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="16.5" y="1139.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.5" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::new_store_pre_barrier(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="16.5" y="1123.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.5" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::can_elide_initializing_store_barrier(oopDesc*) (1 samples, 0.02%)</title><rect x="16.5" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="19.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doRemove (23 samples, 0.51%)</title><rect x="16.8" y="1139.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (22 samples, 0.49%)</title><rect x="16.8" y="1123.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tryReduceLevel (1 samples, 0.02%)</title><rect x="22.6" y="1123.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.6" y="1134.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="22.8" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="25.8" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="22.8" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="25.8" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="22.8" y="1107.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="25.8" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="22.8" y="1091.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.8" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="22.8" y="1075.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.8" y="1086.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="22.8" y="1059.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.8" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="22.8" y="1043.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="25.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.size (7 samples, 0.16%)</title><rect x="23.1" y="1155.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.1" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="24.6" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.6" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="24.6" y="1123.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.6" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="24.6" y="1107.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.6" y="1118.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="24.6" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.6" y="1102.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="24.9" y="1155.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.9" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="24.9" y="1139.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.9" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="24.9" y="1123.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.9" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="25.2" y="1107.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.2" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="25.2" y="1091.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.2" y="1102.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="25.2" y="1075.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="28.2" y="1086.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="25.2" y="1059.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.2" y="1070.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="25.2" y="1043.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.2" y="1054.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="25.2" y="1027.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.2" y="1038.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="25.2" y="1011.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.2" y="1022.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="25.2" y="995.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.2" y="1006.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="25.2" y="979.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.2" y="990.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="25.2" y="963.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.2" y="974.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/BrokerPollSystem.pollBrokerForRecords (140 samples, 3.10%)</title><rect x="25.4" y="1267.0" width="36.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.4" y="1278.0">io/..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ConsumerManager.poll (140 samples, 3.10%)</title><rect x="25.4" y="1251.0" width="36.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.4" y="1262.0">io/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (140 samples, 3.10%)</title><rect x="25.4" y="1235.0" width="36.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.4" y="1246.0">org..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (140 samples, 3.10%)</title><rect x="25.4" y="1219.0" width="36.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.4" y="1230.0">org..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (128 samples, 2.84%)</title><rect x="25.4" y="1203.0" width="33.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.4" y="1214.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.timeToNextPoll (1 samples, 0.02%)</title><rect x="25.4" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.4" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator.timeToNextHeartbeat (1 samples, 0.02%)</title><rect x="25.4" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.4" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Heartbeat.timeToNextHeartbeat (1 samples, 0.02%)</title><rect x="25.4" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.4" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.02%)</title><rect x="25.7" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.7" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.02%)</title><rect x="25.7" y="1171.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.7" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.02%)</title><rect x="25.7" y="1155.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.7" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 0.02%)</title><rect x="25.7" y="1139.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.7" y="1150.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (1 samples, 0.02%)</title><rect x="25.7" y="1123.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.7" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.02%)</title><rect x="25.7" y="1107.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.02%)</title><rect x="25.7" y="1091.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.02%)</title><rect x="25.7" y="1075.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (1 samples, 0.02%)</title><rect x="25.7" y="1059.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.updateRegistrations (1 samples, 0.02%)</title><rect x="25.7" y="1043.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.7" y="1054.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (126 samples, 2.79%)</title><rect x="25.9" y="1187.0" width="33.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.9" y="1198.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (125 samples, 2.77%)</title><rect x="25.9" y="1171.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.9" y="1182.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (124 samples, 2.75%)</title><rect x="25.9" y="1155.0" width="32.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.9" y="1166.0">or..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (124 samples, 2.75%)</title><rect x="25.9" y="1139.0" width="32.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.9" y="1150.0">or..</text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="26.2" y="1123.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.2" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="26.2" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (2 samples, 0.04%)</title><rect x="26.2" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="26.2" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.2" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="26.2" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="1070.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="26.2" y="1043.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="29.2" y="1054.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="26.2" y="1027.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.2" y="1038.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="26.2" y="1011.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.2" y="1022.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="26.5" y="995.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="29.5" y="1006.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="26.5" y="979.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.5" y="990.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="26.5" y="963.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.5" y="974.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="26.5" y="947.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.5" y="958.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (14 samples, 0.31%)</title><rect x="26.7" y="1123.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.7" y="1134.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (3 samples, 0.07%)</title><rect x="26.7" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.7" y="1118.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (3 samples, 0.07%)</title><rect x="26.7" y="1091.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.7" y="1102.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (3 samples, 0.07%)</title><rect x="26.7" y="1075.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.7" y="1086.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (3 samples, 0.07%)</title><rect x="26.7" y="1059.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.7" y="1070.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (3 samples, 0.07%)</title><rect x="26.7" y="1043.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.7" y="1054.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (3 samples, 0.07%)</title><rect x="26.7" y="1027.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.7" y="1038.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (3 samples, 0.07%)</title><rect x="26.7" y="1011.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.7" y="1022.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (11 samples, 0.24%)</title><rect x="27.5" y="1107.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.5" y="1118.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (11 samples, 0.24%)</title><rect x="27.5" y="1091.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.5" y="1102.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="30.1" y="1075.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.1" y="1086.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="30.1" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.1" y="1070.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="30.1" y="1043.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="33.1" y="1054.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="30.1" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.1" y="1038.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="30.1" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.1" y="1022.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="30.1" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.1" y="1006.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="30.1" y="979.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="33.1" y="990.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="30.1" y="963.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.1" y="974.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="30.1" y="947.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.1" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="30.1" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.1" y="942.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.access$3500 (107 samples, 2.37%)</title><rect x="30.4" y="1123.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.4" y="1134.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.parseRecord (107 samples, 2.37%)</title><rect x="30.4" y="1107.0" width="28.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.4" y="1118.0">o..</text>
</g>
<g>
<title>org/apache/kafka/common/header/internals/RecordHeaders.&lt;init&gt; (7 samples, 0.16%)</title><rect x="30.4" y="1091.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.4" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.16%)</title><rect x="30.4" y="1075.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.4" y="1086.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.11%)</title><rect x="30.9" y="1059.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="33.9" y="1070.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.11%)</title><rect x="30.9" y="1043.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="33.9" y="1054.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.11%)</title><rect x="30.9" y="1027.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.9" y="1038.0"></text>
</g>
<g>
<title>handle_mm_fault (4 samples, 0.09%)</title><rect x="31.2" y="1011.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="34.2" y="1022.0"></text>
</g>
<g>
<title>handle_pte_fault (4 samples, 0.09%)</title><rect x="31.2" y="995.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.2" y="1006.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="31.2" y="979.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.2" y="990.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (3 samples, 0.07%)</title><rect x="31.4" y="979.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="34.4" y="990.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (3 samples, 0.07%)</title><rect x="31.4" y="963.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.4" y="974.0"></text>
</g>
<g>
<title>org/apache/kafka/common/serialization/Deserializer.deserialize (100 samples, 2.22%)</title><rect x="32.2" y="1091.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.2" y="1102.0">o..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (100 samples, 2.22%)</title><rect x="32.2" y="1075.0" width="26.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.2" y="1086.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (100 samples, 2.22%)</title><rect x="32.2" y="1059.0" width="26.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.2" y="1070.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (100 samples, 2.22%)</title><rect x="32.2" y="1043.0" width="26.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.2" y="1054.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (38 samples, 0.84%)</title><rect x="33.8" y="1027.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.8" y="1038.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (5 samples, 0.11%)</title><rect x="33.8" y="1011.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.8" y="1022.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (5 samples, 0.11%)</title><rect x="33.8" y="995.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.8" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecyclers.getBufferRecycler (5 samples, 0.11%)</title><rect x="33.8" y="979.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.8" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="33.8" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.04%)</title><rect x="34.1" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.1" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.04%)</title><rect x="34.1" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.1" y="942.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="34.6" y="963.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="37.6" y="974.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="34.6" y="947.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="37.6" y="958.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="34.6" y="931.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="37.6" y="942.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="34.6" y="915.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.6" y="926.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="34.6" y="899.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.6" y="910.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="34.6" y="883.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="37.6" y="894.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="34.6" y="867.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="37.6" y="878.0"></text>
</g>
<g>
<title>clear_page_c_e (1 samples, 0.02%)</title><rect x="34.6" y="851.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="37.6" y="862.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="34.8" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.8" y="894.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="34.8" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.8" y="878.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (33 samples, 0.73%)</title><rect x="35.1" y="1011.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.1" y="1022.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (33 samples, 0.73%)</title><rect x="35.1" y="995.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.1" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.detectEncoding (32 samples, 0.71%)</title><rect x="35.1" y="979.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.1" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.handleBOM (32 samples, 0.71%)</title><rect x="35.1" y="963.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.1" y="974.0"></text>
</g>
<g>
<title>page_fault (20 samples, 0.44%)</title><rect x="38.2" y="947.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="41.2" y="958.0"></text>
</g>
<g>
<title>do_page_fault (20 samples, 0.44%)</title><rect x="38.2" y="931.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="41.2" y="942.0"></text>
</g>
<g>
<title>__do_page_fault (20 samples, 0.44%)</title><rect x="38.2" y="915.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="41.2" y="926.0"></text>
</g>
<g>
<title>handle_mm_fault (15 samples, 0.33%)</title><rect x="39.5" y="899.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="42.5" y="910.0"></text>
</g>
<g>
<title>handle_pte_fault (14 samples, 0.31%)</title><rect x="39.8" y="883.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="42.8" y="894.0"></text>
</g>
<g>
<title>alloc_pages_vma (4 samples, 0.09%)</title><rect x="39.8" y="867.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="42.8" y="878.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (4 samples, 0.09%)</title><rect x="39.8" y="851.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="42.8" y="862.0"></text>
</g>
<g>
<title>get_page_from_freelist (4 samples, 0.09%)</title><rect x="39.8" y="835.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="42.8" y="846.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="40.9" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.9" y="878.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="40.9" y="851.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="43.9" y="862.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="40.9" y="835.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.9" y="846.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="40.9" y="819.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.9" y="830.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="40.9" y="803.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.9" y="814.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="40.9" y="787.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.9" y="798.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="40.9" y="771.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.9" y="782.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="40.9" y="755.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.9" y="766.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="40.9" y="739.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.9" y="750.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="40.9" y="723.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.9" y="734.0"></text>
</g>
<g>
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="40.9" y="707.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.9" y="718.0"></text>
</g>
<g>
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="40.9" y="691.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.9" y="702.0"></text>
</g>
<g>
<title>task_numa_fault (1 samples, 0.02%)</title><rect x="41.1" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="44.1" y="862.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (6 samples, 0.13%)</title><rect x="41.4" y="867.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="44.4" y="878.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (6 samples, 0.13%)</title><rect x="41.4" y="851.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.4" y="862.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (2 samples, 0.04%)</title><rect x="42.9" y="867.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.9" y="878.0"></text>
</g>
<g>
<title>__inc_zone_page_state (1 samples, 0.02%)</title><rect x="43.2" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.2" y="862.0"></text>
</g>
<g>
<title>__inc_zone_state (1 samples, 0.02%)</title><rect x="43.2" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="46.2" y="846.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="43.5" y="979.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.5" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (1 samples, 0.02%)</title><rect x="43.5" y="963.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.5" y="974.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (1 samples, 0.02%)</title><rect x="43.5" y="947.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.5" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::new_store_pre_barrier(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="43.5" y="931.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="46.5" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (46 samples, 1.02%)</title><rect x="43.7" y="1027.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.7" y="1038.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (6 samples, 0.13%)</title><rect x="43.7" y="1011.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.13%)</title><rect x="43.7" y="995.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.7" y="1006.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="44.8" y="979.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.8" y="990.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="44.8" y="963.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="47.8" y="974.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="44.8" y="947.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.8" y="958.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="45.0" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="48.0" y="942.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="45.0" y="915.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.0" y="926.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="45.0" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.0" y="910.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="45.0" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="48.0" y="894.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (5 samples, 0.11%)</title><rect x="45.3" y="1011.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.3" y="1022.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (5 samples, 0.11%)</title><rect x="45.3" y="995.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.3" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeObjectScope (1 samples, 0.02%)</title><rect x="45.8" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (2 samples, 0.04%)</title><rect x="46.1" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.1" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (2 samples, 0.04%)</title><rect x="46.1" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.1" y="974.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.createDeserializationContext (3 samples, 0.07%)</title><rect x="46.6" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.6" y="1022.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext$Impl.createInstance (3 samples, 0.07%)</title><rect x="46.6" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.6" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (32 samples, 0.71%)</title><rect x="47.4" y="1011.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.4" y="1022.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (8 samples, 0.18%)</title><rect x="47.4" y="995.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.4" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (1 samples, 0.02%)</title><rect x="47.4" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.4" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (1 samples, 0.02%)</title><rect x="47.4" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.4" y="974.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (1 samples, 0.02%)</title><rect x="47.4" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.4" y="958.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName (1 samples, 0.02%)</title><rect x="47.4" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.4" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsePosNumber (6 samples, 0.13%)</title><rect x="47.7" y="979.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.7" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._verifyNoLeadingZeroes (1 samples, 0.02%)</title><rect x="47.7" y="963.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.7" y="974.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment (5 samples, 0.11%)</title><rect x="47.9" y="963.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.9" y="974.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.buf (5 samples, 0.11%)</title><rect x="47.9" y="947.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.9" y="958.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer (1 samples, 0.02%)</title><rect x="49.0" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.0" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.charBufferLength (1 samples, 0.02%)</title><rect x="49.0" y="915.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.0" y="926.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS (1 samples, 0.02%)</title><rect x="49.2" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.2" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (24 samples, 0.53%)</title><rect x="49.5" y="995.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.5" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (24 samples, 0.53%)</title><rect x="49.5" y="979.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.5" y="990.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (24 samples, 0.53%)</title><rect x="49.5" y="963.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.5" y="974.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (10 samples, 0.22%)</title><rect x="50.5" y="947.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.5" y="958.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (1 samples, 0.02%)</title><rect x="50.5" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.5" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (6 samples, 0.13%)</title><rect x="50.8" y="931.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.8" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (6 samples, 0.13%)</title><rect x="50.8" y="915.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.8" y="926.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (6 samples, 0.13%)</title><rect x="50.8" y="899.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.8" y="910.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (5 samples, 0.11%)</title><rect x="51.1" y="883.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.1" y="894.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName (5 samples, 0.11%)</title><rect x="51.1" y="867.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.1" y="878.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName (3 samples, 0.07%)</title><rect x="51.6" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.6" y="862.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName (2 samples, 0.04%)</title><rect x="51.8" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.8" y="846.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsePosNumber (1 samples, 0.02%)</title><rect x="52.4" y="931.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.4" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment (1 samples, 0.02%)</title><rect x="52.4" y="915.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.4" y="926.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.buf (1 samples, 0.02%)</title><rect x="52.4" y="899.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.4" y="910.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS (2 samples, 0.04%)</title><rect x="52.6" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.6" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (2 samples, 0.04%)</title><rect x="53.1" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.1" y="958.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (2 samples, 0.04%)</title><rect x="53.1" y="931.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.1" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (2 samples, 0.04%)</title><rect x="53.1" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.1" y="926.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (2 samples, 0.04%)</title><rect x="53.1" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.04%)</title><rect x="53.1" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.1" y="894.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (4 samples, 0.09%)</title><rect x="53.7" y="947.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.7" y="958.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (4 samples, 0.09%)</title><rect x="53.7" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.7" y="942.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (4 samples, 0.09%)</title><rect x="53.7" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.7" y="926.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (4 samples, 0.09%)</title><rect x="53.7" y="899.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.7" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.09%)</title><rect x="53.7" y="883.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.7" y="894.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 0.09%)</title><rect x="53.7" y="867.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.7" y="878.0"></text>
</g>
<g>
<title>sun/reflect/NativeConstructorAccessorImpl.newInstance (4 samples, 0.09%)</title><rect x="53.7" y="851.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.7" y="862.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="54.4" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="57.4" y="846.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="54.4" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.4" y="830.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="54.4" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.4" y="814.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="54.4" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.4" y="798.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="54.4" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="57.4" y="782.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="54.4" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.4" y="766.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="54.4" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="57.4" y="750.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="54.4" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.4" y="734.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.findCreatorProperty (4 samples, 0.09%)</title><rect x="54.7" y="947.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="54.7" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="54.7" y="915.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.7" y="926.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 0.02%)</title><rect x="55.5" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.5" y="910.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (8 samples, 0.18%)</title><rect x="55.8" y="1027.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.8" y="1038.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (8 samples, 0.18%)</title><rect x="55.8" y="1011.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.8" y="1022.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (8 samples, 0.18%)</title><rect x="55.8" y="995.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.8" y="1006.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (8 samples, 0.18%)</title><rect x="55.8" y="979.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 0.18%)</title><rect x="55.8" y="963.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.8" y="974.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.11%)</title><rect x="56.5" y="947.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="59.5" y="958.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.11%)</title><rect x="56.5" y="931.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="59.5" y="942.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.11%)</title><rect x="56.5" y="915.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="59.5" y="926.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="57.3" y="899.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.3" y="910.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="57.3" y="883.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.3" y="894.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="57.3" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.3" y="878.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="57.3" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.3" y="862.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="57.3" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="60.3" y="846.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="57.6" y="867.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="60.6" y="878.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="57.6" y="851.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="60.6" y="862.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="57.8" y="1027.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.8" y="1038.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="57.8" y="1011.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.8" y="1022.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="57.8" y="995.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.8" y="1006.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="57.8" y="979.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.8" y="990.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="57.8" y="963.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="60.8" y="974.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="57.8" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.8" y="958.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="57.8" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.8" y="942.0"></text>
</g>
<g>
<title>clear_page_c_e (1 samples, 0.02%)</title><rect x="57.8" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.8" y="926.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="58.1" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.1" y="958.0"></text>
</g>
<g>
<title>numa_migrate_prep (1 samples, 0.02%)</title><rect x="58.1" y="931.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.1" y="942.0"></text>
</g>
<g>
<title>mpol_misplaced (1 samples, 0.02%)</title><rect x="58.1" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.1" y="926.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.access$1900 (1 samples, 0.02%)</title><rect x="58.4" y="1155.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.4" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$FetchManagerMetrics.recordPartitionLag (1 samples, 0.02%)</title><rect x="58.4" y="1139.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.4" y="1150.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Metrics.getSensor (1 samples, 0.02%)</title><rect x="58.4" y="1123.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="58.4" y="1107.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.spread (1 samples, 0.02%)</title><rect x="58.4" y="1091.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.4" y="1102.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.initializeCompletedFetch (1 samples, 0.02%)</title><rect x="58.6" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.6" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/MemoryRecords.batches (1 samples, 0.02%)</title><rect x="58.6" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.6" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="58.6" y="1139.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="61.6" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.02%)</title><rect x="58.6" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="61.6" y="1134.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="58.6" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="61.6" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::compilation_is_in_queue(methodHandle) (1 samples, 0.02%)</title><rect x="58.6" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="61.6" y="1102.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateAssignmentMetadataIfNeeded (2 samples, 0.04%)</title><rect x="58.9" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.9" y="1214.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateFetchPositions (1 samples, 0.02%)</title><rect x="58.9" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.9" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.hasAllFetchPositions (1 samples, 0.02%)</title><rect x="58.9" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.9" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/common/internals/PartitionStates.stream (1 samples, 0.02%)</title><rect x="58.9" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.9" y="1166.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="58.9" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.9" y="1150.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.spliterator (1 samples, 0.02%)</title><rect x="58.9" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.9" y="1134.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1 samples, 0.02%)</title><rect x="58.9" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.9" y="1118.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="58.9" y="1091.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.9" y="1102.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="58.9" y="1075.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.9" y="1086.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="58.9" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="1070.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="58.9" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.9" y="1054.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="58.9" y="1027.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.9" y="1038.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="58.9" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.9" y="1022.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="58.9" y="995.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.9" y="1006.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.poll (1 samples, 0.02%)</title><rect x="59.2" y="1187.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.2" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.invokeCompletedOffsetCommitCallbacks (1 samples, 0.02%)</title><rect x="59.2" y="1171.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="1182.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.02%)</title><rect x="59.2" y="1155.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="62.2" y="1166.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="59.2" y="1139.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.2" y="1150.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.02%)</title><rect x="59.2" y="1123.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="62.2" y="1134.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.02%)</title><rect x="59.2" y="1107.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="62.2" y="1118.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.02%)</title><rect x="59.2" y="1091.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="62.2" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.02%)</title><rect x="59.2" y="1075.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="62.2" y="1086.0"></text>
</g>
<g>
<title>ConstantPool::resolve_string_constants_impl(constantPoolHandle, Thread*) (1 samples, 0.02%)</title><rect x="59.2" y="1059.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="62.2" y="1070.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.02%)</title><rect x="59.2" y="1043.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.2" y="1054.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.02%)</title><rect x="59.2" y="1027.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.2" y="1038.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.02%)</title><rect x="59.2" y="1011.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="62.2" y="1022.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.transmitSends (9 samples, 0.20%)</title><rect x="59.4" y="1203.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.4" y="1214.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (9 samples, 0.20%)</title><rect x="59.4" y="1187.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.4" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (9 samples, 0.20%)</title><rect x="59.4" y="1171.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.4" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (8 samples, 0.18%)</title><rect x="59.4" y="1155.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.4" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector$SelectorMetrics.maybeRegisterConnectionMetrics (1 samples, 0.02%)</title><rect x="59.4" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="1150.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Metrics.getSensor (1 samples, 0.02%)</title><rect x="59.4" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="59.4" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="59.4" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="1102.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.attemptRead (7 samples, 0.16%)</title><rect x="59.7" y="1139.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.7" y="1150.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.read (7 samples, 0.16%)</title><rect x="59.7" y="1123.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.7" y="1134.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.receive (7 samples, 0.16%)</title><rect x="59.7" y="1107.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.7" y="1118.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/NetworkReceive.readFrom (7 samples, 0.16%)</title><rect x="59.7" y="1091.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.7" y="1102.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.02%)</title><rect x="59.7" y="1075.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="62.7" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="59.7" y="1059.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="62.7" y="1070.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="59.7" y="1043.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="62.7" y="1054.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="59.7" y="1027.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="62.7" y="1038.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="59.7" y="1011.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.7" y="1022.0"></text>
</g>
<g>
<title>is_vma_temporary_stack (1 samples, 0.02%)</title><rect x="59.7" y="995.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="62.7" y="1006.0"></text>
</g>
<g>
<title>org/apache/kafka/common/memory/MemoryPool$1.tryAllocate (3 samples, 0.07%)</title><rect x="59.9" y="1075.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.07%)</title><rect x="59.9" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="59.9" y="1043.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.9" y="1054.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="59.9" y="1027.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.9" y="1038.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="59.9" y="1011.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.9" y="1022.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="59.9" y="995.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="62.9" y="1006.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="59.9" y="979.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.9" y="990.0"></text>
</g>
<g>
<title>handle_pte_fault (3 samples, 0.07%)</title><rect x="59.9" y="963.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.9" y="974.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (3 samples, 0.07%)</title><rect x="59.9" y="947.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.9" y="958.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (3 samples, 0.07%)</title><rect x="59.9" y="931.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="62.9" y="942.0"></text>
</g>
<g>
<title>__mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="60.2" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.2" y="926.0"></text>
</g>
<g>
<title>lookup_page_cgroup (1 samples, 0.02%)</title><rect x="60.5" y="915.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="63.5" y="926.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.read (3 samples, 0.07%)</title><rect x="60.7" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (3 samples, 0.07%)</title><rect x="60.7" y="1059.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.07%)</title><rect x="60.7" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="60.7" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="60.7" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/Bits.copyToArray (1 samples, 0.02%)</title><rect x="60.7" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.7" y="1006.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="60.7" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.7" y="990.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 0.02%)</title><rect x="60.7" y="963.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="63.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.02%)</title><rect x="61.0" y="1027.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.02%)</title><rect x="61.0" y="1011.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.02%)</title><rect x="61.0" y="995.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.0" y="1006.0"></text>
</g>
<g>
<title>__read (1 samples, 0.02%)</title><rect x="61.0" y="979.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="64.0" y="990.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="61.0" y="963.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.0" y="974.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.02%)</title><rect x="61.0" y="947.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.0" y="958.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="61.0" y="931.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="64.0" y="942.0"></text>
</g>
<g>
<title>do_sync_read (1 samples, 0.02%)</title><rect x="61.0" y="915.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="64.0" y="926.0"></text>
</g>
<g>
<title>sock_aio_read (1 samples, 0.02%)</title><rect x="61.0" y="899.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.0" y="910.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (1 samples, 0.02%)</title><rect x="61.0" y="883.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="64.0" y="894.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="61.0" y="867.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="64.0" y="878.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="61.0" y="851.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.0" y="862.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (1 samples, 0.02%)</title><rect x="61.0" y="835.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="64.0" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="61.0" y="819.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="61.2" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.2" y="1038.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (1 samples, 0.02%)</title><rect x="61.5" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.5" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.02%)</title><rect x="61.5" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.5" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.02%)</title><rect x="61.5" y="1123.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.02%)</title><rect x="61.5" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (1 samples, 0.02%)</title><rect x="61.5" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.updateRegistrations (1 samples, 0.02%)</title><rect x="61.5" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.getUpdateEvents (1 samples, 0.02%)</title><rect x="61.5" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.5" y="1070.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.02%)</title><rect x="61.8" y="1203.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.8" y="1214.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (1 samples, 0.02%)</title><rect x="61.8" y="1187.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.8" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor$$Lambda$233/905260112.call (239 samples, 5.30%)</title><rect x="62.0" y="1299.0" width="62.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.0" y="1310.0">io/con..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.lambda$submitWorkToPool$13 (239 samples, 5.30%)</title><rect x="62.0" y="1283.0" width="62.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.0" y="1294.0">io/con..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.userFunctionRunner (239 samples, 5.30%)</title><rect x="62.0" y="1267.0" width="62.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.0" y="1278.0">io/con..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor$$Lambda$44/978508707.apply (12 samples, 0.27%)</title><rect x="62.0" y="1251.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.0" y="1262.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.lambda$poll$3 (12 samples, 0.27%)</title><rect x="62.0" y="1235.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.0" y="1246.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/UserFunctions.carefullyRun (10 samples, 0.22%)</title><rect x="62.0" y="1219.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.0" y="1230.0"></text>
</g>
<g>
<title>com/mayreh/ParallelConsumerRunner$$Lambda$43/718187988.accept (9 samples, 0.20%)</title><rect x="62.3" y="1203.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.3" y="1214.0"></text>
</g>
<g>
<title>com/mayreh/ParallelConsumerRunner.lambda$init$3 (9 samples, 0.20%)</title><rect x="62.3" y="1187.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.3" y="1198.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (6 samples, 0.13%)</title><rect x="63.1" y="1171.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.1" y="1182.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (3 samples, 0.07%)</title><rect x="63.1" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.1" y="1166.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="63.3" y="1139.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="66.3" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="63.6" y="1139.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="66.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="63.9" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="64.4" y="1139.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="64.6" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.6" y="1230.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="64.6" y="1203.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="67.6" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="64.6" y="1187.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="67.6" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="64.6" y="1171.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.6" y="1182.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="64.6" y="1155.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="67.6" y="1166.0"></text>
</g>
<g>
<title>pl/tlinkowski/unij/api/UniLists.of (1 samples, 0.02%)</title><rect x="64.9" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.9" y="1230.0"></text>
</g>
<g>
<title>pl/tlinkowski/unij/api/UniJ.listFactory (1 samples, 0.02%)</title><rect x="64.9" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.9" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.addToMailBoxOnUserFunctionSuccess (100 samples, 2.22%)</title><rect x="65.2" y="1251.0" width="26.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="1262.0">i..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.addToMailbox (100 samples, 2.22%)</title><rect x="65.2" y="1235.0" width="26.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="1246.0">i..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (92 samples, 2.04%)</title><rect x="67.3" y="1219.0" width="24.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.3" y="1230.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (92 samples, 2.04%)</title><rect x="67.3" y="1203.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.3" y="1214.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (47 samples, 1.04%)</title><rect x="67.3" y="1187.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (38 samples, 0.84%)</title><rect x="69.4" y="1171.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (38 samples, 0.84%)</title><rect x="69.4" y="1155.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (33 samples, 0.73%)</title><rect x="69.4" y="1139.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.71%)</title><rect x="69.6" y="1123.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.71%)</title><rect x="69.6" y="1107.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.6" y="1118.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (17 samples, 0.38%)</title><rect x="73.5" y="1091.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.5" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.35%)</title><rect x="73.5" y="1075.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="76.5" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.16%)</title><rect x="73.5" y="1059.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="76.5" y="1070.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.07%)</title><rect x="74.6" y="1043.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="77.6" y="1054.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.07%)</title><rect x="74.6" y="1027.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="74.6" y="1011.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.6" y="1022.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="74.8" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.8" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="74.8" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.8" y="990.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (1 samples, 0.02%)</title><rect x="74.8" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.8" y="974.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="75.1" y="995.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="78.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.16%)</title><rect x="75.4" y="1059.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="78.4" y="1070.0"></text>
</g>
<g>
<title>system_call_fastpath (6 samples, 0.13%)</title><rect x="75.6" y="1043.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.6" y="1054.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.13%)</title><rect x="75.6" y="1027.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.11%)</title><rect x="75.9" y="1011.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="78.9" y="1022.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.09%)</title><rect x="76.2" y="995.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.2" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.09%)</title><rect x="76.2" y="979.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="79.2" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="77.2" y="1059.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="80.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="77.5" y="1059.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="80.5" y="1070.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="77.7" y="1075.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="80.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.11%)</title><rect x="78.0" y="1139.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.0" y="1150.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="79.3" y="1171.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.3" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="79.3" y="1155.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.3" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="79.3" y="1139.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="82.3" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="79.3" y="1123.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="82.3" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="79.3" y="1107.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.3" y="1118.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="79.3" y="1091.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.3" y="1102.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="79.3" y="1075.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.3" y="1086.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="79.3" y="1059.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.3" y="1070.0"></text>
</g>
<g>
<title>putback_lru_page (1 samples, 0.02%)</title><rect x="79.3" y="1043.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.3" y="1054.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="79.3" y="1027.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.3" y="1038.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="79.3" y="1011.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.3" y="1022.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="79.3" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="82.3" y="1006.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.02%)</title><rect x="79.3" y="979.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.3" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="79.3" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="82.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (45 samples, 1.00%)</title><rect x="79.6" y="1187.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (45 samples, 1.00%)</title><rect x="79.6" y="1171.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (45 samples, 1.00%)</title><rect x="79.6" y="1155.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 1.00%)</title><rect x="79.6" y="1139.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.6" y="1150.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (21 samples, 0.47%)</title><rect x="85.8" y="1123.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.47%)</title><rect x="85.8" y="1107.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="88.8" y="1118.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="85.8" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="88.8" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.42%)</title><rect x="86.1" y="1091.0" width="5.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="89.1" y="1102.0"></text>
</g>
<g>
<title>int_signal (1 samples, 0.02%)</title><rect x="86.9" y="1075.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.9" y="1086.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.02%)</title><rect x="86.9" y="1059.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.9" y="1070.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="86.9" y="1043.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.9" y="1054.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.02%)</title><rect x="86.9" y="1027.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="89.9" y="1038.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="86.9" y="1011.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="89.9" y="1022.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.02%)</title><rect x="86.9" y="995.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="89.9" y="1006.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.02%)</title><rect x="86.9" y="979.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.9" y="990.0"></text>
</g>
<g>
<title>system_call_fastpath (15 samples, 0.33%)</title><rect x="87.1" y="1075.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.1" y="1086.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.33%)</title><rect x="87.1" y="1059.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.1" y="1070.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.33%)</title><rect x="87.1" y="1043.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="90.1" y="1054.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="87.1" y="1027.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.1" y="1038.0"></text>
</g>
<g>
<title>futex_wake_op (14 samples, 0.31%)</title><rect x="87.4" y="1027.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.4" y="1038.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.11%)</title><rect x="87.7" y="1011.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.7" y="1022.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="88.7" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.7" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.18%)</title><rect x="89.0" y="1011.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="92.0" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.18%)</title><rect x="89.0" y="995.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.0" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.18%)</title><rect x="89.0" y="979.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.0" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="91.1" y="1091.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.1" y="1102.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkContainer.toString (107 samples, 2.37%)</title><rect x="91.3" y="1251.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.3" y="1262.0">i..</text>
</g>
<g>
<title>error_exit (1 samples, 0.02%)</title><rect x="95.2" y="1235.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (56 samples, 1.24%)</title><rect x="95.5" y="1235.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.09%)</title><rect x="104.7" y="1219.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="104.7" y="1203.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.expandCapacity (1 samples, 0.02%)</title><rect x="104.7" y="1187.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.7" y="1198.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="104.7" y="1171.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.7" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="104.7" y="1155.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.7" y="1166.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="104.7" y="1139.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.7" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="104.7" y="1123.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="107.7" y="1134.0"></text>
</g>
<g>
<title>G1SATBCardTableModRefBS::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="104.7" y="1107.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="107.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (3 samples, 0.07%)</title><rect x="104.9" y="1203.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="105.7" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.7" y="1230.0"></text>
</g>
<g>
<title>jshort_arraycopy (2 samples, 0.04%)</title><rect x="106.0" y="1219.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="109.0" y="1230.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (11 samples, 0.24%)</title><rect x="106.5" y="1219.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="109.5" y="1230.0"></text>
</g>
<g>
<title>page_fault (8 samples, 0.18%)</title><rect x="107.3" y="1203.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="110.3" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (8 samples, 0.18%)</title><rect x="107.3" y="1187.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="110.3" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (8 samples, 0.18%)</title><rect x="107.3" y="1171.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.3" y="1182.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="107.5" y="1155.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="110.5" y="1166.0"></text>
</g>
<g>
<title>handle_mm_fault (6 samples, 0.13%)</title><rect x="107.8" y="1155.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.8" y="1166.0"></text>
</g>
<g>
<title>handle_pte_fault (6 samples, 0.13%)</title><rect x="107.8" y="1139.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.8" y="1150.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.04%)</title><rect x="107.8" y="1123.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="110.8" y="1134.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.04%)</title><rect x="107.8" y="1107.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="110.8" y="1118.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="108.1" y="1091.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.1" y="1102.0"></text>
</g>
<g>
<title>do_numa_page (3 samples, 0.07%)</title><rect x="108.3" y="1123.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.3" y="1134.0"></text>
</g>
<g>
<title>migrate_misplaced_page (3 samples, 0.07%)</title><rect x="108.3" y="1107.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="111.3" y="1118.0"></text>
</g>
<g>
<title>migrate_pages (3 samples, 0.07%)</title><rect x="108.3" y="1091.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.3" y="1102.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="108.3" y="1075.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="111.3" y="1086.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="108.3" y="1059.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="111.3" y="1070.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="108.3" y="1043.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.3" y="1054.0"></text>
</g>
<g>
<title>try_to_unmap (2 samples, 0.04%)</title><rect x="108.6" y="1075.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.6" y="1086.0"></text>
</g>
<g>
<title>rmap_walk (2 samples, 0.04%)</title><rect x="108.6" y="1059.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="111.6" y="1070.0"></text>
</g>
<g>
<title>try_to_unmap_one (2 samples, 0.04%)</title><rect x="108.6" y="1043.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="111.6" y="1054.0"></text>
</g>
<g>
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="108.6" y="1027.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.6" y="1038.0"></text>
</g>
<g>
<title>mem_cgroup_uncharge_page (1 samples, 0.02%)</title><rect x="108.6" y="1011.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="111.6" y="1022.0"></text>
</g>
<g>
<title>__mem_cgroup_uncharge_common (1 samples, 0.02%)</title><rect x="108.6" y="995.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.6" y="1006.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="108.8" y="1027.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.8" y="1038.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="108.8" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="111.8" y="1022.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="108.8" y="995.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.8" y="1006.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="108.8" y="979.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.8" y="990.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="109.1" y="1123.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.1" y="1134.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="109.1" y="1107.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.1" y="1118.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="109.4" y="1219.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="112.4" y="1230.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="109.4" y="1203.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.4" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="109.4" y="1187.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.4" y="1198.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="109.4" y="1171.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.4" y="1182.0"></text>
</g>
<g>
<title>handle_pte_fault (3 samples, 0.07%)</title><rect x="109.4" y="1155.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.4" y="1166.0"></text>
</g>
<g>
<title>do_numa_page (3 samples, 0.07%)</title><rect x="109.4" y="1139.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.4" y="1150.0"></text>
</g>
<g>
<title>migrate_misplaced_page (3 samples, 0.07%)</title><rect x="109.4" y="1123.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="112.4" y="1134.0"></text>
</g>
<g>
<title>migrate_pages (3 samples, 0.07%)</title><rect x="109.4" y="1107.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.4" y="1118.0"></text>
</g>
<g>
<title>try_to_unmap (3 samples, 0.07%)</title><rect x="109.4" y="1091.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.4" y="1102.0"></text>
</g>
<g>
<title>rmap_walk (3 samples, 0.07%)</title><rect x="109.4" y="1075.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.4" y="1086.0"></text>
</g>
<g>
<title>try_to_unmap_one (3 samples, 0.07%)</title><rect x="109.4" y="1059.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.4" y="1070.0"></text>
</g>
<g>
<title>ptep_clear_flush (3 samples, 0.07%)</title><rect x="109.4" y="1043.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.4" y="1054.0"></text>
</g>
<g>
<title>flush_tlb_page (3 samples, 0.07%)</title><rect x="109.4" y="1027.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.4" y="1038.0"></text>
</g>
<g>
<title>native_flush_tlb_others (3 samples, 0.07%)</title><rect x="109.4" y="1011.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.4" y="1022.0"></text>
</g>
<g>
<title>smp_call_function_many (3 samples, 0.07%)</title><rect x="109.4" y="995.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.4" y="1006.0"></text>
</g>
<g>
<title>native_send_call_func_ipi (1 samples, 0.02%)</title><rect x="109.9" y="979.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.9" y="990.0"></text>
</g>
<g>
<title>free_cpumask_var (1 samples, 0.02%)</title><rect x="109.9" y="963.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.9" y="974.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="109.9" y="947.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="110.1" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.1" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="110.1" y="1219.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="113.1" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::new_store_pre_barrier(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="110.1" y="1203.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="113.1" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::can_elide_initializing_store_barrier(oopDesc*) (1 samples, 0.02%)</title><rect x="110.1" y="1187.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.1" y="1198.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="110.4" y="1235.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="113.4" y="1246.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="110.9" y="1219.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.9" y="1230.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="110.9" y="1203.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.9" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="110.9" y="1187.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.9" y="1198.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="111.2" y="1171.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.2" y="1182.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="111.2" y="1155.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="114.2" y="1166.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="111.2" y="1139.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.2" y="1150.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.02%)</title><rect x="111.4" y="1235.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="114.4" y="1246.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="111.7" y="1235.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="114.7" y="1246.0"></text>
</g>
<g>
<title>page_fault (27 samples, 0.60%)</title><rect x="112.2" y="1235.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.2" y="1246.0"></text>
</g>
<g>
<title>do_page_fault (27 samples, 0.60%)</title><rect x="112.2" y="1219.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.2" y="1230.0"></text>
</g>
<g>
<title>__do_page_fault (26 samples, 0.58%)</title><rect x="112.2" y="1203.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.2" y="1214.0"></text>
</g>
<g>
<title>handle_mm_fault (22 samples, 0.49%)</title><rect x="113.3" y="1187.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.3" y="1198.0"></text>
</g>
<g>
<title>handle_pte_fault (22 samples, 0.49%)</title><rect x="113.3" y="1171.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.3" y="1182.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.04%)</title><rect x="113.3" y="1155.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.3" y="1166.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.04%)</title><rect x="113.3" y="1139.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.3" y="1150.0"></text>
</g>
<g>
<title>clear_page_c_e (2 samples, 0.04%)</title><rect x="113.3" y="1123.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.3" y="1134.0"></text>
</g>
<g>
<title>do_numa_page (14 samples, 0.31%)</title><rect x="113.8" y="1155.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.8" y="1166.0"></text>
</g>
<g>
<title>migrate_misplaced_page (12 samples, 0.27%)</title><rect x="113.8" y="1139.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="116.8" y="1150.0"></text>
</g>
<g>
<title>migrate_pages (9 samples, 0.20%)</title><rect x="113.8" y="1123.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.8" y="1134.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="113.8" y="1107.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.8" y="1118.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="113.8" y="1091.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.8" y="1102.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="113.8" y="1075.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="116.8" y="1086.0"></text>
</g>
<g>
<title>putback_lru_page (3 samples, 0.07%)</title><rect x="114.1" y="1107.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.1" y="1118.0"></text>
</g>
<g>
<title>lru_cache_add (3 samples, 0.07%)</title><rect x="114.1" y="1091.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="117.1" y="1102.0"></text>
</g>
<g>
<title>__lru_cache_add (3 samples, 0.07%)</title><rect x="114.1" y="1075.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.1" y="1086.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (3 samples, 0.07%)</title><rect x="114.1" y="1059.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="117.1" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="114.1" y="1043.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="117.1" y="1054.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.02%)</title><rect x="114.6" y="1043.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="117.6" y="1054.0"></text>
</g>
<g>
<title>free_hot_cold_page_list (1 samples, 0.02%)</title><rect x="114.6" y="1027.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="117.6" y="1038.0"></text>
</g>
<g>
<title>free_hot_cold_page (1 samples, 0.02%)</title><rect x="114.6" y="1011.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.6" y="1022.0"></text>
</g>
<g>
<title>try_to_unmap (5 samples, 0.11%)</title><rect x="114.8" y="1107.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="117.8" y="1118.0"></text>
</g>
<g>
<title>rmap_walk (5 samples, 0.11%)</title><rect x="114.8" y="1091.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.8" y="1102.0"></text>
</g>
<g>
<title>try_to_unmap_one (5 samples, 0.11%)</title><rect x="114.8" y="1075.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="117.8" y="1086.0"></text>
</g>
<g>
<title>mm_find_pmd (1 samples, 0.02%)</title><rect x="114.8" y="1059.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.8" y="1070.0"></text>
</g>
<g>
<title>ptep_clear_flush (4 samples, 0.09%)</title><rect x="115.1" y="1059.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.1" y="1070.0"></text>
</g>
<g>
<title>flush_tlb_page (4 samples, 0.09%)</title><rect x="115.1" y="1043.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.1" y="1054.0"></text>
</g>
<g>
<title>native_flush_tlb_others (4 samples, 0.09%)</title><rect x="115.1" y="1027.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.1" y="1038.0"></text>
</g>
<g>
<title>smp_call_function_many (4 samples, 0.09%)</title><rect x="115.1" y="1011.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="118.1" y="1022.0"></text>
</g>
<g>
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="115.1" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="118.1" y="1006.0"></text>
</g>
<g>
<title>native_send_call_func_ipi (3 samples, 0.07%)</title><rect x="115.4" y="995.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="118.4" y="1006.0"></text>
</g>
<g>
<title>physflat_send_IPI_mask (3 samples, 0.07%)</title><rect x="115.4" y="979.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.4" y="990.0"></text>
</g>
<g>
<title>default_send_IPI_mask_sequence_phys (3 samples, 0.07%)</title><rect x="115.4" y="963.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.4" y="974.0"></text>
</g>
<g>
<title>numamigrate_isolate_page (2 samples, 0.04%)</title><rect x="116.2" y="1123.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.2" y="1134.0"></text>
</g>
<g>
<title>isolate_lru_page (2 samples, 0.04%)</title><rect x="116.2" y="1107.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="119.2" y="1118.0"></text>
</g>
<g>
<title>page_get_anon_vma (1 samples, 0.02%)</title><rect x="116.7" y="1123.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.7" y="1134.0"></text>
</g>
<g>
<title>numa_migrate_prep (2 samples, 0.04%)</title><rect x="116.9" y="1139.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.9" y="1150.0"></text>
</g>
<g>
<title>mpol_misplaced (1 samples, 0.02%)</title><rect x="117.2" y="1123.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.2" y="1134.0"></text>
</g>
<g>
<title>__get_vma_policy (1 samples, 0.02%)</title><rect x="117.2" y="1107.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.2" y="1118.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (5 samples, 0.11%)</title><rect x="117.5" y="1155.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="120.5" y="1166.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (5 samples, 0.11%)</title><rect x="117.5" y="1139.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="120.5" y="1150.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="118.8" y="1155.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.8" y="1166.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="118.8" y="1139.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="121.8" y="1150.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="118.8" y="1123.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.8" y="1134.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="118.8" y="1107.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.8" y="1118.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.02%)</title><rect x="118.8" y="1091.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.8" y="1102.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.02%)</title><rect x="119.0" y="1203.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.0" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.checkEpochIsStale (5 samples, 0.11%)</title><rect x="119.3" y="1251.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.3" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.11%)</title><rect x="119.3" y="1235.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.3" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.11%)</title><rect x="119.3" y="1219.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.3" y="1230.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.04%)</title><rect x="120.6" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.6" y="1262.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="120.6" y="1235.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.6" y="1246.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.02%)</title><rect x="120.9" y="1219.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.9" y="1230.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="120.9" y="1203.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="123.9" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="120.9" y="1187.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.9" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="120.9" y="1171.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="123.9" y="1182.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="120.9" y="1155.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="123.9" y="1166.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="120.9" y="1139.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="123.9" y="1150.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="120.9" y="1123.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.9" y="1134.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="120.9" y="1107.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.9" y="1118.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="120.9" y="1091.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.9" y="1102.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="120.9" y="1075.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="123.9" y="1086.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="120.9" y="1059.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.9" y="1070.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="120.9" y="1043.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="123.9" y="1054.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="120.9" y="1027.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.9" y="1038.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="120.9" y="1011.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.9" y="1022.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="120.9" y="995.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="123.9" y="1006.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="120.9" y="979.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="123.9" y="990.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (11 samples, 0.24%)</title><rect x="121.1" y="1251.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (10 samples, 0.22%)</title><rect x="121.1" y="1235.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.1" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.duplicateAndInsertNewMap (1 samples, 0.02%)</title><rect x="121.4" y="1219.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="121.4" y="1203.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.02%)</title><rect x="121.4" y="1187.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.4" y="1198.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (2 samples, 0.04%)</title><rect x="121.6" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="121.9" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.02%)</title><rect x="121.9" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="121.9" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="122.2" y="1219.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.02%)</title><rect x="122.2" y="1203.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="122.2" y="1187.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.2" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (5 samples, 0.11%)</title><rect x="122.4" y="1219.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.4" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.07%)</title><rect x="123.0" y="1203.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.0" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="123.2" y="1187.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.2" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeAccess (1 samples, 0.02%)</title><rect x="123.5" y="1171.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="123.7" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.7" y="1246.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="124.0" y="1251.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="127.0" y="1262.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="124.0" y="1235.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="127.0" y="1246.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="124.0" y="1219.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="127.0" y="1230.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="124.0" y="1203.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.0" y="1214.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="124.0" y="1187.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="127.0" y="1198.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="124.0" y="1171.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.0" y="1182.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.04%)</title><rect x="124.0" y="1155.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="127.0" y="1166.0"></text>
</g>
<g>
<title>numamigrate_isolate_page (2 samples, 0.04%)</title><rect x="124.0" y="1139.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.0" y="1150.0"></text>
</g>
<g>
<title>isolate_lru_page (2 samples, 0.04%)</title><rect x="124.0" y="1123.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.0" y="1134.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor$$Lambda$46/664792509.call (2,311 samples, 51.21%)</title><rect x="124.5" y="1299.0" width="604.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.5" y="1310.0">io/confluent/parallelconsumer/ParallelEoSStreamProcessor$$Lambda$46/664792509.call</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.lambda$supervisorLoop$10 (2,311 samples, 51.21%)</title><rect x="124.5" y="1283.0" width="604.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.5" y="1294.0">io/confluent/parallelconsumer/ParallelEoSStreamProcessor.lambda$supervisorLoop$10</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.controlLoop (2,311 samples, 51.21%)</title><rect x="124.5" y="1267.0" width="604.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.5" y="1278.0">io/confluent/parallelconsumer/ParallelEoSStreamProcessor.controlLoop</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="124.5" y="1251.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="127.5" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="124.5" y="1235.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="127.5" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="124.5" y="1219.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="127.5" y="1230.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.02%)</title><rect x="124.5" y="1203.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="127.5" y="1214.0"></text>
</g>
<g>
<title>CompiledIC::internal_set_ic_destination(unsigned char*, bool, void*, bool) (1 samples, 0.02%)</title><rect x="124.5" y="1187.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="127.5" y="1198.0"></text>
</g>
<g>
<title>NativeCall::set_destination_mt_safe(unsigned char*) (1 samples, 0.02%)</title><rect x="124.5" y="1171.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="127.5" y="1182.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.commitOffsetsMaybe (2 samples, 0.04%)</title><rect x="124.8" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.8" y="1262.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.lingeringOnCommitWouldBeBeneficial (2 samples, 0.04%)</title><rect x="124.8" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.8" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.02%)</title><rect x="124.8" y="1219.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.8" y="1230.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.hasWorkInCommitQueues (1 samples, 0.02%)</title><rect x="125.0" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.isEmpty (1 samples, 0.02%)</title><rect x="125.0" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findFirst (1 samples, 0.02%)</title><rect x="125.0" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.0" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.handleWork (1,145 samples, 25.37%)</title><rect x="125.3" y="1251.0" width="299.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.3" y="1262.0">io/confluent/parallelconsumer/ParallelEo..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.submitWorkToPool (28 samples, 0.62%)</title><rect x="125.6" y="1235.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1813328053.linkToTargetMethod (1 samples, 0.02%)</title><rect x="125.6" y="1219.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1538399081.invokeStatic_L4_L (1 samples, 0.02%)</title><rect x="125.6" y="1203.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.6" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor$$Lambda$233/905260112.get$Lambda (1 samples, 0.02%)</title><rect x="125.6" y="1187.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (27 samples, 0.60%)</title><rect x="125.8" y="1219.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.60%)</title><rect x="125.8" y="1203.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.35%)</title><rect x="127.7" y="1187.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.13%)</title><rect x="127.7" y="1171.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.11%)</title><rect x="127.9" y="1155.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.11%)</title><rect x="127.9" y="1139.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.09%)</title><rect x="128.2" y="1123.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="128.2" y="1107.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.2" y="1118.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (4 samples, 0.09%)</title><rect x="128.2" y="1091.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.2" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.09%)</title><rect x="128.2" y="1075.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="131.2" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="128.2" y="1059.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="131.2" y="1070.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.07%)</title><rect x="128.2" y="1043.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="131.2" y="1054.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.07%)</title><rect x="128.2" y="1027.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="131.2" y="1038.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="128.2" y="1011.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.2" y="1022.0"></text>
</g>
<g>
<title>futex_wake_op (3 samples, 0.07%)</title><rect x="128.2" y="995.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="131.2" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="128.4" y="979.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.4" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="128.4" y="963.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="131.4" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="128.4" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="131.4" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="129.0" y="1059.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="132.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="129.2" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="129.2" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="129.2" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="129.2" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="129.2" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.11%)</title><rect x="129.5" y="1171.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (2 samples, 0.04%)</title><rect x="130.0" y="1155.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="130.0" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="130.0" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="130.0" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="130.0" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.0" y="1102.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="130.5" y="1155.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="133.5" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="130.5" y="1139.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.5" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="130.5" y="1123.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="133.5" y="1134.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="130.5" y="1107.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.09%)</title><rect x="130.8" y="1171.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="130.8" y="1155.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.09%)</title><rect x="130.8" y="1139.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="130.8" y="1123.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.8" y="1134.0"></text>
</g>
<g>
<title>page_fault (4 samples, 0.09%)</title><rect x="131.8" y="1187.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.8" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.09%)</title><rect x="131.8" y="1171.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.8" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.09%)</title><rect x="131.8" y="1155.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.8" y="1166.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="131.8" y="1139.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="134.8" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="132.1" y="1139.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="135.1" y="1150.0"></text>
</g>
<g>
<title>handle_pte_fault (3 samples, 0.07%)</title><rect x="132.1" y="1123.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="135.1" y="1134.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="132.1" y="1107.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.1" y="1118.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="132.1" y="1091.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.1" y="1102.0"></text>
</g>
<g>
<title>clear_page_c_e (1 samples, 0.02%)</title><rect x="132.1" y="1075.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="135.1" y="1086.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="132.4" y="1107.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="135.4" y="1118.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.04%)</title><rect x="132.4" y="1091.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.4" y="1102.0"></text>
</g>
<g>
<title>migrate_pages (2 samples, 0.04%)</title><rect x="132.4" y="1075.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="135.4" y="1086.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="132.4" y="1059.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.4" y="1070.0"></text>
</g>
<g>
<title>remove_migration_ptes (1 samples, 0.02%)</title><rect x="132.4" y="1043.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.4" y="1054.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="132.4" y="1027.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.4" y="1038.0"></text>
</g>
<g>
<title>remove_migration_pte (1 samples, 0.02%)</title><rect x="132.4" y="1011.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.4" y="1022.0"></text>
</g>
<g>
<title>mm_find_pmd (1 samples, 0.02%)</title><rect x="132.4" y="995.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.4" y="1006.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="132.6" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.6" y="1070.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="132.6" y="1043.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="135.6" y="1054.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="132.6" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.6" y="1038.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="132.6" y="1011.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="135.6" y="1022.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="132.6" y="995.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.6" y="1006.0"></text>
</g>
<g>
<title>cpumask_any_but (1 samples, 0.02%)</title><rect x="132.6" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="135.6" y="990.0"></text>
</g>
<g>
<title>find_next_bit (1 samples, 0.02%)</title><rect x="132.6" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="135.6" y="974.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.maybeGetWork (1,116 samples, 24.73%)</title><rect x="132.9" y="1235.0" width="291.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.9" y="1246.0">io/confluent/parallelconsumer/WorkManag..</text>
</g>
<g>
<title>io/confluent/csid/utils/BackportUtils.toSeconds (1 samples, 0.02%)</title><rect x="135.5" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.5" y="1230.0"></text>
</g>
<g>
<title>java/time/Duration.toMillis (1 samples, 0.02%)</title><rect x="135.5" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.5" y="1214.0"></text>
</g>
<g>
<title>io/confluent/csid/utils/LoopingResumingIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="135.8" y="1219.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.8" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.entrySet (1 samples, 0.02%)</title><rect x="135.8" y="1203.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.8" y="1214.0"></text>
</g>
<g>
<title>io/confluent/csid/utils/LoopingResumingIterator.next (7 samples, 0.16%)</title><rect x="136.0" y="1219.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.0" y="1230.0"></text>
</g>
<g>
<title>io/confluent/csid/utils/LoopingResumingIterator.next (7 samples, 0.16%)</title><rect x="136.0" y="1203.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.0" y="1214.0"></text>
</g>
<g>
<title>io/confluent/csid/utils/LoopingResumingIterator.getNext (7 samples, 0.16%)</title><rect x="136.0" y="1187.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.0" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap$EntryIterator.next (7 samples, 0.16%)</title><rect x="136.0" y="1171.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.0" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap$EntryIterator.next (7 samples, 0.16%)</title><rect x="136.0" y="1155.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.0" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (7 samples, 0.16%)</title><rect x="136.0" y="1139.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.0" y="1150.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.checkEpochIsStale (1 samples, 0.02%)</title><rect x="136.3" y="1123.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.3" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="136.5" y="1123.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="139.5" y="1134.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="136.8" y="1107.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="139.8" y="1118.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="137.1" y="1123.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="140.1" y="1134.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="137.1" y="1107.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.1" y="1118.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="137.1" y="1091.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.1" y="1102.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="137.1" y="1075.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.1" y="1086.0"></text>
</g>
<g>
<title>handle_pte_fault (3 samples, 0.07%)</title><rect x="137.1" y="1059.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="140.1" y="1070.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="137.1" y="1043.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="140.1" y="1054.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="137.3" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.3" y="1054.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.04%)</title><rect x="137.3" y="1027.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="140.3" y="1038.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="137.3" y="1011.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="140.3" y="1022.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="137.3" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.3" y="1006.0"></text>
</g>
<g>
<title>remove_migration_ptes (1 samples, 0.02%)</title><rect x="137.3" y="979.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="140.3" y="990.0"></text>
</g>
<g>
<title>down_read (1 samples, 0.02%)</title><rect x="137.3" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="140.3" y="974.0"></text>
</g>
<g>
<title>numamigrate_isolate_page (1 samples, 0.02%)</title><rect x="137.6" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.6" y="1022.0"></text>
</g>
<g>
<title>isolate_lru_page (1 samples, 0.02%)</title><rect x="137.6" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="140.6" y="1006.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkContainer.getTimeInFlight (4 samples, 0.09%)</title><rect x="137.9" y="1219.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.9" y="1230.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (4 samples, 0.09%)</title><rect x="137.9" y="1203.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.9" y="1214.0"></text>
</g>
<g>
<title>java/time/Duration.create (4 samples, 0.09%)</title><rect x="137.9" y="1187.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.9" y="1198.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="138.1" y="1171.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.1" y="1182.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="138.1" y="1155.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="141.1" y="1166.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="138.4" y="1171.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.4" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="138.4" y="1155.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.4" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="138.4" y="1139.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.4" y="1150.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="138.4" y="1123.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="141.4" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="138.6" y="1123.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.6" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="138.6" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.6" y="1118.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="138.6" y="1091.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.6" y="1102.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="138.6" y="1075.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.6" y="1086.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="138.6" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.6" y="1070.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.checkEpochIsStale (13 samples, 0.29%)</title><rect x="138.9" y="1219.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.9" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.29%)</title><rect x="138.9" y="1203.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.9" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.29%)</title><rect x="138.9" y="1187.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.9" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.getNumberOfEntriesInPartitionQueues (985 samples, 21.83%)</title><rect x="142.3" y="1219.0" width="257.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1230.0">io/confluent/parallelconsumer/Work..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="142.3" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="142.3" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="1198.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="142.3" y="1171.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.3" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="142.3" y="1155.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.3" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="142.3" y="1139.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.3" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="142.3" y="1123.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.3" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="142.3" y="1107.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.3" y="1118.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="142.3" y="1091.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.3" y="1102.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="142.3" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.size (984 samples, 21.80%)</title><rect x="142.6" y="1203.0" width="257.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.6" y="1214.0">java/util/concurrent/ConcurrentSki..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="232.2" y="1187.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.2" y="1198.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="232.2" y="1171.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.2" y="1182.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="232.2" y="1155.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.2" y="1166.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="232.2" y="1139.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="235.2" y="1150.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="232.2" y="1123.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.2" y="1134.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="232.2" y="1107.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.2" y="1118.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="232.2" y="1091.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.getValidValue (639 samples, 14.16%)</title><rect x="232.5" y="1187.0" width="167.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.5" y="1198.0">java/util/concurrent/..</text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="399.3" y="1171.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.3" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="399.3" y="1155.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.3" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="399.3" y="1139.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.3" y="1150.0"></text>
</g>
<g>
<title>retint_signal (1 samples, 0.02%)</title><rect x="399.6" y="1187.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="402.6" y="1198.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.02%)</title><rect x="399.6" y="1171.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="402.6" y="1182.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="399.6" y="1155.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.6" y="1166.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.02%)</title><rect x="399.6" y="1139.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="402.6" y="1150.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="399.6" y="1123.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.6" y="1134.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.02%)</title><rect x="399.6" y="1107.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="402.6" y="1118.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.02%)</title><rect x="399.6" y="1091.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.6" y="1102.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.processInbox (80 samples, 1.77%)</title><rect x="399.8" y="1219.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.8" y="1230.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkMailBoxManager.internalFlattenedMailQueueIsEmpty (2 samples, 0.04%)</title><rect x="400.9" y="1203.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.9" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkMailBoxManager.internalFlattenedMailQueueSize (1 samples, 0.02%)</title><rect x="401.4" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.4" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkMailBoxManager.processInbox (1 samples, 0.02%)</title><rect x="401.4" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.4" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkMailBoxManager.processInbox (16 samples, 0.35%)</title><rect x="401.7" y="1203.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.7" y="1214.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords.count (3 samples, 0.07%)</title><rect x="402.2" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.2" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueIterator.next (3 samples, 0.07%)</title><rect x="402.2" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.07%)</title><rect x="402.2" y="1155.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.2" y="1166.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="402.5" y="1139.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="405.5" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="402.5" y="1123.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="405.5" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="402.5" y="1107.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.5" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="402.7" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="405.7" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="402.7" y="1075.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="405.7" y="1086.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="402.7" y="1059.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.7" y="1070.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="402.7" y="1043.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.7" y="1054.0"></text>
</g>
<g>
<title>clear_page_c_e (1 samples, 0.02%)</title><rect x="402.7" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.7" y="1038.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.hasNext (11 samples, 0.24%)</title><rect x="403.0" y="1187.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.0" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/AbstractIterator.maybeComputeNext (11 samples, 0.24%)</title><rect x="403.0" y="1171.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.0" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.makeNext (11 samples, 0.24%)</title><rect x="403.0" y="1155.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.0" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.makeNext (11 samples, 0.24%)</title><rect x="403.0" y="1139.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.0" y="1150.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.processInbox (57 samples, 1.26%)</title><rect x="405.9" y="1203.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.9" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.isRecordPreviouslyProcessed (8 samples, 0.18%)</title><rect x="406.4" y="1187.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getOrDefault (6 samples, 0.13%)</title><rect x="406.4" y="1171.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.4" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.13%)</title><rect x="406.4" y="1155.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.4" y="1166.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="407.4" y="1139.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.4" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="407.4" y="1123.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="410.4" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="407.4" y="1107.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.4" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="407.7" y="1091.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="410.7" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="407.7" y="1075.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="410.7" y="1086.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="407.7" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.7" y="1070.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="407.7" y="1043.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="410.7" y="1054.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="407.7" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="410.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.04%)</title><rect x="408.0" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.0" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.04%)</title><rect x="408.0" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="408.0" y="1139.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.0" y="1150.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.raisePartitionHighWaterMark (12 samples, 0.27%)</title><rect x="408.5" y="1187.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.5" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getOrDefault (4 samples, 0.09%)</title><rect x="408.5" y="1171.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="408.5" y="1155.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.5" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.equals (1 samples, 0.02%)</title><rect x="409.3" y="1139.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.18%)</title><rect x="409.5" y="1171.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.18%)</title><rect x="409.5" y="1155.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.5" y="1166.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.equals (4 samples, 0.09%)</title><rect x="410.3" y="1139.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.3" y="1150.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.09%)</title><rect x="410.3" y="1123.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.3" y="1134.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="411.4" y="1139.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="414.4" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="411.6" y="1187.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.6" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="411.6" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.6" y="1182.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.equals (2 samples, 0.04%)</title><rect x="411.6" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.6" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="412.1" y="1155.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.1" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="412.1" y="1139.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.1" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="412.1" y="1123.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="415.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.16%)</title><rect x="412.4" y="1187.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.4" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.09%)</title><rect x="412.4" y="1171.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.4" y="1182.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="413.2" y="1155.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.2" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="413.2" y="1139.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.2" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="413.2" y="1123.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="416.2" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="413.2" y="1107.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.2" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="413.2" y="1091.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="416.2" y="1102.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="413.2" y="1075.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="416.2" y="1086.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="413.2" y="1059.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.07%)</title><rect x="413.4" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.07%)</title><rect x="414.2" y="1187.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.2" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.equals (1 samples, 0.02%)</title><rect x="414.8" y="1171.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (20 samples, 0.44%)</title><rect x="415.0" y="1187.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 0.40%)</title><rect x="415.3" y="1171.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.link (2 samples, 0.04%)</title><rect x="416.6" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.22%)</title><rect x="417.1" y="1155.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.unlink (3 samples, 0.07%)</title><rect x="418.4" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.casRight (2 samples, 0.04%)</title><rect x="418.7" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="419.2" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (1 samples, 0.02%)</title><rect x="419.2" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.2" y="1134.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="419.5" y="1139.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.5" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="419.5" y="1123.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.5" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="419.5" y="1107.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="422.5" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="419.5" y="1091.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.5" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="419.5" y="1075.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.5" y="1086.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="419.5" y="1059.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.5" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="419.5" y="1043.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.5" y="1054.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="419.7" y="1155.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.7" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="419.7" y="1139.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.7" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="419.7" y="1123.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.7" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="419.7" y="1107.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.7" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="419.7" y="1091.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="422.7" y="1102.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="419.7" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="422.7" y="1086.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="419.7" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.7" y="1070.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="419.7" y="1043.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="422.7" y="1054.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="419.7" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="422.7" y="1038.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="419.7" y="1011.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="422.7" y="1022.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="419.7" y="995.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.7" y="1006.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="420.0" y="1171.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.0" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="420.0" y="1155.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.0" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="420.0" y="1139.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="423.0" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="420.0" y="1123.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="423.0" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="420.0" y="1107.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.0" y="1118.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="420.0" y="1091.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.0" y="1102.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="420.0" y="1075.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.0" y="1086.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="420.0" y="1059.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.0" y="1070.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="420.2" y="1187.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.2" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="420.2" y="1171.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="423.2" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="420.2" y="1155.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="423.2" y="1166.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="420.5" y="1139.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.5" y="1150.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="420.5" y="1123.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.5" y="1134.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="420.5" y="1107.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="423.5" y="1118.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="420.5" y="1091.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="423.5" y="1102.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="420.5" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.5" y="1086.0"></text>
</g>
<g>
<title>putback_lru_page (1 samples, 0.02%)</title><rect x="420.5" y="1059.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="423.5" y="1070.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.02%)</title><rect x="420.5" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.5" y="1054.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="420.5" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.5" y="1038.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="420.5" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="423.5" y="1022.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.02%)</title><rect x="420.5" y="995.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="423.5" y="1006.0"></text>
</g>
<g>
<title>free_hot_cold_page_list (1 samples, 0.02%)</title><rect x="420.5" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="423.5" y="990.0"></text>
</g>
<g>
<title>get_pageblock_flags_group (1 samples, 0.02%)</title><rect x="420.5" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.5" y="974.0"></text>
</g>
<g>
<title>java/lang/Boolean.valueOf (1 samples, 0.02%)</title><rect x="420.8" y="1219.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.8" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.13%)</title><rect x="421.0" y="1219.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.0" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="422.3" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.3" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.02%)</title><rect x="422.3" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="422.3" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.3" y="1182.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="422.3" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.3" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="422.3" y="1139.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.3" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="422.3" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.3" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="422.3" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="425.3" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="422.3" y="1091.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="425.3" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="422.3" y="1075.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="425.3" y="1086.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="422.3" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="425.3" y="1070.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="422.3" y="1043.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="425.3" y="1054.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="422.3" y="1027.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getOrDefault (2 samples, 0.04%)</title><rect x="422.6" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.6" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="422.6" y="1203.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.6" y="1214.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.equals (1 samples, 0.02%)</title><rect x="422.9" y="1187.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.9" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.07%)</title><rect x="423.1" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.1" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.07%)</title><rect x="423.1" y="1203.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.1" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.07%)</title><rect x="423.1" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.07%)</title><rect x="423.1" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.1" y="1182.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="423.9" y="1219.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.9" y="1230.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="423.9" y="1203.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="426.9" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="423.9" y="1187.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.9" y="1198.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="423.9" y="1171.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="426.9" y="1182.0"></text>
</g>
<g>
<title>__mem_cgroup_count_vm_event (1 samples, 0.02%)</title><rect x="423.9" y="1155.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.9" y="1166.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="424.2" y="1155.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.2" y="1166.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="424.2" y="1139.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.2" y="1150.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="424.2" y="1123.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.2" y="1134.0"></text>
</g>
<g>
<title>clear_page_c_e (1 samples, 0.02%)</title><rect x="424.2" y="1107.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.2" y="1118.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="424.4" y="1139.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.4" y="1150.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="424.4" y="1123.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.4" y="1134.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="424.4" y="1107.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.4" y="1118.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="424.4" y="1091.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="427.4" y="1102.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="424.4" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.4" y="1086.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="424.4" y="1059.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.4" y="1070.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/ParallelEoSStreamProcessor.processWorkCompleteMailBox (176 samples, 3.90%)</title><rect x="424.7" y="1251.0" width="46.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.7" y="1262.0">io/c..</text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkContainer.toString (57 samples, 1.26%)</title><rect x="424.9" y="1235.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (22 samples, 0.49%)</title><rect x="428.3" y="1219.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.13%)</title><rect x="430.4" y="1203.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="430.4" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.expandCapacity (1 samples, 0.02%)</title><rect x="430.4" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.4" y="1182.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="430.4" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.4" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="430.4" y="1139.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="433.4" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="430.4" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="433.4" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="430.4" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="433.4" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.02%)</title><rect x="430.4" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="433.4" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.02%)</title><rect x="430.4" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="433.4" y="1086.0"></text>
</g>
<g>
<title>G1AllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="430.4" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="433.4" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="430.4" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="433.4" y="1054.0"></text>
</g>
<g>
<title>G1CollectorPolicy::add_region_to_incremental_cset_lhs(HeapRegion*) (1 samples, 0.02%)</title><rect x="430.4" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="433.4" y="1038.0"></text>
</g>
<g>
<title>G1CollectorPolicy::predict_region_elapsed_time_ms(HeapRegion*, bool) (1 samples, 0.02%)</title><rect x="430.4" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="433.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (5 samples, 0.11%)</title><rect x="430.7" y="1187.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.04%)</title><rect x="432.0" y="1203.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.0" y="1214.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="432.3" y="1187.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="435.3" y="1198.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.02%)</title><rect x="432.5" y="1203.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="435.5" y="1214.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="432.8" y="1203.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="435.8" y="1214.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="433.1" y="1187.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.1" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="433.1" y="1171.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.1" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="433.1" y="1155.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.1" y="1166.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="433.3" y="1139.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.3" y="1150.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="433.3" y="1123.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="436.3" y="1134.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="433.3" y="1107.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="436.3" y="1118.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="433.3" y="1091.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.3" y="1102.0"></text>
</g>
<g>
<title>__mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="433.3" y="1075.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.3" y="1086.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="433.6" y="1203.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.6" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="433.6" y="1187.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.6" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="433.6" y="1171.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.6" y="1182.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="433.6" y="1155.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.6" y="1166.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="433.8" y="1155.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.8" y="1166.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="433.8" y="1139.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.8" y="1150.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="433.8" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.8" y="1134.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="433.8" y="1107.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="436.8" y="1118.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="433.8" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.8" y="1102.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="433.8" y="1075.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.8" y="1086.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="433.8" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="436.8" y="1070.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="433.8" y="1043.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="436.8" y="1054.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (7 samples, 0.16%)</title><rect x="434.1" y="1219.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="437.1" y="1230.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.11%)</title><rect x="434.6" y="1203.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.6" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.11%)</title><rect x="434.6" y="1187.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.6" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.11%)</title><rect x="434.6" y="1171.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="437.6" y="1182.0"></text>
</g>
<g>
<title>handle_mm_fault (5 samples, 0.11%)</title><rect x="434.6" y="1155.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="437.6" y="1166.0"></text>
</g>
<g>
<title>handle_pte_fault (5 samples, 0.11%)</title><rect x="434.6" y="1139.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.6" y="1150.0"></text>
</g>
<g>
<title>do_numa_page (3 samples, 0.07%)</title><rect x="434.6" y="1123.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.6" y="1134.0"></text>
</g>
<g>
<title>migrate_misplaced_page (3 samples, 0.07%)</title><rect x="434.6" y="1107.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.6" y="1118.0"></text>
</g>
<g>
<title>migrate_pages (3 samples, 0.07%)</title><rect x="434.6" y="1091.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="437.6" y="1102.0"></text>
</g>
<g>
<title>move_to_new_page (3 samples, 0.07%)</title><rect x="434.6" y="1075.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.6" y="1086.0"></text>
</g>
<g>
<title>migrate_page (2 samples, 0.04%)</title><rect x="434.6" y="1059.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="437.6" y="1070.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="434.6" y="1043.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="437.6" y="1054.0"></text>
</g>
<g>
<title>migrate_page_copy (1 samples, 0.02%)</title><rect x="434.9" y="1043.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.9" y="1054.0"></text>
</g>
<g>
<title>migrate_page_states (1 samples, 0.02%)</title><rect x="434.9" y="1027.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.9" y="1038.0"></text>
</g>
<g>
<title>page_cpupid_xchg_last (1 samples, 0.02%)</title><rect x="434.9" y="1011.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="437.9" y="1022.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.02%)</title><rect x="435.1" y="1059.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.1" y="1070.0"></text>
</g>
<g>
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="435.1" y="1043.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.1" y="1054.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (2 samples, 0.04%)</title><rect x="435.4" y="1123.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="438.4" y="1134.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (2 samples, 0.04%)</title><rect x="435.4" y="1107.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.4" y="1118.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="435.9" y="1219.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="438.9" y="1230.0"></text>
</g>
<g>
<title>page_fault (13 samples, 0.29%)</title><rect x="436.5" y="1219.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.5" y="1230.0"></text>
</g>
<g>
<title>do_page_fault (13 samples, 0.29%)</title><rect x="436.5" y="1203.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.5" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (13 samples, 0.29%)</title><rect x="436.5" y="1187.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.5" y="1198.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="437.0" y="1171.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="440.0" y="1182.0"></text>
</g>
<g>
<title>handle_mm_fault (10 samples, 0.22%)</title><rect x="437.2" y="1171.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.2" y="1182.0"></text>
</g>
<g>
<title>handle_pte_fault (10 samples, 0.22%)</title><rect x="437.2" y="1155.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="440.2" y="1166.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.04%)</title><rect x="437.5" y="1139.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.5" y="1150.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="437.5" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.5" y="1134.0"></text>
</g>
<g>
<title>clear_page_c_e (1 samples, 0.02%)</title><rect x="437.5" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.5" y="1118.0"></text>
</g>
<g>
<title>policy_zonelist (1 samples, 0.02%)</title><rect x="437.8" y="1123.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="440.8" y="1134.0"></text>
</g>
<g>
<title>do_numa_page (4 samples, 0.09%)</title><rect x="438.0" y="1139.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.0" y="1150.0"></text>
</g>
<g>
<title>migrate_misplaced_page (3 samples, 0.07%)</title><rect x="438.3" y="1123.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.3" y="1134.0"></text>
</g>
<g>
<title>migrate_pages (3 samples, 0.07%)</title><rect x="438.3" y="1107.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="441.3" y="1118.0"></text>
</g>
<g>
<title>alloc_misplaced_dst_page (1 samples, 0.02%)</title><rect x="438.3" y="1091.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="441.3" y="1102.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="438.3" y="1075.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.3" y="1086.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="438.3" y="1059.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.3" y="1070.0"></text>
</g>
<g>
<title>try_to_unmap (2 samples, 0.04%)</title><rect x="438.5" y="1091.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="441.5" y="1102.0"></text>
</g>
<g>
<title>rmap_walk (2 samples, 0.04%)</title><rect x="438.5" y="1075.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="441.5" y="1086.0"></text>
</g>
<g>
<title>try_to_unmap_one (2 samples, 0.04%)</title><rect x="438.5" y="1059.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.5" y="1070.0"></text>
</g>
<g>
<title>ptep_clear_flush (2 samples, 0.04%)</title><rect x="438.5" y="1043.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.5" y="1054.0"></text>
</g>
<g>
<title>flush_tlb_page (2 samples, 0.04%)</title><rect x="438.5" y="1027.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.5" y="1038.0"></text>
</g>
<g>
<title>native_flush_tlb_others (2 samples, 0.04%)</title><rect x="438.5" y="1011.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.5" y="1022.0"></text>
</g>
<g>
<title>smp_call_function_many (2 samples, 0.04%)</title><rect x="438.5" y="995.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="441.5" y="1006.0"></text>
</g>
<g>
<title>native_send_call_func_ipi (1 samples, 0.02%)</title><rect x="438.8" y="979.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="441.8" y="990.0"></text>
</g>
<g>
<title>physflat_send_IPI_mask (1 samples, 0.02%)</title><rect x="438.8" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.8" y="974.0"></text>
</g>
<g>
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.02%)</title><rect x="438.8" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.8" y="958.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (3 samples, 0.07%)</title><rect x="439.1" y="1139.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.1" y="1150.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (3 samples, 0.07%)</title><rect x="439.1" y="1123.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="442.1" y="1134.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.handleFutureResult (29 samples, 0.64%)</title><rect x="439.9" y="1235.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.9" y="1246.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.checkEpochIsStale (3 samples, 0.07%)</title><rect x="439.9" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.9" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="439.9" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.9" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="439.9" y="1187.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.9" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.onSuccess (26 samples, 0.58%)</title><rect x="440.6" y="1219.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.6" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.20%)</title><rect x="440.6" y="1203.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.6" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.18%)</title><rect x="440.6" y="1187.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.6" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.equals (1 samples, 0.02%)</title><rect x="442.2" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.2" y="1182.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="442.2" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.2" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="442.5" y="1171.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="445.5" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="442.5" y="1155.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.5" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="442.5" y="1139.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="445.5" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="442.5" y="1123.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.5" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="442.5" y="1107.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="445.5" y="1118.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="442.5" y="1091.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.5" y="1102.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="442.5" y="1075.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="442.7" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.7" y="1198.0"></text>
</g>
<g>
<title>org/apache/kafka/common/TopicPartition.hashCode (1 samples, 0.02%)</title><rect x="442.7" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.7" y="1182.0"></text>
</g>
<g>
<title>java/util/Objects.hashCode (1 samples, 0.02%)</title><rect x="442.7" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="442.7" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (17 samples, 0.38%)</title><rect x="443.0" y="1203.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (17 samples, 0.38%)</title><rect x="443.0" y="1187.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.0" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (6 samples, 0.13%)</title><rect x="443.8" y="1171.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.8" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.leftOf (3 samples, 0.07%)</title><rect x="444.3" y="1155.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.3" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.rightOf (1 samples, 0.02%)</title><rect x="445.1" y="1155.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.1" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (8 samples, 0.18%)</title><rect x="445.3" y="1171.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.3" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="447.4" y="1235.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.4" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="447.7" y="1235.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.7" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="448.2" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.2" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="448.2" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.2" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="448.2" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.2" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkContainer.hashCode (1 samples, 0.02%)</title><rect x="448.2" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="448.2" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.2" y="1182.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.02%)</title><rect x="448.2" y="1155.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="451.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.drainTo (57 samples, 1.26%)</title><rect x="448.5" y="1235.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.5" y="1246.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/CountingCRLinkedList.add (1 samples, 0.02%)</title><rect x="448.5" y="1219.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.5" y="1230.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/CountingCRLinkedList.add (1 samples, 0.02%)</title><rect x="448.5" y="1203.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.5" y="1214.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkContainer.hashCode (1 samples, 0.02%)</title><rect x="448.5" y="1187.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.5" y="1198.0"></text>
</g>
<g>
<title>java/util/HashSet.add (56 samples, 1.24%)</title><rect x="448.7" y="1219.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.7" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.put (56 samples, 1.24%)</title><rect x="448.7" y="1203.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.7" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.44%)</title><rect x="454.8" y="1187.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.8" y="1198.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkContainer.hashCode (20 samples, 0.44%)</title><rect x="454.8" y="1171.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (10 samples, 0.22%)</title><rect x="457.4" y="1155.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.4" y="1166.0"></text>
</g>
<g>
<title>JVM_IHashCode (9 samples, 0.20%)</title><rect x="457.6" y="1139.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="460.6" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (9 samples, 0.20%)</title><rect x="457.6" y="1123.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="460.6" y="1134.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (6 samples, 0.13%)</title><rect x="458.2" y="1107.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="461.2" y="1118.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="459.7" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="462.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.29%)</title><rect x="460.0" y="1187.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.0" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (4 samples, 0.09%)</title><rect x="460.2" y="1171.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.04%)</title><rect x="461.3" y="1171.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.3" y="1182.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="461.3" y="1155.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="464.3" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="461.3" y="1139.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.3" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="461.3" y="1123.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="464.3" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="461.3" y="1107.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.3" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="461.3" y="1091.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.3" y="1102.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (2 samples, 0.04%)</title><rect x="461.3" y="1075.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.3" y="1086.0"></text>
</g>
<g>
<title>__inc_zone_page_state (2 samples, 0.04%)</title><rect x="461.3" y="1059.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.3" y="1070.0"></text>
</g>
<g>
<title>__inc_zone_state (1 samples, 0.02%)</title><rect x="461.6" y="1043.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.13%)</title><rect x="461.8" y="1171.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (1 samples, 0.02%)</title><rect x="463.4" y="1235.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="463.4" y="1219.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="463.4" y="1203.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="463.4" y="1187.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="463.4" y="1171.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.4" y="1182.0"></text>
</g>
<g>
<title>org/slf4j/MDC.clear (3 samples, 0.07%)</title><rect x="463.6" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.6" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.clear (3 samples, 0.07%)</title><rect x="463.6" y="1219.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="463.6" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.02%)</title><rect x="463.9" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$200 (1 samples, 0.02%)</title><rect x="463.9" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.02%)</title><rect x="463.9" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="464.2" y="1203.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.02%)</title><rect x="464.2" y="1187.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="464.2" y="1171.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.2" y="1182.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (24 samples, 0.53%)</title><rect x="464.4" y="1235.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.4" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (24 samples, 0.53%)</title><rect x="464.4" y="1219.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.4" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.duplicateAndInsertNewMap (4 samples, 0.09%)</title><rect x="464.4" y="1203.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.09%)</title><rect x="464.4" y="1187.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (4 samples, 0.09%)</title><rect x="464.4" y="1171.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="464.4" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.4" y="1166.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.07%)</title><rect x="464.7" y="1155.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="467.7" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.07%)</title><rect x="464.7" y="1139.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="467.7" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.07%)</title><rect x="464.7" y="1123.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.7" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="465.0" y="1107.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.0" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="465.0" y="1091.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.0" y="1102.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="465.0" y="1075.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.0" y="1086.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.04%)</title><rect x="465.0" y="1059.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.0" y="1070.0"></text>
</g>
<g>
<title>migrate_pages (2 samples, 0.04%)</title><rect x="465.0" y="1043.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="468.0" y="1054.0"></text>
</g>
<g>
<title>mem_cgroup_prepare_migration (1 samples, 0.02%)</title><rect x="465.0" y="1027.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="468.0" y="1038.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="465.2" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.2" y="1038.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="465.2" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="468.2" y="1022.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="465.2" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.11%)</title><rect x="465.5" y="1203.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.02%)</title><rect x="465.5" y="1187.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="465.5" y="1171.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.09%)</title><rect x="465.7" y="1187.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (4 samples, 0.09%)</title><rect x="465.7" y="1171.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.09%)</title><rect x="465.7" y="1155.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.7" y="1166.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="466.3" y="1139.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.3" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="466.3" y="1123.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.3" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="466.3" y="1107.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.3" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="466.5" y="1091.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.5" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="466.5" y="1075.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.5" y="1086.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="466.5" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.5" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="466.5" y="1043.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.5" y="1054.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (15 samples, 0.33%)</title><rect x="466.8" y="1203.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.8" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.put (15 samples, 0.33%)</title><rect x="466.8" y="1187.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.8" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (15 samples, 0.33%)</title><rect x="466.8" y="1171.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.02%)</title><rect x="466.8" y="1155.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.8" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.13%)</title><rect x="467.0" y="1155.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.0" y="1166.0"></text>
</g>
<g>
<title>page_fault (4 samples, 0.09%)</title><rect x="467.6" y="1139.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.6" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.09%)</title><rect x="467.6" y="1123.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.6" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.09%)</title><rect x="467.6" y="1107.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="470.6" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.07%)</title><rect x="467.8" y="1091.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="470.8" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (3 samples, 0.07%)</title><rect x="467.8" y="1075.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="470.8" y="1086.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="467.8" y="1059.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.8" y="1070.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="467.8" y="1043.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.8" y="1054.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="467.8" y="1027.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="470.8" y="1038.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="468.1" y="1059.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="471.1" y="1070.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="468.1" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.1" y="1054.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="468.1" y="1027.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="471.1" y="1038.0"></text>
</g>
<g>
<title>move_to_new_page (1 samples, 0.02%)</title><rect x="468.1" y="1011.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="471.1" y="1022.0"></text>
</g>
<g>
<title>migrate_page (1 samples, 0.02%)</title><rect x="468.1" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.1" y="1006.0"></text>
</g>
<g>
<title>copy_page_rep (1 samples, 0.02%)</title><rect x="468.1" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.1" y="990.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="468.4" y="1059.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.4" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="468.4" y="1043.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="471.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.18%)</title><rect x="468.6" y="1155.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.6" y="1166.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.11%)</title><rect x="469.4" y="1139.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.4" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.11%)</title><rect x="469.4" y="1123.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.4" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.11%)</title><rect x="469.4" y="1107.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.4" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (5 samples, 0.11%)</title><rect x="469.4" y="1091.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.4" y="1102.0"></text>
</g>
<g>
<title>handle_pte_fault (5 samples, 0.11%)</title><rect x="469.4" y="1075.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.4" y="1086.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="469.4" y="1059.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.4" y="1070.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.04%)</title><rect x="469.4" y="1043.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.4" y="1054.0"></text>
</g>
<g>
<title>migrate_pages (2 samples, 0.04%)</title><rect x="469.4" y="1027.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.4" y="1038.0"></text>
</g>
<g>
<title>alloc_misplaced_dst_page (1 samples, 0.02%)</title><rect x="469.4" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.4" y="1022.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="469.4" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.4" y="1006.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="469.4" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.4" y="990.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="469.7" y="1011.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.7" y="1022.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="469.7" y="995.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.7" y="1006.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="469.7" y="979.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.7" y="990.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="469.7" y="963.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.7" y="974.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="469.7" y="947.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="472.7" y="958.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="469.7" y="931.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.7" y="942.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="469.7" y="915.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="472.7" y="926.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="469.9" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.9" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (2 samples, 0.04%)</title><rect x="470.2" y="1059.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.2" y="1070.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (2 samples, 0.04%)</title><rect x="470.2" y="1043.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.2" y="1054.0"></text>
</g>
<g>
<title>io/confluent/parallelconsumer/WorkManager.getNumberOfEntriesInPartitionQueues (985 samples, 21.83%)</title><rect x="470.7" y="1251.0" width="257.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.7" y="1262.0">io/confluent/parallelconsumer/Work..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$MapEntry.getValue (1 samples, 0.02%)</title><rect x="470.7" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.size (984 samples, 21.80%)</title><rect x="471.0" y="1235.0" width="257.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.0" y="1246.0">java/util/concurrent/ConcurrentSki..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="569.0" y="1219.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="572.0" y="1230.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="569.0" y="1203.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="572.0" y="1214.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="569.0" y="1187.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.0" y="1198.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="569.0" y="1171.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="572.0" y="1182.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="569.0" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="572.0" y="1166.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="569.0" y="1139.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="572.0" y="1150.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="569.0" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="572.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.getValidValue (608 samples, 13.47%)</title><rect x="569.3" y="1219.0" width="158.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.3" y="1230.0">java/util/concurrent..</text>
</g>
<g>
<title>retint_signal (2 samples, 0.04%)</title><rect x="727.7" y="1203.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="730.7" y="1214.0"></text>
</g>
<g>
<title>do_notify_resume (2 samples, 0.04%)</title><rect x="727.7" y="1187.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="730.7" y="1198.0"></text>
</g>
<g>
<title>task_work_run (2 samples, 0.04%)</title><rect x="727.7" y="1171.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.7" y="1182.0"></text>
</g>
<g>
<title>task_numa_work (2 samples, 0.04%)</title><rect x="727.7" y="1155.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.7" y="1166.0"></text>
</g>
<g>
<title>change_prot_numa (2 samples, 0.04%)</title><rect x="727.7" y="1139.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="1150.0"></text>
</g>
<g>
<title>change_protection (2 samples, 0.04%)</title><rect x="727.7" y="1123.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="730.7" y="1134.0"></text>
</g>
<g>
<title>change_pte_range (2 samples, 0.04%)</title><rect x="727.7" y="1107.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (2 samples, 0.04%)</title><rect x="728.2" y="1251.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.2" y="1262.0"></text>
</g>
<g>
<title>JVM_Sleep (2 samples, 0.04%)</title><rect x="728.2" y="1235.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="731.2" y="1246.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (2 samples, 0.04%)</title><rect x="728.2" y="1219.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="731.2" y="1230.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="728.2" y="1203.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="731.2" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="728.5" y="1203.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="731.5" y="1214.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="728.5" y="1187.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.5" y="1198.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="728.5" y="1171.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.5" y="1182.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="728.5" y="1155.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="731.5" y="1166.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="728.5" y="1139.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="731.5" y="1150.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="728.5" y="1123.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="731.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (2 samples, 0.04%)</title><rect x="728.8" y="1299.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.09%)</title><rect x="729.3" y="1315.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="729.3" y="1299.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.09%)</title><rect x="729.3" y="1283.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="730.1" y="1267.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (234 samples, 5.19%)</title><rect x="730.3" y="1315.0" width="61.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.3" y="1326.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (228 samples, 5.05%)</title><rect x="731.9" y="1299.0" width="59.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.9" y="1310.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (82 samples, 1.82%)</title><rect x="733.2" y="1283.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.2" y="1294.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.31%)</title><rect x="733.2" y="1267.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.31%)</title><rect x="733.2" y="1251.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.31%)</title><rect x="733.2" y="1235.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.2" y="1246.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (5 samples, 0.11%)</title><rect x="735.6" y="1219.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.6" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.11%)</title><rect x="735.6" y="1203.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="738.6" y="1214.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="735.6" y="1187.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="738.6" y="1198.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.07%)</title><rect x="735.8" y="1187.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="738.8" y="1198.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.07%)</title><rect x="735.8" y="1171.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="738.8" y="1182.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.07%)</title><rect x="735.8" y="1155.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.8" y="1166.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="735.8" y="1139.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.8" y="1150.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="735.8" y="1123.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.8" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="736.1" y="1107.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="739.1" y="1118.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (2 samples, 0.04%)</title><rect x="736.1" y="1091.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.1" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="736.6" y="1187.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="739.6" y="1198.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="736.6" y="1171.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.6" y="1182.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="736.6" y="1155.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.6" y="1166.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="736.6" y="1139.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.6" y="1150.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="736.6" y="1123.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.6" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="736.6" y="1107.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.6" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="736.6" y="1091.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (31 samples, 0.69%)</title><rect x="736.9" y="1267.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.69%)</title><rect x="736.9" y="1251.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.69%)</title><rect x="736.9" y="1235.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.69%)</title><rect x="736.9" y="1219.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.9" y="1230.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (25 samples, 0.55%)</title><rect x="738.4" y="1203.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.4" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.53%)</title><rect x="738.4" y="1187.0" width="6.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="741.4" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 0.49%)</title><rect x="738.4" y="1171.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="741.4" y="1182.0"></text>
</g>
<g>
<title>system_call_fastpath (19 samples, 0.42%)</title><rect x="739.2" y="1155.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="742.2" y="1166.0"></text>
</g>
<g>
<title>sys_futex (19 samples, 0.42%)</title><rect x="739.2" y="1139.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="742.2" y="1150.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.42%)</title><rect x="739.2" y="1123.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="742.2" y="1134.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.04%)</title><rect x="739.2" y="1107.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.2" y="1118.0"></text>
</g>
<g>
<title>futex_wake_op (16 samples, 0.35%)</title><rect x="739.8" y="1107.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="742.8" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="740.8" y="1091.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.8" y="1102.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (1 samples, 0.02%)</title><rect x="740.8" y="1075.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.8" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="741.1" y="1091.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.1" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.22%)</title><rect x="741.3" y="1091.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="744.3" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.22%)</title><rect x="741.3" y="1075.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="744.3" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.22%)</title><rect x="741.3" y="1059.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="744.3" y="1070.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="743.9" y="1107.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.9" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="744.2" y="1171.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="747.2" y="1182.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="744.7" y="1187.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="747.7" y="1198.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="744.7" y="1171.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="747.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (7 samples, 0.16%)</title><rect x="745.0" y="1267.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (30 samples, 0.66%)</title><rect x="746.8" y="1267.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.8" y="1278.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (30 samples, 0.66%)</title><rect x="746.8" y="1251.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.8" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Park (26 samples, 0.58%)</title><rect x="747.3" y="1235.0" width="6.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="750.3" y="1246.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="747.3" y="1219.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="750.3" y="1230.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.02%)</title><rect x="747.3" y="1203.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="750.3" y="1214.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.24%)</title><rect x="747.6" y="1219.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="750.6" y="1230.0"></text>
</g>
<g>
<title>system_call_fastpath (7 samples, 0.16%)</title><rect x="748.6" y="1203.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.6" y="1214.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.16%)</title><rect x="748.6" y="1187.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="751.6" y="1198.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.11%)</title><rect x="749.2" y="1171.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="752.2" y="1182.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.09%)</title><rect x="749.2" y="1155.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="752.2" y="1166.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="749.4" y="1139.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.4" y="1150.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (3 samples, 0.07%)</title><rect x="749.4" y="1123.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.4" y="1134.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="750.2" y="1155.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.2" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.27%)</title><rect x="750.5" y="1219.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="753.5" y="1230.0"></text>
</g>
<g>
<title>retint_signal (1 samples, 0.02%)</title><rect x="751.8" y="1203.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="754.8" y="1214.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.02%)</title><rect x="751.8" y="1187.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="754.8" y="1198.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="751.8" y="1171.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="754.8" y="1182.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.02%)</title><rect x="751.8" y="1155.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.8" y="1166.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="751.8" y="1139.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.8" y="1150.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.02%)</title><rect x="751.8" y="1123.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="754.8" y="1134.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.02%)</title><rect x="751.8" y="1107.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="754.8" y="1118.0"></text>
</g>
<g>
<title>system_call_fastpath (6 samples, 0.13%)</title><rect x="752.0" y="1203.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="755.0" y="1214.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.13%)</title><rect x="752.0" y="1187.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="755.0" y="1198.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.13%)</title><rect x="752.0" y="1171.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="755.0" y="1182.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.13%)</title><rect x="752.0" y="1155.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="755.0" y="1166.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="752.3" y="1139.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="755.3" y="1150.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="752.6" y="1139.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.6" y="1150.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="752.6" y="1123.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="755.6" y="1134.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="752.8" y="1139.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="755.8" y="1150.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="753.4" y="1139.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="756.4" y="1150.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="753.6" y="1219.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="756.6" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="753.9" y="1219.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="756.9" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="754.1" y="1235.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="757.1" y="1246.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="754.1" y="1219.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="757.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (58 samples, 1.29%)</title><rect x="754.7" y="1283.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (58 samples, 1.29%)</title><rect x="754.7" y="1267.0" width="15.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (58 samples, 1.29%)</title><rect x="754.7" y="1251.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (54 samples, 1.20%)</title><rect x="755.7" y="1235.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (54 samples, 1.20%)</title><rect x="755.7" y="1219.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.7" y="1230.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="757.5" y="1203.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="760.5" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="757.5" y="1187.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="760.5" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="757.5" y="1171.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="760.5" y="1182.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="757.5" y="1155.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="760.5" y="1166.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="757.5" y="1139.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="760.5" y="1150.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="757.5" y="1123.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="760.5" y="1134.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="757.5" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="760.5" y="1118.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (46 samples, 1.02%)</title><rect x="757.8" y="1203.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.8" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Park (43 samples, 0.95%)</title><rect x="758.1" y="1187.0" width="11.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="761.1" y="1198.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.02%)</title><rect x="758.3" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="761.3" y="1182.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="758.6" y="1171.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="761.6" y="1182.0"></text>
</g>
<g>
<title>__lll_unlock_wake (22 samples, 0.49%)</title><rect x="759.1" y="1171.0" width="5.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="762.1" y="1182.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="760.4" y="1155.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.4" y="1166.0"></text>
</g>
<g>
<title>sysret_check (1 samples, 0.02%)</title><rect x="760.7" y="1155.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.7" y="1166.0"></text>
</g>
<g>
<title>system_call_fastpath (15 samples, 0.33%)</title><rect x="760.9" y="1155.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="763.9" y="1166.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.33%)</title><rect x="760.9" y="1139.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.9" y="1150.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.31%)</title><rect x="761.2" y="1123.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="764.2" y="1134.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.29%)</title><rect x="761.2" y="1107.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="764.2" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (12 samples, 0.27%)</title><rect x="761.5" y="1091.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.5" y="1102.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (12 samples, 0.27%)</title><rect x="761.5" y="1075.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="764.5" y="1086.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="764.6" y="1107.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="767.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (13 samples, 0.29%)</title><rect x="764.9" y="1171.0" width="3.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="767.9" y="1182.0"></text>
</g>
<g>
<title>int_signal (1 samples, 0.02%)</title><rect x="765.6" y="1155.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="768.6" y="1166.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.02%)</title><rect x="765.6" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.6" y="1150.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="765.6" y="1123.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="768.6" y="1134.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.02%)</title><rect x="765.6" y="1107.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="768.6" y="1118.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="765.6" y="1091.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.6" y="1102.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.02%)</title><rect x="765.6" y="1075.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.6" y="1086.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.02%)</title><rect x="765.6" y="1059.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.6" y="1070.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="765.9" y="1155.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="768.9" y="1166.0"></text>
</g>
<g>
<title>system_call_fastpath (7 samples, 0.16%)</title><rect x="766.4" y="1155.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="769.4" y="1166.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.16%)</title><rect x="766.4" y="1139.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="769.4" y="1150.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.16%)</title><rect x="766.4" y="1123.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="769.4" y="1134.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.16%)</title><rect x="766.4" y="1107.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.4" y="1118.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="766.4" y="1091.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.4" y="1102.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="766.4" y="1075.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.4" y="1086.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="766.4" y="1059.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="769.4" y="1070.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="766.7" y="1043.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="769.7" y="1054.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.11%)</title><rect x="766.9" y="1091.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.9" y="1102.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="768.0" y="1075.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="768.3" y="1171.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="771.3" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="768.5" y="1171.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="771.5" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="769.0" y="1171.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="772.0" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="769.3" y="1187.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="772.3" y="1198.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="769.3" y="1171.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="772.3" y="1182.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="769.6" y="1187.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (83 samples, 1.84%)</title><rect x="769.8" y="1283.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.8" y="1294.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (83 samples, 1.84%)</title><rect x="769.8" y="1267.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.8" y="1278.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (83 samples, 1.84%)</title><rect x="769.8" y="1251.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.8" y="1262.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (82 samples, 1.82%)</title><rect x="770.1" y="1235.0" width="21.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.1" y="1246.0">j..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (45 samples, 1.00%)</title><rect x="779.8" y="1219.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.8" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (43 samples, 0.95%)</title><rect x="779.8" y="1203.0" width="11.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="782.8" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (37 samples, 0.82%)</title><rect x="779.8" y="1187.0" width="9.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="782.8" y="1198.0"></text>
</g>
<g>
<title>system_call_fastpath (33 samples, 0.73%)</title><rect x="780.8" y="1171.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="783.8" y="1182.0"></text>
</g>
<g>
<title>sys_futex (33 samples, 0.73%)</title><rect x="780.8" y="1155.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="783.8" y="1166.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.73%)</title><rect x="780.8" y="1139.0" width="8.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="783.8" y="1150.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.04%)</title><rect x="780.8" y="1123.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.8" y="1134.0"></text>
</g>
<g>
<title>futex_wake_op (31 samples, 0.69%)</title><rect x="781.3" y="1123.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.3" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="781.9" y="1107.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="784.9" y="1118.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="782.1" y="1107.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.1" y="1118.0"></text>
</g>
<g>
<title>mark_wake_futex (8 samples, 0.18%)</title><rect x="782.4" y="1107.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="785.4" y="1118.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.42%)</title><rect x="784.5" y="1107.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="787.5" y="1118.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.42%)</title><rect x="784.5" y="1091.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.5" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.40%)</title><rect x="784.7" y="1075.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="787.7" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="789.4" y="1187.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="792.4" y="1198.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.11%)</title><rect x="789.7" y="1187.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="792.7" y="1198.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="791.0" y="1203.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="794.0" y="1214.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="791.3" y="1203.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="794.3" y="1214.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator$HeartbeatThread.run (1 samples, 0.02%)</title><rect x="791.5" y="1363.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.5" y="1374.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.pollNoWakeup (1 samples, 0.02%)</title><rect x="791.5" y="1347.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.5" y="1358.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.02%)</title><rect x="791.5" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.5" y="1342.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.02%)</title><rect x="791.5" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="1326.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 0.02%)</title><rect x="791.5" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.5" y="1310.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (1 samples, 0.02%)</title><rect x="791.5" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="1294.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.attemptRead (1 samples, 0.02%)</title><rect x="791.5" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.5" y="1278.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.read (1 samples, 0.02%)</title><rect x="791.5" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.5" y="1262.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.receive (1 samples, 0.02%)</title><rect x="791.5" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.5" y="1246.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/NetworkReceive.readFrom (1 samples, 0.02%)</title><rect x="791.5" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="791.5" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="794.5" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="791.5" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="794.5" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="791.5" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="794.5" y="1182.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.02%)</title><rect x="791.5" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="794.5" y="1166.0"></text>
</g>
<g>
<title>CodeBlob::is_adapter_blob() const (1 samples, 0.02%)</title><rect x="791.5" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="794.5" y="1150.0"></text>
</g>
<g>
<title>start_thread (1,523 samples, 33.75%)</title><rect x="791.8" y="1363.0" width="398.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="794.8" y="1374.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (1,523 samples, 33.75%)</title><rect x="791.8" y="1347.0" width="398.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="794.8" y="1358.0">java_start(Thread*)</text>
</g>
<g>
<title>ConcurrentG1RefineThread::run() (4 samples, 0.09%)</title><rect x="791.8" y="1331.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="794.8" y="1342.0"></text>
</g>
<g>
<title>ConcurrentG1RefineThread::run_young_rs_sampling() (3 samples, 0.07%)</title><rect x="791.8" y="1315.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="794.8" y="1326.0"></text>
</g>
<g>
<title>ConcurrentG1RefineThread::sample_young_list_rs_lengths() (3 samples, 0.07%)</title><rect x="791.8" y="1299.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="794.8" y="1310.0"></text>
</g>
<g>
<title>YoungList::rs_length_sampling_next() (3 samples, 0.07%)</title><rect x="791.8" y="1283.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="794.8" y="1294.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="792.3" y="1267.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="795.3" y="1278.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="792.3" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="795.3" y="1262.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (1 samples, 0.02%)</title><rect x="792.6" y="1315.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="795.6" y="1326.0"></text>
</g>
<g>
<title>RefineCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="792.6" y="1299.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.6" y="1310.0"></text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) (1 samples, 0.02%)</title><rect x="792.6" y="1283.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="795.6" y="1294.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="792.6" y="1267.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="795.6" y="1278.0"></text>
</g>
<g>
<title>GangWorker::loop() (1,232 samples, 27.30%)</title><rect x="792.8" y="1331.0" width="322.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="795.8" y="1342.0">GangWorker::loop()</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1,232 samples, 27.30%)</title><rect x="792.8" y="1315.0" width="322.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="795.8" y="1326.0">G1ParTask::work(unsigned int)</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1,204 samples, 26.68%)</title><rect x="792.8" y="1299.0" width="314.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="795.8" y="1310.0">G1ParEvacuateFollowersClosure::do_void()</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (15 samples, 0.33%)</title><rect x="826.0" y="1283.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="829.0" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_backwards_nv(oopDesc*, G1ParScanClosure*) (6 samples, 0.13%)</title><rect x="828.4" y="1267.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="831.4" y="1278.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) (5 samples, 0.11%)</title><rect x="828.7" y="1251.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="831.7" y="1262.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (214 samples, 4.74%)</title><rect x="830.0" y="1283.0" width="55.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="833.0" y="1294.0">G1Par..</text>
</g>
<g>
<title>G1DefaultParGCAllocator::alloc_buffer(InCSetState, unsigned char) (2 samples, 0.04%)</title><rect x="859.8" y="1267.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="862.8" y="1278.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (85 samples, 1.88%)</title><rect x="860.3" y="1267.0" width="22.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="863.3" y="1278.0">G..</text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_backwards_nv(oopDesc*, G1ParScanClosure*) (40 samples, 0.89%)</title><rect x="869.4" y="1251.0" width="10.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.4" y="1262.0"></text>
</g>
<g>
<title>G1SATBCardTableModRefBS::mark_card_deferred(unsigned long) (1 samples, 0.02%)</title><rect x="874.1" y="1235.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="877.1" y="1246.0"></text>
</g>
<g>
<title>Atomic::cmpxchg(signed char, signed char volatile*, signed char) (1 samples, 0.02%)</title><rect x="874.1" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="877.1" y="1230.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) (21 samples, 0.47%)</title><rect x="874.4" y="1235.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="877.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.02%)</title><rect x="879.9" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="882.9" y="1262.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) (1 samples, 0.02%)</title><rect x="880.2" y="1251.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="883.2" y="1262.0"></text>
</g>
<g>
<title>page_fault (8 samples, 0.18%)</title><rect x="880.4" y="1251.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="883.4" y="1262.0"></text>
</g>
<g>
<title>do_page_fault (8 samples, 0.18%)</title><rect x="880.4" y="1235.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="883.4" y="1246.0"></text>
</g>
<g>
<title>__do_page_fault (8 samples, 0.18%)</title><rect x="880.4" y="1219.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="883.4" y="1230.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="880.9" y="1203.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="883.9" y="1214.0"></text>
</g>
<g>
<title>handle_mm_fault (4 samples, 0.09%)</title><rect x="881.2" y="1203.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.2" y="1214.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="881.5" y="1187.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.5" y="1198.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="881.7" y="1187.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.7" y="1198.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="881.7" y="1171.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.7" y="1182.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="881.7" y="1155.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.7" y="1166.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="882.0" y="1171.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="885.0" y="1182.0"></text>
</g>
<g>
<title>__inc_zone_page_state (1 samples, 0.02%)</title><rect x="882.0" y="1155.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="885.0" y="1166.0"></text>
</g>
<g>
<title>__inc_zone_state (1 samples, 0.02%)</title><rect x="882.0" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="885.0" y="1150.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.02%)</title><rect x="882.3" y="1203.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="885.3" y="1214.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (8 samples, 0.18%)</title><rect x="882.5" y="1267.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="885.5" y="1278.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="884.1" y="1251.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.1" y="1262.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="884.1" y="1235.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="887.1" y="1246.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="884.1" y="1219.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="887.1" y="1230.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="884.1" y="1203.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="887.1" y="1214.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.11%)</title><rect x="884.6" y="1267.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="887.6" y="1278.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.11%)</title><rect x="884.6" y="1251.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="887.6" y="1262.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.11%)</title><rect x="884.6" y="1235.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="887.6" y="1246.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="885.4" y="1219.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="888.4" y="1230.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="885.4" y="1203.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="888.4" y="1214.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="885.4" y="1187.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="888.4" y="1198.0"></text>
</g>
<g>
<title>migrate_misplaced_page (2 samples, 0.04%)</title><rect x="885.4" y="1171.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.4" y="1182.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="885.4" y="1155.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="888.4" y="1166.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="885.4" y="1139.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="888.4" y="1150.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="885.4" y="1123.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.4" y="1134.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="885.4" y="1107.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="888.4" y="1118.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="885.4" y="1091.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.4" y="1102.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="885.4" y="1075.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="888.4" y="1086.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="885.4" y="1059.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="888.4" y="1070.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="885.4" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="888.4" y="1054.0"></text>
</g>
<g>
<title>native_send_call_func_ipi (1 samples, 0.02%)</title><rect x="885.4" y="1027.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="888.4" y="1038.0"></text>
</g>
<g>
<title>physflat_send_IPI_mask (1 samples, 0.02%)</title><rect x="885.4" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="888.4" y="1022.0"></text>
</g>
<g>
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.02%)</title><rect x="885.4" y="995.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="888.4" y="1006.0"></text>
</g>
<g>
<title>page_get_anon_vma (1 samples, 0.02%)</title><rect x="885.7" y="1155.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="888.7" y="1166.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (847 samples, 18.77%)</title><rect x="885.9" y="1283.0" width="221.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="888.9" y="1294.0">GenericTaskQueueSet&lt;OverflowT..</text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (4 samples, 0.09%)</title><rect x="1106.3" y="1267.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1109.3" y="1278.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="1107.4" y="1283.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1110.4" y="1294.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::peek() (1 samples, 0.02%)</title><rect x="1107.4" y="1267.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.4" y="1278.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, bool, unsigned int) (6 samples, 0.13%)</title><rect x="1107.6" y="1299.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1110.6" y="1310.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.04%)</title><rect x="1107.6" y="1283.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1110.6" y="1294.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1107.6" y="1267.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.6" y="1278.0"></text>
</g>
<g>
<title>G1ParGCAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, unsigned char) (1 samples, 0.02%)</title><rect x="1107.6" y="1251.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.6" y="1262.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.02%)</title><rect x="1107.6" y="1235.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1110.6" y="1246.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1107.6" y="1219.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1110.6" y="1230.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1107.6" y="1203.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1110.6" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1107.6" y="1187.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1110.6" y="1198.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.02%)</title><rect x="1107.6" y="1171.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1110.6" y="1182.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1107.9" y="1267.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1110.9" y="1278.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1107.9" y="1251.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1110.9" y="1262.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1107.9" y="1235.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1110.9" y="1246.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1107.9" y="1219.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1110.9" y="1230.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(OopClosure*, CLDClosure*, CLDClosure*, CLDClosure*, CodeBlobClosure*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1108.2" y="1283.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1111.2" y="1294.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.02%)</title><rect x="1108.2" y="1267.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1111.2" y="1278.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.02%)</title><rect x="1108.2" y="1251.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1111.2" y="1262.0"></text>
</g>
<g>
<title>G1KlassScanClosure::do_klass(Klass*) (1 samples, 0.02%)</title><rect x="1108.2" y="1235.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1111.2" y="1246.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(OopClosure*, OopClosure*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.07%)</title><rect x="1108.4" y="1283.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.4" y="1294.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopClosure*) (3 samples, 0.07%)</title><rect x="1108.4" y="1267.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.4" y="1278.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (22 samples, 0.49%)</title><rect x="1109.2" y="1299.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.2" y="1310.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (22 samples, 0.49%)</title><rect x="1109.2" y="1283.0" width="5.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.2" y="1294.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, DirtyCardQueue*, bool, unsigned int) (22 samples, 0.49%)</title><rect x="1109.2" y="1267.0" width="5.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1112.2" y="1278.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (22 samples, 0.49%)</title><rect x="1109.2" y="1251.0" width="5.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1112.2" y="1262.0"></text>
</g>
<g>
<title>RefineRecordRefsIntoCSCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (22 samples, 0.49%)</title><rect x="1109.2" y="1235.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.2" y="1246.0"></text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) (22 samples, 0.49%)</title><rect x="1109.2" y="1219.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.2" y="1230.0"></text>
</g>
<g>
<title>HeapRegion::oops_on_card_seq_iterate_careful(MemRegion, FilterOutOfRegionClosure*, bool, signed char*) (19 samples, 0.42%)</title><rect x="1110.0" y="1203.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1113.0" y="1214.0"></text>
</g>
<g>
<title>G1BlockOffsetArrayContigSpace::block_start_unsafe(void const*) (6 samples, 0.13%)</title><rect x="1110.0" y="1187.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1113.0" y="1198.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.11%)</title><rect x="1110.3" y="1171.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.3" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.11%)</title><rect x="1110.3" y="1155.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.3" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.11%)</title><rect x="1110.3" y="1139.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.3" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (5 samples, 0.11%)</title><rect x="1110.3" y="1123.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1113.3" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (3 samples, 0.07%)</title><rect x="1110.8" y="1107.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.8" y="1118.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="1110.8" y="1091.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.8" y="1102.0"></text>
</g>
<g>
<title>do_numa_page (2 samples, 0.04%)</title><rect x="1111.0" y="1091.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1114.0" y="1102.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="1111.3" y="1075.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.3" y="1086.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="1111.3" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.3" y="1070.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="1111.3" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1114.3" y="1054.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="1111.3" y="1027.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1114.3" y="1038.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="1111.3" y="1011.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.3" y="1022.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="1111.3" y="995.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1114.3" y="1006.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="1111.3" y="979.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.3" y="990.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="1111.3" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1114.3" y="974.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="1111.3" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1114.3" y="958.0"></text>
</g>
<g>
<title>native_send_call_func_ipi (1 samples, 0.02%)</title><rect x="1111.3" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.3" y="942.0"></text>
</g>
<g>
<title>physflat_send_IPI_mask (1 samples, 0.02%)</title><rect x="1111.3" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1114.3" y="926.0"></text>
</g>
<g>
<title>default_send_IPI_mask_sequence_phys (1 samples, 0.02%)</title><rect x="1111.3" y="899.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1114.3" y="910.0"></text>
</g>
<g>
<title>G1Mux2Closure::do_oop(unsigned int*) (1 samples, 0.02%)</title><rect x="1111.6" y="1187.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.6" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*) (10 samples, 0.22%)</title><rect x="1111.8" y="1187.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.8" y="1198.0"></text>
</g>
<g>
<title>G1UpdateRSOrPushRefOopClosure::do_oop(unsigned int*) (3 samples, 0.07%)</title><rect x="1112.3" y="1171.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1115.3" y="1182.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="1112.6" y="1155.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.6" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="1112.6" y="1139.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1115.6" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="1112.6" y="1123.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1115.6" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="1112.6" y="1107.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.6" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.04%)</title><rect x="1112.6" y="1091.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.6" y="1102.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="1112.6" y="1075.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1115.6" y="1086.0"></text>
</g>
<g>
<title>do_numa_page (1 samples, 0.02%)</title><rect x="1112.9" y="1075.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1115.9" y="1086.0"></text>
</g>
<g>
<title>migrate_misplaced_page (1 samples, 0.02%)</title><rect x="1112.9" y="1059.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1115.9" y="1070.0"></text>
</g>
<g>
<title>migrate_pages (1 samples, 0.02%)</title><rect x="1112.9" y="1043.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1115.9" y="1054.0"></text>
</g>
<g>
<title>try_to_unmap (1 samples, 0.02%)</title><rect x="1112.9" y="1027.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1115.9" y="1038.0"></text>
</g>
<g>
<title>rmap_walk (1 samples, 0.02%)</title><rect x="1112.9" y="1011.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1115.9" y="1022.0"></text>
</g>
<g>
<title>try_to_unmap_one (1 samples, 0.02%)</title><rect x="1112.9" y="995.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.9" y="1006.0"></text>
</g>
<g>
<title>ptep_clear_flush (1 samples, 0.02%)</title><rect x="1112.9" y="979.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.9" y="990.0"></text>
</g>
<g>
<title>flush_tlb_page (1 samples, 0.02%)</title><rect x="1112.9" y="963.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.9" y="974.0"></text>
</g>
<g>
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="1112.9" y="947.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.9" y="958.0"></text>
</g>
<g>
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="1112.9" y="931.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.9" y="942.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, int) (3 samples, 0.07%)</title><rect x="1113.1" y="1171.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.1" y="1182.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1113.7" y="1155.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1116.7" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1113.7" y="1139.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1116.7" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1113.7" y="1123.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.7" y="1134.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1113.7" y="1107.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.7" y="1118.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1113.9" y="1171.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.9" y="1182.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1113.9" y="1155.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.9" y="1166.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1113.9" y="1139.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1116.9" y="1150.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="1113.9" y="1123.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1116.9" y="1134.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="1113.9" y="1107.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1116.9" y="1118.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="1113.9" y="1091.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1116.9" y="1102.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1113.9" y="1075.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1116.9" y="1086.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1114.2" y="1171.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.2" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1114.2" y="1155.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1117.2" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1114.2" y="1139.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.2" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1114.2" y="1123.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1117.2" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1114.2" y="1107.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.2" y="1118.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="1114.2" y="1091.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.2" y="1102.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*) (1 samples, 0.02%)</title><rect x="1114.4" y="1187.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.4" y="1198.0"></text>
</g>
<g>
<title>G1ParPushHeapRSClosure::do_oop(unsigned int*) (1 samples, 0.02%)</title><rect x="1114.4" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.4" y="1182.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1114.4" y="1155.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.4" y="1166.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1114.4" y="1139.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1117.4" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1114.4" y="1123.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1117.4" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1114.4" y="1107.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.4" y="1118.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1114.4" y="1091.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1117.4" y="1102.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="1114.4" y="1075.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.4" y="1086.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="1114.4" y="1059.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1117.4" y="1070.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1114.7" y="1187.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.7" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1114.7" y="1171.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1117.7" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1114.7" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.7" y="1166.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.02%)</title><rect x="1114.7" y="1139.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.7" y="1150.0"></text>
</g>
<g>
<title>JavaThread::run() (286 samples, 6.34%)</title><rect x="1115.0" y="1331.0" width="74.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1118.0" y="1342.0">JavaThre..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (286 samples, 6.34%)</title><rect x="1115.0" y="1315.0" width="74.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1118.0" y="1326.0">JavaThre..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (285 samples, 6.32%)</title><rect x="1115.0" y="1299.0" width="74.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1118.0" y="1310.0">CompileB..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (284 samples, 6.29%)</title><rect x="1115.0" y="1283.0" width="74.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.0" y="1294.0">CompileB..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (284 samples, 6.29%)</title><rect x="1115.0" y="1267.0" width="74.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.0" y="1278.0">C2Compil..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (284 samples, 6.29%)</title><rect x="1115.0" y="1251.0" width="74.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.0" y="1262.0">Compile:..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.04%)</title><rect x="1115.0" y="1235.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.0" y="1246.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.04%)</title><rect x="1115.0" y="1219.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.0" y="1230.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1115.0" y="1203.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.0" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1115.0" y="1187.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.0" y="1198.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.02%)</title><rect x="1115.0" y="1171.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1118.0" y="1182.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.02%)</title><rect x="1115.0" y="1155.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.0" y="1166.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.02%)</title><rect x="1115.0" y="1139.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1118.0" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1115.2" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.2" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1115.2" y="1171.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.2" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1115.2" y="1155.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1118.2" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1115.2" y="1139.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.2" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_new(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1115.2" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1118.2" y="1134.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant_pool_tag(int) const (1 samples, 0.02%)</title><rect x="1115.2" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1118.2" y="1118.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (133 samples, 2.95%)</title><rect x="1115.5" y="1235.0" width="34.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1118.5" y="1246.0">Co..</text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.11%)</title><rect x="1115.5" y="1219.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1118.5" y="1230.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (3 samples, 0.07%)</title><rect x="1115.5" y="1203.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1118.5" y="1214.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.02%)</title><rect x="1116.0" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.0" y="1198.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.02%)</title><rect x="1116.0" y="1171.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.0" y="1182.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.04%)</title><rect x="1116.3" y="1203.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1119.3" y="1214.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.04%)</title><rect x="1116.3" y="1187.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.3" y="1198.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.04%)</title><rect x="1116.3" y="1171.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1119.3" y="1182.0"></text>
</g>
<g>
<title>CodeBuffer::initialize_section_size(CodeSection*, int) (1 samples, 0.02%)</title><rect x="1116.3" y="1155.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.3" y="1166.0"></text>
</g>
<g>
<title>MachOper::num_edges() const (1 samples, 0.02%)</title><rect x="1116.5" y="1155.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.5" y="1166.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (6 samples, 0.13%)</title><rect x="1116.8" y="1219.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1119.8" y="1230.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.07%)</title><rect x="1117.3" y="1203.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.3" y="1214.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.04%)</title><rect x="1117.3" y="1187.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.3" y="1198.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.04%)</title><rect x="1117.3" y="1171.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1120.3" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1117.8" y="1187.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.8" y="1198.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1118.1" y="1203.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1121.1" y="1214.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.02%)</title><rect x="1118.1" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.1" y="1198.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_initialize() (1 samples, 0.02%)</title><rect x="1118.1" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.1" y="1182.0"></text>
</g>
<g>
<title>Matcher::match() (14 samples, 0.31%)</title><rect x="1118.4" y="1219.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1121.4" y="1230.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1118.4" y="1203.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.4" y="1214.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.02%)</title><rect x="1118.6" y="1203.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.6" y="1214.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (12 samples, 0.27%)</title><rect x="1118.9" y="1203.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.9" y="1214.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (6 samples, 0.13%)</title><rect x="1119.1" y="1187.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.1" y="1198.0"></text>
</g>
<g>
<title>CallNode::match(ProjNode const*, Matcher const*) (1 samples, 0.02%)</title><rect x="1120.7" y="1187.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.7" y="1198.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.04%)</title><rect x="1121.0" y="1187.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.0" y="1198.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.04%)</title><rect x="1121.0" y="1171.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.0" y="1182.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.02%)</title><rect x="1121.2" y="1155.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1124.2" y="1166.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int, Compile*) (1 samples, 0.02%)</title><rect x="1121.2" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.2" y="1150.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.04%)</title><rect x="1121.5" y="1187.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.5" y="1198.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.02%)</title><rect x="1121.8" y="1171.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.8" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1121.8" y="1155.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1124.8" y="1166.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.02%)</title><rect x="1122.0" y="1219.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.0" y="1230.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 0.02%)</title><rect x="1122.0" y="1203.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.0" y="1214.0"></text>
</g>
<g>
<title>Block::succ_fall_through(unsigned int) (1 samples, 0.02%)</title><rect x="1122.0" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1125.0" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (10 samples, 0.22%)</title><rect x="1122.3" y="1219.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1125.3" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (10 samples, 0.22%)</title><rect x="1122.3" y="1203.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1125.3" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1122.5" y="1187.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.5" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_List&amp;) (2 samples, 0.04%)</title><rect x="1122.8" y="1187.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1125.8" y="1198.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.02%)</title><rect x="1122.8" y="1171.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.8" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.02%)</title><rect x="1123.1" y="1171.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1126.1" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (4 samples, 0.09%)</title><rect x="1123.3" y="1187.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1126.3" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (2 samples, 0.04%)</title><rect x="1123.8" y="1171.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.8" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1124.4" y="1187.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.4" y="1198.0"></text>
</g>
<g>
<title>testN_regNode::ideal_Opcode() const (1 samples, 0.02%)</title><rect x="1124.6" y="1187.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.6" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (97 samples, 2.15%)</title><rect x="1124.9" y="1219.0" width="25.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.9" y="1230.0">P..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="1125.2" y="1203.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.2" y="1214.0"></text>
</g>
<g>
<title>Node::rematerialize() const (2 samples, 0.04%)</title><rect x="1125.4" y="1203.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1128.4" y="1214.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (3 samples, 0.07%)</title><rect x="1125.9" y="1203.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1128.9" y="1214.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="1126.5" y="1187.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1129.5" y="1198.0"></text>
</g>
<g>
<title>Node::grow(unsigned int) (1 samples, 0.02%)</title><rect x="1126.5" y="1171.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1129.5" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.07%)</title><rect x="1126.7" y="1203.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.7" y="1214.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.04%)</title><rect x="1127.0" y="1187.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1130.0" y="1198.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1127.0" y="1171.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.0" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1127.2" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.2" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (9 samples, 0.20%)</title><rect x="1127.5" y="1203.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.5" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.04%)</title><rect x="1128.3" y="1187.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.3" y="1198.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (4 samples, 0.09%)</title><rect x="1128.8" y="1187.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.8" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1129.6" y="1171.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1132.6" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (12 samples, 0.27%)</title><rect x="1129.9" y="1203.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.9" y="1214.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.02%)</title><rect x="1131.7" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.7" y="1198.0"></text>
</g>
<g>
<title>MachSafePointNode::in_RegMask(unsigned int) const (1 samples, 0.02%)</title><rect x="1132.0" y="1187.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.0" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (3 samples, 0.07%)</title><rect x="1132.2" y="1187.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.2" y="1198.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1132.2" y="1171.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.2" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int) (2 samples, 0.04%)</title><rect x="1132.5" y="1171.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.5" y="1182.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.04%)</title><rect x="1132.5" y="1155.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.5" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (30 samples, 0.66%)</title><rect x="1133.0" y="1203.0" width="7.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.0" y="1214.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="1135.6" y="1187.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.6" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1135.9" y="1187.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.9" y="1198.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.02%)</title><rect x="1136.4" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.4" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (10 samples, 0.22%)</title><rect x="1136.7" y="1187.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.7" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.09%)</title><rect x="1138.2" y="1171.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.2" y="1182.0"></text>
</g>
<g>
<title>retint_signal (1 samples, 0.02%)</title><rect x="1139.0" y="1155.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.0" y="1166.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.02%)</title><rect x="1139.0" y="1139.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1142.0" y="1150.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="1139.0" y="1123.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.0" y="1134.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.02%)</title><rect x="1139.0" y="1107.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1142.0" y="1118.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="1139.0" y="1091.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.0" y="1102.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.02%)</title><rect x="1139.0" y="1075.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.0" y="1086.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.02%)</title><rect x="1139.0" y="1059.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.0" y="1070.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.02%)</title><rect x="1139.3" y="1187.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1142.3" y="1198.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (4 samples, 0.09%)</title><rect x="1139.5" y="1187.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1142.5" y="1198.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="1140.6" y="1187.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1143.6" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (10 samples, 0.22%)</title><rect x="1140.8" y="1203.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.8" y="1214.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.07%)</title><rect x="1142.2" y="1187.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.2" y="1198.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.02%)</title><rect x="1142.9" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1145.9" y="1198.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.02%)</title><rect x="1143.2" y="1187.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.2" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.02%)</title><rect x="1143.5" y="1203.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.5" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.13%)</title><rect x="1143.7" y="1203.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.7" y="1214.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.02%)</title><rect x="1144.5" y="1187.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.5" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.04%)</title><rect x="1144.8" y="1187.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.8" y="1198.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (6 samples, 0.13%)</title><rect x="1145.3" y="1203.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.3" y="1214.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="1145.3" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.3" y="1198.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (1 samples, 0.02%)</title><rect x="1145.3" y="1171.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.3" y="1182.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (5 samples, 0.11%)</title><rect x="1145.6" y="1187.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.6" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.02%)</title><rect x="1145.6" y="1171.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.6" y="1182.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (4 samples, 0.09%)</title><rect x="1145.8" y="1171.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.8" y="1182.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (4 samples, 0.09%)</title><rect x="1145.8" y="1155.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.8" y="1166.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.04%)</title><rect x="1146.9" y="1203.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.9" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1146.9" y="1187.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1147.4" y="1203.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.4" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1147.4" y="1187.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.4" y="1198.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.02%)</title><rect x="1147.6" y="1203.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.6" y="1214.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="1147.6" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.6" y="1198.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1147.6" y="1171.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1150.6" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1147.6" y="1155.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1150.6" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1147.6" y="1139.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.6" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1147.6" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.6" y="1134.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1147.6" y="1107.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.6" y="1118.0"></text>
</g>
<g>
<title>mem_cgroup_newpage_charge (1 samples, 0.02%)</title><rect x="1147.6" y="1091.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.6" y="1102.0"></text>
</g>
<g>
<title>mem_cgroup_charge_common (1 samples, 0.02%)</title><rect x="1147.6" y="1075.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.6" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (7 samples, 0.16%)</title><rect x="1147.9" y="1203.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.9" y="1214.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.04%)</title><rect x="1148.7" y="1187.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.7" y="1198.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.04%)</title><rect x="1149.2" y="1187.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.2" y="1198.0"></text>
</g>
<g>
<title>ShouldNotReachHereNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="1149.7" y="1203.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.7" y="1214.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.02%)</title><rect x="1150.0" y="1203.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1153.0" y="1214.0"></text>
</g>
<g>
<title>Compile::Optimize() (125 samples, 2.77%)</title><rect x="1150.3" y="1235.0" width="32.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.3" y="1246.0">Co..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="1150.3" y="1219.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.3" y="1230.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="1150.3" y="1203.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.3" y="1214.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="1150.3" y="1187.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.3" y="1198.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) (3 samples, 0.07%)</title><rect x="1150.5" y="1219.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.5" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="1150.5" y="1203.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.5" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1150.5" y="1187.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.5" y="1198.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1150.5" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.5" y="1182.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1150.5" y="1155.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.5" y="1166.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1150.5" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.5" y="1150.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1150.5" y="1123.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.5" y="1134.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1150.8" y="1171.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.8" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (1 samples, 0.02%)</title><rect x="1150.8" y="1155.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.8" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1139.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.8" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1123.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.8" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1107.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.8" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1091.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.8" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1075.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.8" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1059.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.8" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1043.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.8" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1027.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.8" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="1011.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.8" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="995.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.8" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="979.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.8" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="963.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.8" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="947.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.8" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="931.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.8" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="915.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.8" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="899.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.8" y="910.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1150.8" y="883.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.8" y="894.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1150.8" y="867.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.8" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (1 samples, 0.02%)</title><rect x="1151.0" y="1203.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.0" y="1214.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.02%)</title><rect x="1151.0" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.0" y="1198.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1151.0" y="1171.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.0" y="1182.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1151.0" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.0" y="1166.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.02%)</title><rect x="1151.0" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.0" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.07%)</title><rect x="1151.3" y="1219.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.3" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.07%)</title><rect x="1151.3" y="1203.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.3" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::add_node_to_connection_graph(Node*, Unique_Node_List*) (1 samples, 0.02%)</title><rect x="1151.8" y="1187.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.8" y="1198.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.04%)</title><rect x="1152.1" y="1219.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.1" y="1230.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1152.3" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.3" y="1214.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1152.3" y="1187.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.3" y="1198.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.02%)</title><rect x="1152.3" y="1171.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.3" y="1182.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1152.3" y="1155.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1155.3" y="1166.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.02%)</title><rect x="1152.6" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.6" y="1230.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.02%)</title><rect x="1152.6" y="1203.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.6" y="1214.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.02%)</title><rect x="1152.6" y="1187.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.6" y="1198.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1152.6" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.6" y="1182.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1152.6" y="1155.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.6" y="1166.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.02%)</title><rect x="1152.6" y="1139.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.6" y="1150.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1152.6" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (94 samples, 2.08%)</title><rect x="1152.9" y="1219.0" width="24.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.9" y="1230.0">P..</text>
</g>
<g>
<title>HaltNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1152.9" y="1203.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.9" y="1214.0"></text>
</g>
<g>
<title>Node::is_CFG() const (3 samples, 0.07%)</title><rect x="1153.1" y="1203.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.1" y="1214.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.02%)</title><rect x="1153.9" y="1203.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.09%)</title><rect x="1154.2" y="1203.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.2" y="1214.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1154.4" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.4" y="1198.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.02%)</title><rect x="1154.7" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.7" y="1198.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="1155.0" y="1187.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1158.0" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1155.0" y="1171.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1158.0" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1155.0" y="1155.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.0" y="1166.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1155.0" y="1139.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.0" y="1150.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.02%)</title><rect x="1155.0" y="1123.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.0" y="1134.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1155.0" y="1107.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.0" y="1118.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1155.0" y="1091.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.0" y="1102.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1155.0" y="1075.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (7 samples, 0.16%)</title><rect x="1155.2" y="1203.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1156.8" y="1187.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (70 samples, 1.55%)</title><rect x="1157.1" y="1203.0" width="18.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.1" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (65 samples, 1.44%)</title><rect x="1158.1" y="1187.0" width="17.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.1" y="1198.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.02%)</title><rect x="1158.4" y="1171.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (2 samples, 0.04%)</title><rect x="1158.6" y="1171.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (61 samples, 1.35%)</title><rect x="1159.1" y="1171.0" width="16.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.1" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.04%)</title><rect x="1171.4" y="1155.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.4" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.04%)</title><rect x="1171.4" y="1139.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const (11 samples, 0.24%)</title><rect x="1172.0" y="1155.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.0" y="1166.0"></text>
</g>
<g>
<title>retint_signal (1 samples, 0.02%)</title><rect x="1174.8" y="1155.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1177.8" y="1166.0"></text>
</g>
<g>
<title>do_notify_resume (1 samples, 0.02%)</title><rect x="1174.8" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.8" y="1150.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.02%)</title><rect x="1174.8" y="1123.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.8" y="1134.0"></text>
</g>
<g>
<title>task_numa_work (1 samples, 0.02%)</title><rect x="1174.8" y="1107.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1177.8" y="1118.0"></text>
</g>
<g>
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="1174.8" y="1091.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.8" y="1102.0"></text>
</g>
<g>
<title>change_protection (1 samples, 0.02%)</title><rect x="1174.8" y="1075.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.8" y="1086.0"></text>
</g>
<g>
<title>change_pte_range (1 samples, 0.02%)</title><rect x="1174.8" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.8" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.02%)</title><rect x="1175.1" y="1187.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (4 samples, 0.09%)</title><rect x="1175.4" y="1203.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.4" y="1214.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1175.6" y="1187.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.6" y="1198.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.02%)</title><rect x="1175.9" y="1187.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.02%)</title><rect x="1176.1" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1176.4" y="1203.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.4" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="1176.4" y="1187.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.4" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.02%)</title><rect x="1176.4" y="1171.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::register_new_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1176.4" y="1155.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="1166.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.02%)</title><rect x="1176.4" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.4" y="1150.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 0.02%)</title><rect x="1176.4" y="1123.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1179.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="1176.7" y="1203.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.7" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1176.7" y="1187.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.7" y="1198.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1176.9" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.9" y="1182.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1177.2" y="1203.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (17 samples, 0.38%)</title><rect x="1177.4" y="1219.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.4" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (17 samples, 0.38%)</title><rect x="1177.4" y="1203.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.4" y="1214.0"></text>
</g>
<g>
<title>AddNode::Identity(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1177.4" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.4" y="1198.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.02%)</title><rect x="1177.4" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.4" y="1182.0"></text>
</g>
<g>
<title>TypeLong::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1177.4" y="1155.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.4" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1177.4" y="1139.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.4" y="1150.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="1177.7" y="1187.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.7" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1178.0" y="1171.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.0" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1178.0" y="1155.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.0" y="1166.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="1178.0" y="1139.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.0" y="1150.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1178.2" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.2" y="1198.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1178.2" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.2" y="1182.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1178.2" y="1155.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.2" y="1166.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1178.2" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.2" y="1150.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1178.5" y="1187.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.5" y="1198.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1178.5" y="1171.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.5" y="1182.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1178.8" y="1187.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.07%)</title><rect x="1179.0" y="1187.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.0" y="1198.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.02%)</title><rect x="1179.0" y="1171.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.0" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1179.3" y="1171.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.3" y="1182.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.02%)</title><rect x="1179.3" y="1155.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.3" y="1166.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.02%)</title><rect x="1179.5" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.5" y="1182.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.02%)</title><rect x="1179.5" y="1155.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.5" y="1166.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1179.8" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.8" y="1198.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (3 samples, 0.07%)</title><rect x="1180.1" y="1187.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.1" y="1198.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="1180.1" y="1171.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.1" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.04%)</title><rect x="1180.3" y="1171.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.04%)</title><rect x="1180.3" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.3" y="1166.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.02%)</title><rect x="1180.3" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.3" y="1150.0"></text>
</g>
<g>
<title>TypeRawPtr::hash() const (1 samples, 0.02%)</title><rect x="1180.3" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.3" y="1134.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="1180.6" y="1139.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.6" y="1150.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.07%)</title><rect x="1180.8" y="1187.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.8" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (3 samples, 0.07%)</title><rect x="1180.8" y="1171.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.8" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1155.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.8" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1139.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.8" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1123.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.8" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1107.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.8" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1091.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.8" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1075.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.8" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.07%)</title><rect x="1180.8" y="1059.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.8" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="1043.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.8" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.8" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="1011.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.8" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="995.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="963.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.8" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1180.8" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.8" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.8" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="915.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.8" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.8" y="862.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1180.8" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.8" y="846.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1180.8" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.1" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="942.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.1" y="926.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.4" y="1043.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.4" y="1054.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1181.4" y="1027.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.4" y="1038.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1181.6" y="1187.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.6" y="1198.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1181.6" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="1182.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.6" y="1155.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="1166.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="1150.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (4 samples, 0.09%)</title><rect x="1181.9" y="1219.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="1181.9" y="1203.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1181.9" y="1187.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.9" y="1198.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1181.9" y="1171.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.9" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.9" y="1155.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1181.9" y="1139.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.9" y="1150.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.9" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.9" y="1134.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1182.2" y="1171.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.2" y="1182.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.02%)</title><rect x="1182.2" y="1155.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.2" y="1166.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1182.4" y="1171.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1182.7" y="1203.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.47%)</title><rect x="1182.9" y="1235.0" width="5.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.9" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.47%)</title><rect x="1182.9" y="1219.0" width="5.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (21 samples, 0.47%)</title><rect x="1182.9" y="1203.0" width="5.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.9" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.44%)</title><rect x="1182.9" y="1187.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.02%)</title><rect x="1182.9" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.9" y="1182.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.02%)</title><rect x="1182.9" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.9" y="1166.0"></text>
</g>
<g>
<title>Parse::merge_exception(int) (1 samples, 0.02%)</title><rect x="1182.9" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.42%)</title><rect x="1183.2" y="1171.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.2" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (19 samples, 0.42%)</title><rect x="1183.2" y="1155.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.2" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.33%)</title><rect x="1183.2" y="1139.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.2" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.33%)</title><rect x="1183.2" y="1123.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.29%)</title><rect x="1183.2" y="1107.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.29%)</title><rect x="1183.2" y="1091.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.29%)</title><rect x="1183.2" y="1075.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.2" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.27%)</title><rect x="1183.2" y="1059.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.2" y="1070.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.07%)</title><rect x="1183.5" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.5" y="1054.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.04%)</title><rect x="1183.5" y="1027.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.5" y="1038.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1183.5" y="1011.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.5" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.04%)</title><rect x="1183.5" y="995.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.5" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.04%)</title><rect x="1183.5" y="979.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.5" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1183.5" y="963.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.5" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1183.5" y="947.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.5" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.04%)</title><rect x="1183.5" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.5" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1183.5" y="915.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.5" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1183.5" y="899.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.5" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.5" y="883.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.5" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.5" y="867.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.5" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1183.5" y="851.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.5" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1183.5" y="835.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.5" y="846.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.5" y="819.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.5" y="830.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.02%)</title><rect x="1183.5" y="803.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.5" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_ldc(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1183.7" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.7" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (1 samples, 0.02%)</title><rect x="1183.7" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.7" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index(constantPoolHandle, int, int, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.7" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.7" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index_impl(constantPoolHandle, int, int, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.7" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.7" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.02%)</title><rect x="1183.7" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.7" y="862.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1184.0" y="1027.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="1038.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.0" y="1011.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.0" y="1022.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.0" y="995.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.0" y="1006.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.0" y="979.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.0" y="990.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.02%)</title><rect x="1184.0" y="963.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.0" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1184.0" y="947.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.0" y="958.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.0" y="931.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.0" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.13%)</title><rect x="1184.2" y="1043.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.2" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.13%)</title><rect x="1184.2" y="1027.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.13%)</title><rect x="1184.2" y="1011.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.11%)</title><rect x="1184.2" y="995.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.11%)</title><rect x="1184.2" y="979.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.11%)</title><rect x="1184.2" y="963.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1184.2" y="947.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1184.2" y="931.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1184.2" y="915.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1184.2" y="899.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1184.2" y="883.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1184.2" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1184.2" y="851.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1184.2" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1184.2" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1184.2" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1184.2" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1184.2" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.2" y="782.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1184.2" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="766.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_ordered_store(BasicType) (1 samples, 0.02%)</title><rect x="1184.2" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>GraphKit::store_oop_to_unknown(Node*, Node*, Node*, TypePtr const*, Node*, BasicType, MemNode::MemOrd) (1 samples, 0.02%)</title><rect x="1184.2" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.2" y="734.0"></text>
</g>
<g>
<title>GraphKit::store_oop(Node*, Node*, Node*, TypePtr const*, Node*, TypeOopPtr const*, BasicType, bool, MemNode::MemOrd) (1 samples, 0.02%)</title><rect x="1184.2" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>GraphKit::g1_write_barrier_post(Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) (1 samples, 0.02%)</title><rect x="1184.2" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.2" y="702.0"></text>
</g>
<g>
<title>GraphKit::g1_mark_card(IdealKit&amp;, Node*, Node*, unsigned int, Node*, Node*, Node*, TypeFunc const*) (1 samples, 0.02%)</title><rect x="1184.2" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.2" y="686.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1184.2" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="670.0"></text>
</g>
<g>
<title>SafePointNode::set_next_exception(SafePointNode*) (1 samples, 0.02%)</title><rect x="1184.5" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1184.8" y="867.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1184.8" y="851.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="862.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool) (1 samples, 0.02%)</title><rect x="1184.8" y="835.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="846.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1184.8" y="819.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="830.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1184.8" y="803.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="814.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1184.8" y="787.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.8" y="798.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1184.8" y="771.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1184.8" y="755.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.8" y="766.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1184.8" y="739.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.8" y="750.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.02%)</title><rect x="1184.8" y="723.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.8" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.0" y="947.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.0" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.0" y="931.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.0" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.0" y="899.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.0" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.0" y="867.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.0" y="851.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.0" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.0" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.0" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.0" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.0" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.0" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.0" y="771.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.0" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.0" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.0" y="739.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.0" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.0" y="723.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.0" y="707.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.0" y="691.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.0" y="675.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.0" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="670.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.02%)</title><rect x="1185.0" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="654.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.02%)</title><rect x="1185.0" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.0" y="638.0"></text>
</g>
<g>
<title>TypeOopPtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1185.0" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.0" y="622.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1185.0" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.0" y="606.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.02%)</title><rect x="1185.0" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="590.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1185.0" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.0" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.3" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.3" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.3" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.3" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.3" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.3" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.3" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.3" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.3" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.3" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.3" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.3" y="499.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.3" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.3" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.3" y="451.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.3" y="435.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.3" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.3" y="419.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.3" y="403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.3" y="387.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.3" y="371.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.3" y="355.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.3" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.3" y="339.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.3" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.3" y="323.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.3" y="307.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.3" y="291.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.3" y="275.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.3" y="286.0"></text>
</g>
<g>
<title>TypeInt::singleton() const (1 samples, 0.02%)</title><rect x="1185.3" y="259.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="270.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.02%)</title><rect x="1185.6" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.6" y="1006.0"></text>
</g>
<g>
<title>Parse::merge_memory_edges(MergeMemNode*, int, bool) (1 samples, 0.02%)</title><rect x="1185.6" y="979.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="990.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1185.6" y="963.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.6" y="974.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1185.6" y="947.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.6" y="958.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.8" y="1043.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.8" y="1054.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.8" y="1027.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.8" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.8" y="1011.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.8" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.8" y="995.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.8" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.8" y="963.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.8" y="947.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.8" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.8" y="915.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.8" y="899.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.8" y="883.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.8" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.8" y="851.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.8" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.8" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.8" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.8" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.8" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.8" y="787.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.8" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.8" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.8" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.8" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.8" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.8" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.8" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.8" y="659.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.8" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.8" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.8" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.8" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.8" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.8" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="547.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.8" y="558.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.02%)</title><rect x="1185.8" y="531.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.8" y="542.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="515.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.8" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1186.1" y="723.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.1" y="734.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.02%)</title><rect x="1186.1" y="707.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.3" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.3" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.3" y="1054.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool) (1 samples, 0.02%)</title><rect x="1186.3" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="1038.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency) (1 samples, 0.02%)</title><rect x="1186.3" y="1011.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="1022.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1186.3" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="1006.0"></text>
</g>
<g>
<title>LoadNode::hash() const (1 samples, 0.02%)</title><rect x="1186.3" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="990.0"></text>
</g>
<g>
<title>ciMethod::method_data() (2 samples, 0.04%)</title><rect x="1186.6" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="1118.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="1186.6" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="1102.0"></text>
</g>
<g>
<title>MethodData::mileage_of(Method*) (1 samples, 0.02%)</title><rect x="1186.6" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="1086.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.02%)</title><rect x="1186.6" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.6" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1186.9" y="1091.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.1" y="1139.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.1" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.1" y="1123.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1187.1" y="1107.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1187.1" y="1091.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1187.1" y="1075.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1187.1" y="1059.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1187.1" y="1043.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1187.1" y="1027.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1187.1" y="1011.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1187.1" y="995.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1187.1" y="979.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1187.1" y="963.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1187.1" y="947.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1187.1" y="931.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1187.1" y="915.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1187.1" y="899.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1187.1" y="883.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1187.1" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1187.1" y="851.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.1" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.1" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.1" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.1" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.1" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.1" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.1" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.1" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.1" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.1" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="1187.1" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1187.1" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="638.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1187.1" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.1" y="622.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1187.1" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1187.4" y="835.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1187.4" y="819.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1187.4" y="803.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1187.4" y="787.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1187.4" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1187.4" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1187.4" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1187.4" y="723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1187.4" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1187.4" y="691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1187.4" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1187.4" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1187.4" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1187.4" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1187.4" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1187.4" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1187.4" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1187.4" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1187.4" y="547.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.4" y="531.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.4" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.4" y="515.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.4" y="499.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.4" y="483.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.4" y="467.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.4" y="451.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.4" y="435.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.4" y="419.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.4" y="403.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.4" y="387.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.4" y="371.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.4" y="355.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="366.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1187.4" y="339.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="350.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1187.4" y="323.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="334.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1187.4" y="307.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1187.4" y="291.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1187.4" y="275.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1187.4" y="259.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="270.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1187.4" y="243.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1187.4" y="227.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="238.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1187.4" y="211.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="222.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.4" y="195.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="206.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.4" y="179.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="190.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.4" y="163.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="174.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1187.4" y="147.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="158.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1187.4" y="131.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="142.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.4" y="115.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="126.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.02%)</title><rect x="1187.4" y="99.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="110.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1187.4" y="83.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="94.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.02%)</title><rect x="1187.4" y="67.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="78.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.02%)</title><rect x="1187.4" y="51.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="62.0"></text>
</g>
<g>
<title>FieldType::get_array_info(Symbol*, FieldArrayInfo&amp;, Thread*) (1 samples, 0.02%)</title><rect x="1187.4" y="35.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="46.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.6" y="531.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.6" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.6" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.6" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.6" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.6" y="510.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1187.6" y="483.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.6" y="494.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="1187.6" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.6" y="478.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.9" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.9" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.9" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.9" y="995.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1187.9" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.9" y="990.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.02%)</title><rect x="1188.2" y="1187.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.2" y="1198.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1188.2" y="1171.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="1182.0"></text>
</g>
<g>
<title>Node::uncast() const (1 samples, 0.02%)</title><rect x="1188.2" y="1155.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="1166.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*) (2 samples, 0.04%)</title><rect x="1188.4" y="1235.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.4" y="1246.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1188.4" y="1219.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="1230.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1188.7" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="1230.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.02%)</title><rect x="1189.0" y="1235.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="1246.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.02%)</title><rect x="1189.2" y="1283.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.2" y="1294.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1189.2" y="1267.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="1278.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1189.2" y="1251.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.2" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="1189.2" y="1235.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1192.2" y="1246.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1189.2" y="1219.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.2" y="1230.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1189.2" y="1203.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.2" y="1214.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.2" y="1187.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.2" y="1198.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.02%)</title><rect x="1189.2" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1192.2" y="1182.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="1189.2" y="1155.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1192.2" y="1166.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="1189.5" y="1299.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="1310.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.02%)</title><rect x="1189.5" y="1283.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="1294.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.02%)</title><rect x="1189.5" y="1267.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="1278.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.02%)</title><rect x="1189.5" y="1251.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="1262.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.02%)</title><rect x="1189.5" y="1235.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="1246.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int_mb(int) (1 samples, 0.02%)</title><rect x="1189.5" y="1219.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="1230.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="1331.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="1342.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.02%)</title><rect x="1189.7" y="1315.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.7" y="1326.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1189.7" y="1299.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.7" y="1310.0"></text>
</g>
</g>
</svg>
